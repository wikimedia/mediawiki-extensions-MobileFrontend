{
  "comments": [
    {
      "key": {
        "uuid": "24fe0da8_102bd63f",
        "filename": "src/mobile.startup/Skin.js",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 94
      },
      "writtenOn": "2018-10-11T21:42:38Z",
      "side": 1,
      "message": "This makes load order a problem so we should avoid this as part of this migration IMO.\n\nOne solution would be fixing the root issue - removing those globals. We need to do it sometime, so we might want to consider doing that now.\n\nAs a short term solution we could move moduleLoader into its own module....\n\nmoduleSingleton.js:\nmodule.exports \u003d new ModuleLoader();\n\n\nand import it here..\nM \u003d require( \u0027./moduleSingleton\u0027)\n\nand inside mobile.startup...",
      "revId": "71950bbb67222380ff573e4c17e12a80b8a94449",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46ad369c_c059f7c1",
        "filename": "src/mobile.startup/mobile.startup.js",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 94
      },
      "writtenOn": "2018-10-11T21:42:38Z",
      "side": 1,
      "message": "I\u0027m fairly confident we can avoid doing this.",
      "revId": "71950bbb67222380ff573e4c17e12a80b8a94449",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ee8fd20_7c11acb4",
        "filename": "tests/node-qunit/mobile.startup/Skin.test.js",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 94
      },
      "writtenOn": "2018-10-11T21:42:38Z",
      "side": 1,
      "message": "Is there a better way to do this.\nWill webpack allow us to import this (either via json or HTML) ?\n\nI\u0027d love our tests to be more readable going forward.",
      "revId": "71950bbb67222380ff573e4c17e12a80b8a94449",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6be4e59_499112d9",
        "filename": "tests/node-qunit/mobile.startup/Skin.test.js",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 6176
      },
      "writtenOn": "2018-10-12T20:08:42Z",
      "side": 1,
      "message": "We could definitely use a webpack html loader here but that would only work with the browser qunit rn since our headless qunit tests don\u0027t use the webpack outputted tests.mobilefrontend.js file. \n\nDoing something like what Jan has done here might be a possibility though: \n\nhttps://gerrit.wikimedia.org/r/#/c/mediawiki/extensions/MobileFrontend/+/466606/3/tests/node-qunit/utils/mockMediaWiki.js\n\nI see two possibilities right now:\n\n1) Use node fs.readFile within the mw.template.get method of mockMediaWiki.js for headless qunit and let the Special:JavascriptTest page use the real mw.template.get (as Jan has done).\n\n2) Have node-qunit run the tests from a webpack outputted file (maybe we could use the same file as the one used for Special:JavascriptTest?) which would enable us to use webpack loaders within the tests.\n\nDo you have any other ideas?",
      "parentUuid": "4ee8fd20_7c11acb4",
      "revId": "71950bbb67222380ff573e4c17e12a80b8a94449",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a3e90ba_6553b3e1",
        "filename": "tests/node-qunit/mobile.startup/Skin.test.js",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 94
      },
      "writtenOn": "2018-10-12T20:20:14Z",
      "side": 1,
      "message": "I\u0027d be for using fs here to load a file. No need to use mw.template here, as all we\u0027re doing is getting html right?\nWebpack will take care of the rest after all.\n\ne.g. \nvar mockHtml \u003d fs.loadFileSync(\u0027mocks/file.html\u0027)\n...\n\nvar $content \u003d $( \u0027\u003cdiv\u003e\u0027 ).append( mockHtml )",
      "parentUuid": "a6be4e59_499112d9",
      "revId": "71950bbb67222380ff573e4c17e12a80b8a94449",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}