{
  "comments": [
    {
      "key": {
        "uuid": "0efd9372_aab927e8",
        "filename": "resources/mobile.references.gateway/ReferencesMobileViewGateway.js",
        "patchSetId": 6
      },
      "lineNbr": 5,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-06-13T23:08:26Z",
      "side": 1,
      "message": "Having these as globals means that if a client of ReferencesMobileViewGateway wanted to ensure something didn\u0027t come from cache it couldn\u0027t.\n\nThe introduction of a clearCache for testing purposes makes me wonder if this is correct.\n\nWhy couldn\u0027t these be internal to the ReferencesMobileViewGateway instance? A caller can share caching between objects if they reuse the object.",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_50c78c15",
        "filename": "resources/mobile.references.gateway/ReferencesMobileViewGateway.js",
        "patchSetId": 6
      },
      "lineNbr": 5,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-06-14T07:51:29Z",
      "side": 1,
      "message": "As things currently stand, I don\u0027t see a need for clients to clear the cache. If that\u0027s necessary, it can easily be achieved with a flag. Moreover, how often do page references change? Note that we only use this gateway to received references for the current page and current revision.\n\nWe construct instances of the class in different places so this is a cleaner solution that tossing around the instance just to make sure the cache is being shared. If that\u0027s the goal why don\u0027t we create an instance in this file and share it? Why even bother sharing the class itself?",
      "parentUuid": "0efd9372_aab927e8",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_506b0cee",
        "filename": "resources/mobile.references.gateway/ReferencesMobileViewGateway.js",
        "patchSetId": 6
      },
      "lineNbr": 5,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-06-14T08:27:03Z",
      "side": 1,
      "message": "Future proof! For example, imagine we ported this to a npm module and were loading pages via ajax (single page web app) and loaded different revisions of the same page via a revision history.\n\nDo we have an Classes that do similar things? Why not just have it as a property? Why introduce this side effect when it\u0027s just as easy to store it inside ReferencesMobileViewGateway via this.references \u003d {} ?",
      "parentUuid": "0efd9372_50c78c15",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_70361002",
        "filename": "resources/mobile.references.gateway/ReferencesMobileViewGateway.js",
        "patchSetId": 6
      },
      "lineNbr": 5,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-06-14T08:41:48Z",
      "side": 1,
      "message": "OK. Say a user taps on a reference to bring up a reference dialog (mobile.references module). This module has it\u0027s own instance of references gateway. Now, the user wants to expand the references section. The references section uses Skin\u0027s instance of references gateway. How should we share the two? Should skin provide the references gateway to both modules?",
      "parentUuid": "0efd9372_506b0cee",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_d338a6c9",
        "filename": "resources/mobile.references.gateway/ReferencesMobileViewGateway.js",
        "patchSetId": 6
      },
      "lineNbr": 5,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-06-14T09:41:37Z",
      "side": 1,
      "message": "var ref \u003d new ReferencesGateway();\nM.define( \u0027skins.minerva.scripts/referenceGateway\u0027, ref );\nnew Page( { refGateway: M.require( \u0027skins.minerva.scripts/referenceGateway\u0027 } )\n\nwould be one way.",
      "parentUuid": "0efd9372_70361002",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_fe29319b",
        "filename": "resources/mobile.references.gateway/ReferencesMobileViewGateway.js",
        "patchSetId": 6
      },
      "lineNbr": 5,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-06-14T15:14:29Z",
      "side": 1,
      "message": "Sure, that\u0027s one way. I still think that the use case you described (npm module) can easily be accommodated by adding another key (revid) to the cache when the time comes. Creating an instance of a class as a module clutters the codebase, then you\u0027ll have to keep track of instance in order to use the cache. There will be cases where multiple instance cache the same thing. I could also argue that without the additional revid key, you\u0027d have to create multiple instance for the same page if you want different versions. I think we should let other devs to take a look at this. I strongly feel that this is the right way of doing things. As cache can be bypassed by passing a simple argument if we have a need to do so later.\n\n@phuedx, @joakino, @jhobs what do you think?",
      "parentUuid": "0efd9372_d338a6c9",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_2aeff7ae",
        "filename": "resources/mobile.references.gateway/ReferencesMobileViewGateway.js",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-06-13T23:08:26Z",
      "side": 1,
      "message": "Note the section.id returned by mobile view takes into account all subsections e.g. h3,h4,h5 etc... and is not the same as the section id in the collapsible heading. As a result this doesn\u0027t work for several of my test articles.\n\nYou\u0027d be better off relying on the anchor as an id.",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_90d1f4d2",
        "filename": "resources/mobile.references.gateway/ReferencesMobileViewGateway.js",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-06-14T07:51:29Z",
      "side": 1,
      "message": "Thanks, I\u0027ll look into it.",
      "parentUuid": "0efd9372_2aeff7ae",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_4ac23b5e",
        "filename": "resources/mobile.references.gateway/ReferencesMobileViewGateway.js",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-06-13T23:08:26Z",
      "side": 1,
      "message": "You are using a Page as an index to an Object - surely not intentional?",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_f0d7a0c2",
        "filename": "resources/mobile.references.gateway/ReferencesMobileViewGateway.js",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-06-14T07:51:29Z",
      "side": 1,
      "message": "Good catch.",
      "parentUuid": "0efd9372_4ac23b5e",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_ea996f81",
        "filename": "resources/mobile.startup/Skin.js",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-06-13T23:08:26Z",
      "side": 1,
      "message": "Although it currently isn\u0027t (although in tests should be) the Skin class could be initialised on something other than \u0027#\u0027 + data.contentId\nWhy not pass this in from the caller which has access to the current skin?",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_b0e518a2",
        "filename": "resources/mobile.startup/Skin.js",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-06-14T07:51:29Z",
      "side": 1,
      "message": "Pass $content? We can do so, but I was a little cautious about not passing an object as this function can change it unintentionally. I\u0027d rather pass the ID (as above) and rest assured that the function takes the sole responsibility for any DOM changes.",
      "parentUuid": "0efd9372_ea996f81",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_10818492",
        "filename": "resources/mobile.startup/Skin.js",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-06-14T08:27:03Z",
      "side": 1,
      "message": "I\u0027m not sure I follow. We already pass in an instance of page which is tied to $content.\n\nConsider\n\u003e $( \u0027\u003cdiv id\u003d\"foo\"\u003ehello\u003c/div\u003e\u0027 ).appendTo( \u0027body\u0027 );\n\u003e var p \u003d new Page( { el: $( \u0027\u003cdiv\u003e\u003cdiv id\u003d\"foo\"\u003etext\u003c/div\u003e\u003c/div\u003e\" ) } );\n\u003e new Skin( { page: p } );\n\nI\u0027m not saying this will happen (outside unit tests) but I\u0027m saying this doesn\u0027t seem correct to me.",
      "parentUuid": "0efd9372_b0e518a2",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_10586458",
        "filename": "resources/mobile.startup/Skin.js",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-06-14T08:41:48Z",
      "side": 1,
      "message": "I find it overkill to create a Page object just to query a section. Remember, we\u0027re talking about sections here and we don\u0027t have any knowledge of them at the time of skin construction.",
      "parentUuid": "0efd9372_10818492",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_936e1ec3",
        "filename": "resources/mobile.startup/Skin.js",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-06-14T09:41:37Z",
      "side": 1,
      "message": "No true. You don\u0027t need to create one. A Skin has one already (see below).",
      "parentUuid": "0efd9372_10586458",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_79fc3b09",
        "filename": "resources/mobile.startup/Skin.js",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-06-14T15:14:29Z",
      "side": 1,
      "message": "I don\u0027t understand why I need an instance of the page. I need the reference section ID so that I can query the DOM. If a user is toggling a ref section, how would I utilise an instance of a page when I need which section the user toggled?",
      "parentUuid": "0efd9372_936e1ec3",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_6a8c5f33",
        "filename": "resources/mobile.startup/Skin.js",
        "patchSetId": 6
      },
      "lineNbr": 58,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-06-13T23:08:26Z",
      "side": 1,
      "message": "Creation of a ReferencesMobileViewGateway here seems wrong to me. An instance should be passed into Skin.",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_30f9284b",
        "filename": "resources/mobile.startup/Skin.js",
        "patchSetId": 6
      },
      "lineNbr": 58,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-06-14T07:51:29Z",
      "side": 1,
      "message": "I was thinking about not loading the module if lazy loading of references was not in use. Having thought about it you\u0027re right as we\u0027re loading this code in the front-end anyway.",
      "parentUuid": "0efd9372_6a8c5f33",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_7371faa6",
        "filename": "resources/mobile.startup/Skin.js",
        "patchSetId": 6
      },
      "lineNbr": 89,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-06-14T09:41:37Z",
      "side": 1,
      "message": "Look a page!",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_b906a31e",
        "filename": "resources/mobile.startup/Skin.js",
        "patchSetId": 6
      },
      "lineNbr": 89,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-06-14T15:14:29Z",
      "side": 1,
      "message": "Which is of no use to me. I can directly query the page by doing `self.page` if I need it. I need the section.",
      "parentUuid": "0efd9372_7371faa6",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_5374b696",
        "filename": "resources/mobile.startup/Skin.js",
        "patchSetId": 6
      },
      "lineNbr": 118,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-06-14T09:41:37Z",
      "side": 1,
      "message": "you could pass it in here!",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_2a5257e2",
        "filename": "resources/mobile.toggle/toggle.js",
        "patchSetId": 6
      },
      "lineNbr": 150,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-06-13T23:08:26Z",
      "side": 1,
      "message": "Having two events with so similar names is confusing, how could names be made clearer?\n\nWhat advantage does hooking to before the load (one line above) have over after given that toggling appears to be an atomic action from a user interface point of view?",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_5095cce5",
        "filename": "resources/mobile.toggle/toggle.js",
        "patchSetId": 6
      },
      "lineNbr": 150,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-06-14T07:51:29Z",
      "side": 1,
      "message": "Should I change it to something like \"section-is-about-to-be-toggled\"? I thought the comment above was good enough.\n\nThe advantage we have here is that the consumer has time to change the section content before it\u0027s displayed to the user so there is no FOUC.",
      "parentUuid": "0efd9372_2a5257e2",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_704f3098",
        "filename": "resources/mobile.toggle/toggle.js",
        "patchSetId": 6
      },
      "lineNbr": 150,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-06-14T08:27:03Z",
      "side": 1,
      "message": "I see.\nYou could update the spinners in the initialisation of the Skin? That way they are already loaded by the time you open the section.\n\nThis confused me as the toggling is synchronous and the loading of references is asynchronous.\n\nIs it worth an additional event we have to think about?\n\nFeel free to obtain other opinions but it\u0027s my feeling that this shouldn\u0027t be necessary. I hate global events - they are hard to document, support and keep track of.",
      "parentUuid": "0efd9372_5095cce5",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_305da84b",
        "filename": "resources/mobile.toggle/toggle.js",
        "patchSetId": 6
      },
      "lineNbr": 150,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-06-14T08:41:48Z",
      "side": 1,
      "message": "I wanted to not insert spinners for each reference section without making sure that the section will ever be collapsed by the user. Besides, inserting spinners means detaching the contents of the reference section, and not just one node, but all children. I\u0027d then need to cache this data so that in case references gateway fails I\u0027ll have to re-insert it. So I\u0027d be doing these operations even if the user doesn\u0027t click on any reference section. This may increase memory consumption, especially noticeable on older mobile phones. I\u0027d rather deal with global events and find a better way to figure out how to document them in a later patch.",
      "parentUuid": "0efd9372_704f3098",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_4ad87b7f",
        "filename": "tests/qunit/mobile.references.gateway/test_ReferencesMobileViewGateway.js",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-06-13T23:08:26Z",
      "side": 1,
      "message": "Any reason why you switch away from using the template? Surely the template is more readable?",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_909f3406",
        "filename": "tests/qunit/mobile.references.gateway/test_ReferencesMobileViewGateway.js",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-06-14T07:51:29Z",
      "side": 1,
      "message": "Templates are good when constructing jQuery objects and inserting them to the DOM or doing some manipulation. Here I\u0027m trying to mimic an API response and don\u0027t need to use mustache to fetch the template and then fetch its HTML string. This seemed cleaner as you can see what the API is returning easily.",
      "parentUuid": "0efd9372_4ad87b7f",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_b0499892",
        "filename": "tests/qunit/mobile.references.gateway/test_ReferencesMobileViewGateway.js",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-06-14T08:27:03Z",
      "side": 1,
      "message": "Oh I missed the `1` in which case is this not a breaking change? You are changing the function signature and that should be documented.\n\nIt still seems strange to me that you would have done this. It feels like it would have been less hassle to simply do { 1: mw.template.get( \u0027tests.mobilefrontend\u0027, \u0027refSection.html\u0027 )\n.render() } ) (and more readble - given I would have noticed that `1` first time around! :)",
      "parentUuid": "0efd9372_909f3406",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_d05d3c4d",
        "filename": "tests/qunit/mobile.references.gateway/test_ReferencesMobileViewGateway.js",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-06-14T08:41:48Z",
      "side": 1,
      "message": "This is a new function, I didn\u0027t see any need to keep the old one around.\n\nAlso, render() won\u0027t do it, because I need the HTML string.",
      "parentUuid": "0efd9372_b0499892",
      "revId": "c02cea121d90065a19897231e4eda94f0fd29703",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}