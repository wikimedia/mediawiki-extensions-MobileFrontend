{
  "comments": [
    {
      "key": {
        "uuid": "1908c4f0_c720b426",
        "filename": "includes/MobileFrontend.hooks.php",
        "patchSetId": 6
      },
      "lineNbr": 1351,
      "author": {
        "id": 128
      },
      "writtenOn": "2018-08-21T10:31:01Z",
      "side": 1,
      "message": "It\u0027s annoying that this hook doesn\u0027t get the ContentHandler object that calls it. My bad, sorry. It would make sense only to use the InlineDiffEngine for textual content.",
      "revId": "289bfb21de6552795ac67614cc74266610be950a",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d134df22_bc109bfc",
        "filename": "includes/MobileFrontend.hooks.php",
        "patchSetId": 6
      },
      "lineNbr": 1356,
      "author": {
        "id": 94
      },
      "writtenOn": "2018-08-16T20:20:14Z",
      "side": 1,
      "message": "For safety (and compatibility with older mediawiki versions) check $differenceEngine is not null here",
      "revId": "289bfb21de6552795ac67614cc74266610be950a",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82382d29_cedf511e",
        "filename": "includes/MobileFrontend.hooks.php",
        "patchSetId": 6
      },
      "lineNbr": 1356,
      "author": {
        "id": 389
      },
      "writtenOn": "2018-08-17T07:18:14Z",
      "side": 1,
      "message": "What should happen if it is null? We could throw an exception, and that makes problems more obvious, but I don\u0027t think you can improve much other than that. If you treat it as no match (which is the current behavior since get_class(null) will return \u0027MobileFrontendHooks\u0027), inline diffs will essentially be disabled on older MediaWiki. If you treat it as a match, InlineDifferenceEngine will be called for non-text content types (and error out probably).\n\nMobileFrontend has a branch compatibilty policy so I assumed compatibility with older versions is not a concern. If it is, the patch could be written differently - split out the slot-level stuff to InlineSlotDiffRenderer, and use GetSlotDiffRenderer instead of GetDifferenceEngine. The dependency would be a bit more awkward though as this patch and the core diff patch would both require each other to not break.",
      "parentUuid": "d134df22_bc109bfc",
      "revId": "289bfb21de6552795ac67614cc74266610be950a",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b359587_7c3a5040",
        "filename": "includes/MobileFrontend.hooks.php",
        "patchSetId": 6
      },
      "lineNbr": 1356,
      "author": {
        "id": 94
      },
      "writtenOn": "2018-08-17T18:46:18Z",
      "side": 1,
      "message": "An error seems more appropriate here to me.\nRight now, it will just show a notice if differenceEngine is undefined which only displays to the sysadmin (unless configured differently).\n\nWe tend to get a lot of topics on Extension talk:MobileFrontend about incompatibility issues, so it\u0027s clear to me that consumers don\u0027t follow the branching policy. If the error is rendered to the user at least that can be reported up and dealt with.\n\nDon\u0027t worry about getting it compatible with older branches.",
      "parentUuid": "82382d29_cedf511e",
      "revId": "289bfb21de6552795ac67614cc74266610be950a",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48a22a22_5ad438d4",
        "filename": "includes/MobileFrontend.hooks.php",
        "patchSetId": 6
      },
      "lineNbr": 1356,
      "author": {
        "id": 389
      },
      "writtenOn": "2018-08-20T13:31:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b359587_7c3a5040",
      "revId": "289bfb21de6552795ac67614cc74266610be950a",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}