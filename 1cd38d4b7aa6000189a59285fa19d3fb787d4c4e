{
  "comments": [
    {
      "key": {
        "uuid": "bf87c472_f5e6f64c",
        "filename": "resources/mobile.languages.structured/LanguageOverlay.less",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 2426
      },
      "writtenOn": "2018-03-20T15:05:24Z",
      "side": 1,
      "message": "Why do we need this? Isn\u0027t dir well supported and already sets the directionality?",
      "range": {
        "startLine": 43,
        "startChar": 3,
        "endLine": 43,
        "endChar": 21
      },
      "revId": "1cd38d4b7aa6000189a59285fa19d3fb787d4c4e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ab2ed9f_9b667efb",
        "filename": "resources/mobile.languages.structured/LanguageOverlay.less",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 94
      },
      "writtenOn": "2018-03-20T15:47:18Z",
      "side": 1,
      "message": "No, dir attribute has no impact on styling  - note CSS Janus only runs on the target language and doesn\u0027t help where different languages are in the page.",
      "parentUuid": "bf87c472_f5e6f64c",
      "range": {
        "startLine": 43,
        "startChar": 3,
        "endLine": 43,
        "endChar": 21
      },
      "revId": "1cd38d4b7aa6000189a59285fa19d3fb787d4c4e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c8fcfe6_5d99bf99",
        "filename": "resources/mobile.languages.structured/util.js",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 2426
      },
      "writtenOn": "2018-03-20T15:05:24Z",
      "side": 1,
      "message": "Should we make this its own type instead of changing string? How about {dir: string, lang: string}?",
      "range": {
        "startLine": 142,
        "startChar": 12,
        "endLine": 142,
        "endChar": 20
      },
      "revId": "1cd38d4b7aa6000189a59285fa19d3fb787d4c4e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e79949e3_b97e3ed5",
        "filename": "resources/mobile.languages.structured/util.js",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 94
      },
      "writtenOn": "2018-03-20T15:47:18Z",
      "side": 1,
      "message": "What would be the advantage in passing it in in this form?\n\n(Note cannot use @typedef in MobileFrontend)",
      "parentUuid": "7c8fcfe6_5d99bf99",
      "range": {
        "startLine": 142,
        "startChar": 12,
        "endLine": 142,
        "endChar": 20
      },
      "revId": "1cd38d4b7aa6000189a59285fa19d3fb787d4c4e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b872979d_834eb6ee",
        "filename": "resources/mobile.languages.structured/util.js",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 2426
      },
      "writtenOn": "2018-03-20T16:06:06Z",
      "side": 1,
      "message": "Regardless of whether we have the graces of JSDoc, when a codebase changes even an instance of a string\u0027s typing, I feel much less confident about what the types are and trying to reason about state is much more difficult in general because fundamental types are overloaded and therefore less meaningful and distinctive. Furthermore, this requires a string object (via `new String()`, not a primitive). My take is that if we need a custom type, let\u0027s make a custom type, even if it\u0027s only for readability. Sorry for the rant!",
      "parentUuid": "e79949e3_b97e3ed5",
      "range": {
        "startLine": 142,
        "startChar": 12,
        "endLine": 142,
        "endChar": 20
      },
      "revId": "1cd38d4b7aa6000189a59285fa19d3fb787d4c4e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d4e6c98_8811b727",
        "filename": "resources/mobile.languages.structured/util.js",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 94
      },
      "writtenOn": "2018-03-20T16:09:01Z",
      "side": 1,
      "message": "\u003e Furthermore, this requires a string object (via `new String()`, not a primitive). My\n?!\nNo it just requires a string. I\u0027m suprised eslint didn\u0027t complain. This should be {string}.",
      "parentUuid": "b872979d_834eb6ee",
      "range": {
        "startLine": 142,
        "startChar": 12,
        "endLine": 142,
        "endChar": 20
      },
      "revId": "1cd38d4b7aa6000189a59285fa19d3fb787d4c4e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08ea9d46_f207849f",
        "filename": "resources/mobile.languages.structured/util.js",
        "patchSetId": 4
      },
      "lineNbr": 150,
      "author": {
        "id": 2426
      },
      "writtenOn": "2018-03-20T16:06:06Z",
      "side": 1,
      "message": "This returns `{0: \"f\", 1: \"o\", 2: \"o\", dir: \"rtl\"}` (for language `\"foo\"`) which seems unintuitive.",
      "range": {
        "startLine": 150,
        "startChar": 18,
        "endLine": 150,
        "endChar": 79
      },
      "revId": "1cd38d4b7aa6000189a59285fa19d3fb787d4c4e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b14c5f65_04dc9455",
        "filename": "resources/mobile.languages.structured/util.js",
        "patchSetId": 4
      },
      "lineNbr": 150,
      "author": {
        "id": 94
      },
      "writtenOn": "2018-03-20T16:09:01Z",
      "side": 1,
      "message": "ah okay, i think i get what you are saying above. No problem.",
      "parentUuid": "08ea9d46_f207849f",
      "range": {
        "startLine": 150,
        "startChar": 18,
        "endLine": 150,
        "endChar": 79
      },
      "revId": "1cd38d4b7aa6000189a59285fa19d3fb787d4c4e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b98d7a45_5466c0f7",
        "filename": "resources/mobile.languages.structured/util.js",
        "patchSetId": 4
      },
      "lineNbr": 200,
      "author": {
        "id": 2426
      },
      "writtenOn": "2018-03-20T15:05:24Z",
      "side": 1,
      "message": "This is useful in itself but do we want to make this an array and push the missing language(s) so we can report it here?",
      "range": {
        "startLine": 200,
        "startChar": 3,
        "endLine": 200,
        "endChar": 13
      },
      "revId": "1cd38d4b7aa6000189a59285fa19d3fb787d4c4e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56037df8_9727522b",
        "filename": "resources/mobile.languages.structured/util.js",
        "patchSetId": 4
      },
      "lineNbr": 200,
      "author": {
        "id": 94
      },
      "writtenOn": "2018-03-20T15:47:18Z",
      "side": 1,
      "message": "Direction will either be provided or not. If it\u0027s missing for one language the issue is actually in the API query or API layer.",
      "parentUuid": "b98d7a45_5466c0f7",
      "range": {
        "startLine": 200,
        "startChar": 3,
        "endLine": 200,
        "endChar": 13
      },
      "revId": "1cd38d4b7aa6000189a59285fa19d3fb787d4c4e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eecf335d_da139d8d",
        "filename": "tests/qunit/mobile.languages.structured/test_util.js",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 2426
      },
      "writtenOn": "2018-03-20T15:05:24Z",
      "side": 1,
      "message": "rtl?",
      "range": {
        "startLine": 15,
        "startChar": 11,
        "endLine": 15,
        "endChar": 14
      },
      "revId": "1cd38d4b7aa6000189a59285fa19d3fb787d4c4e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14743fb7_ca38ceaa",
        "filename": "tests/qunit/mobile.languages.structured/test_util.js",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 94
      },
      "writtenOn": "2018-03-20T15:47:18Z",
      "side": 1,
      "message": "Haha. I just made them all ltr for the purpose of the test. For completeness I can make the RTL languages RTL ;-)\n\nI\u0027m not totally convinced we need to generate the list like this - it\u0027s possible we could simplify it using some dummy names e.g. lang: \u0027lang1\u0027, title: \u0027Language 1\u0027",
      "parentUuid": "eecf335d_da139d8d",
      "range": {
        "startLine": 15,
        "startChar": 11,
        "endLine": 15,
        "endChar": 14
      },
      "revId": "1cd38d4b7aa6000189a59285fa19d3fb787d4c4e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99a6ddbb_38b4b49c",
        "filename": "tests/qunit/mobile.languages.structured/test_util.js",
        "patchSetId": 4
      },
      "lineNbr": 150,
      "author": {
        "id": 2426
      },
      "writtenOn": "2018-03-20T15:05:24Z",
      "side": 1,
      "message": "SHould this be rtl?",
      "range": {
        "startLine": 150,
        "startChar": 12,
        "endLine": 150,
        "endChar": 15
      },
      "revId": "1cd38d4b7aa6000189a59285fa19d3fb787d4c4e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}