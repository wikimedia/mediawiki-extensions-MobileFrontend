{
  "comments": [
    {
      "key": {
        "uuid": "0efd9372_0c930f05",
        "filename": "i18n/qqq.json",
        "patchSetId": 2
      },
      "lineNbr": 276,
      "author": {
        "id": 1196
      },
      "writtenOn": "2016-06-21T09:38:26Z",
      "side": 1,
      "message": "How about \"The text of the link that takes the user back to the article\"? I\u0027m always confused by our use of \"article\" and \"page\" and so \"article page\" has me doubly confused!",
      "revId": "9b2ed9211dc764912fd18351c0d71aedd3369ea2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_cca7474b",
        "filename": "includes/specials/SpecialMobileCite.mustache",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 1196
      },
      "writtenOn": "2016-06-21T09:38:26Z",
      "side": 1,
      "message": "This isn\u0027t a subheading as it doesn\u0027t contain a heading element. How about \"article-link-container\"?",
      "revId": "9b2ed9211dc764912fd18351c0d71aedd3369ea2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_6ca8db1d",
        "filename": "includes/specials/SpecialMobileCite.php",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1196
      },
      "writtenOn": "2016-06-21T09:38:26Z",
      "side": 1,
      "message": "I like that you\u0027re aiming to use the same method of generating the output regardless of the path here. However, in the case of the revision not existing, we\u0027re going to spin up the template parser, parse and render the template, which will only ever return the HTML string that we\u0027ve given it.\n\nYour solution is far more flexible but it incurs a performance overhead â€“ for sure, these two properties are always in contention.\n\nDo you think that the generality is worth the performance overhead?\n\nI think you may have actually been forced along this path due to how we construct error \"boxes\": with MobileUI::errorBox. That method actually creates another instance of the TemplateParser class and renders a template with a well-defined set of parameters. What we\u0027ve done here is recreate partials!",
      "revId": "9b2ed9211dc764912fd18351c0d71aedd3369ea2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}