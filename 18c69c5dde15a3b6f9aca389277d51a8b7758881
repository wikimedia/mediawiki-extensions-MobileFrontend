{
  "comments": [
    {
      "key": {
        "uuid": "5a3bc065_1c204fdb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 2426
      },
      "writtenOn": "2018-10-03T15:27:27Z",
      "side": 1,
      "message": "It looks like they\u0027re all logically ANDed together with `\u0026\u0026` which seems safer to me. If we want parallelization, consider installing npm-run-all and changing the lint script to `\"run-p lint:\\\\*\"`.",
      "range": {
        "startLine": 16,
        "startChar": 3,
        "endLine": 16,
        "endChar": 24
      },
      "revId": "18c69c5dde15a3b6f9aca389277d51a8b7758881",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d700208_1e2ff8ec",
        "filename": "Gruntfile.js",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 2426
      },
      "writtenOn": "2018-10-03T15:27:27Z",
      "side": 1,
      "message": "This doesn\u0027t seem to be buying us a whole lot that wouldn\u0027t instantly break and fail on other tooling:\n\n $ find -iname \\*.json|\n   grep -Evi \u0027node_modules|i18n|test|composer|package|eslint|jsdoc|resources/dist|stylelint\u0027\n ./vendor/jakub-onderka/php-parallel-lint/box.json\n ./extension.json\n\nNPM dies on a malformed package.json and we shouldn\u0027t check its dependencies. Presumably composer, ESLint, JSDoc, and stylelint work similarly. Bad test files should cause tests to fail. The JSON files in resources/dist are generated by Webpack for debugging only. A malformed extension.json causes page loads to fail and will soon be validated by mockMediaWiki. Does banana validate i18n JSON files? If we really need a JSON test, can we use a different NPM package or Node itself? E.g.:\n\n find -name \\*.json|\n xargs -rI{} node -e \u0027JSON.parse(require(\"fs\").readFileSync(\"{}\"))\u0027 \\;",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 17,
        "endChar": 3
      },
      "revId": "18c69c5dde15a3b6f9aca389277d51a8b7758881",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f59ff2d_da0d7a76",
        "filename": "package.json",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 2426
      },
      "writtenOn": "2018-10-03T15:27:27Z",
      "side": 1,
      "message": "I\u0027m bothered that the names of these lint scripts aren\u0027t more consistent. What do you think of lint:es5, lint:js / lint:es, lint:less, and lint:i18n-json? This would avoid tying the task goal to the implementation.",
      "range": {
        "startLine": 9,
        "startChar": 10,
        "endLine": 9,
        "endChar": 16
      },
      "revId": "18c69c5dde15a3b6f9aca389277d51a8b7758881",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}