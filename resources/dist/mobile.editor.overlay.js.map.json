{"version":3,"file":"mobile.editor.overlay.js","mappings":"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","sources":["webpack://mfModules/./src/mobile.editor.overlay/BlockMessageDetails.js","webpack://mfModules/./src/mobile.editor.overlay/EditorGateway.js","webpack://mfModules/./src/mobile.editor.overlay/EditorOverlayBase.js","webpack://mfModules/./src/mobile.editor.overlay/SourceEditorOverlay.js","webpack://mfModules/./src/mobile.editor.overlay/VisualEditorOverlay.js","webpack://mfModules/./src/mobile.editor.overlay/blockMessageDrawer.js","webpack://mfModules/./src/mobile.editor.overlay/identifyLeadParagraph.js","webpack://mfModules/./src/mobile.editor.overlay/mobile.editor.overlay.js","webpack://mfModules/./src/mobile.editor.overlay/parseBlockInfo.js","webpack://mfModules/./src/mobile.editor.overlay/saveFailureMessage.js","webpack://mfModules/./src/mobile.editor.overlay/setPreferredEditor.js","webpack://mfModules/./src/mobile.startup/MessageBox.js"],"sourcesContent":["'use strict';\nconst Button = require( '../mobile.startup/Button' ),\n\tView = require( '../mobile.startup/View' ),\n\tIcon = require( '../mobile.startup/Icon' ),\n\tutil = require( '../mobile.startup/util' );\n\n/**\n * @extends View\n */\nclass BlockMessageDetails extends View {\n\t/** @inheritdoc */\n\tget isTemplateMode() {\n\t\treturn true;\n\t}\n\t/**\n\t * @inheritdoc\n\t */\n\tget defaults() {\n\t\treturn {\n\t\t\tcreateDetailsAnchorHref: function () {\n\t\t\t\treturn function ( blockId, render ) {\n\t\t\t\t\treturn mw.util.getUrl( 'Special:BlockList', { wpTarget: '#' + render( blockId ) } );\n\t\t\t\t};\n\t\t\t},\n\t\t\tcreateDetailsAnchorLabel: function () {\n\t\t\t\treturn mw.msg( 'mobile-frontend-editor-blocked-drawer-help' );\n\t\t\t},\n\t\t\tcreateTitle: function () {\n\t\t\t\tlet msgKey = 'mobile-frontend-editor-blocked-drawer-title';\n\t\t\t\tif ( mw.user.isAnon() ) {\n\t\t\t\t\tmsgKey += '-ip';\n\t\t\t\t}\n\t\t\t\tif ( this.partial ) {\n\t\t\t\t\tmsgKey += '-partial';\n\t\t\t\t}\n\t\t\t\t// The following messages can be passed here:\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-title\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-title-partial\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-title-ip\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-title-ip-partial\n\t\t\t\treturn mw.msg( msgKey );\n\t\t\t},\n\t\t\tcreateBody: function () {\n\t\t\t\tlet msgKey = '';\n\t\t\t\tif ( mw.user.isAnon() && this.anonOnly ) {\n\t\t\t\t\tmsgKey = 'mobile-frontend-editor-blocked-drawer-body';\n\t\t\t\t\tif ( this.noCreateAccount ) {\n\t\t\t\t\t\tmsgKey += '-login';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmsgKey += '-login-createaccount';\n\t\t\t\t\t}\n\t\t\t\t\tif ( this.partial ) {\n\t\t\t\t\t\tmsgKey += '-partial';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ( this.partial ) {\n\t\t\t\t\t\tmsgKey = 'mobile-frontend-editor-blocked-drawer-body-partial';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// The following messages can be passed here:\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-body-partial\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-body-login\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-body-login-partial\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-body-login-createaccount\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-body-login-createaccount-partial\n\t\t\t\treturn msgKey ? mw.msg( msgKey ) : msgKey;\n\t\t\t},\n\t\t\tseeMoreLink: mw.msg( 'mobile-frontend-editor-blocked-drawer-body-link' ),\n\t\t\treasonHeader: mw.msg( 'mobile-frontend-editor-blocked-drawer-reason-header' ),\n\t\t\tcreatorHeader: function () {\n\t\t\t\t// The gender is the subject (the blockee) not the object (the blocker).\n\t\t\t\treturn mw.msg( 'mobile-frontend-editor-blocked-drawer-creator-header',\n\t\t\t\t\tmw.user.options.get( 'gender' ) );\n\t\t\t},\n\t\t\texpiryHeader: mw.msg( 'mobile-frontend-editor-blocked-drawer-expiry-header' )\n\t\t};\n\t}\n\t/**\n\t * Configure the call to action depending on the type of block.\n\t *\n\t * @return {Object} Configuration options\n\t */\n\tgetButtonConfig() {\n\t\tlet cta = true;\n\t\tconst config = {\n\t\t\t\tprogressive: true\n\t\t\t},\n\t\t\twiki = mw.config.get( 'wgDBname' );\n\n\t\tif ( mw.user.isAnon() && this.options.anonOnly ) {\n\t\t\t// The user can avoid the block by logging in\n\t\t\tconfig.label = mw.msg( 'mobile-frontend-editor-blocked-drawer-action-login' );\n\t\t\tconfig.href = new mw.Title( 'Special:UserLogin' ).getUrl();\n\t\t} else if ( this.options.partial ) {\n\t\t\t// The user can avoid the block by editing a different page\n\t\t\tconfig.label = mw.msg( 'mobile-frontend-editor-blocked-drawer-action-randompage' );\n\t\t\tconfig.href = new mw.Title( 'Special:Random' ).getUrl();\n\t\t\tconfig.quiet = true;\n\t\t} else {\n\t\t\t// The user cannot avoid the block\n\t\t\tconfig.tagName = 'button';\n\t\t\tconfig.label = mw.msg( 'mobile-frontend-editor-blocked-drawer-action-ok' );\n\t\t\tconfig.additionalClassNames = 'cancel';\n\t\t\tcta = false;\n\t\t}\n\n\t\tif ( cta && mw.config.get( 'wgMFTrackBlockNotices' ) ) {\n\t\t\tmw.track( 'counter.MediaWiki.BlockNotices.' + wiki + '.MobileFrontend.ctaShown', 1 );\n\t\t\tconfig.events = {\n\t\t\t\tclick: function () {\n\t\t\t\t\tmw.track( 'counter.MediaWiki.BlockNotices.' + wiki + '.MobileFrontend.ctaClicked', 1 );\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\treturn config;\n\t}\n\t/**\n\t * @inheritdoc\n\t */\n\tpostRender() {\n\t\tconst drawer = this;\n\t\tthis.$el.find( '.block-message-buttons' ).prepend(\n\t\t\tnew Button( this.getButtonConfig() ).$el\n\t\t);\n\t\tthis.$el.find( '.block-message-icon' ).prepend(\n\t\t\t( new Icon( {\n\t\t\t\tname: 'block-destructive',\n\t\t\t\tadditionalClassNames: 'mw-ui-icon-flush-top'\n\t\t\t} ) ).$el\n\t\t);\n\t\tthis.options.parsedReason.then( function ( htmlReason ) {\n\t\t\tdrawer.$el.find( '.block-message-reason div' ).html( htmlReason );\n\t\t} );\n\t}\n\t/**\n\t * @inheritdoc\n\t */\n\tget template() {\n\t\treturn util.template( `\n<div class=\"block-message block-message-container\">\n  <div class=\"block-message-icon\"></div>\n  <div class=\"block-message-info\">\n    <div class=\"block-message-item block-message-title\">\n      <h5>{{ createTitle }}</h5>\n    </div>\n    <div class=\"block-message-data\">\n      <div class=\"block-message-item\">\n        <p>\n          {{ createBody }}\n          <a class =\"block-message-see-more\" href=\"#\">{{ seeMoreLink }}</a>\n        </p>\n      </div>\n      <div class=\"block-message-item block-message-creator\">\n        {{#creator.name}}\n          <p>\n            {{ creatorHeader }}\n            <strong>\n              {{#creator.url}}\n                <a href=\"{{ creator.url }}\">{{ creator.name }}</a>\n              {{/creator.url}}\n              {{^creator.url}}\n                {{ creator.name }}\n              {{/creator.url}}\n            </strong>\n          </p>\n        {{/creator.name}}\n      </div>\n      {{#duration}}\n        <div class=\"block-message-item\">\n          <p>\n            {{ expiryHeader }}\n            <strong>{{ duration }}</strong>\n          </p>\n        </div>\n      {{/duration}}\n      {{#blockId}}\n        <div class=\"block-message-item\">\n          <a href=\"{{#createDetailsAnchorHref}}{{ blockId }}{{/createDetailsAnchorHref}}\">\n            {{ createDetailsAnchorLabel }}\n          </a>\n        </div>\n      {{/blockId}}\n    </div>\n  </div>\n  {{#reason}}\n    <div class=\"block-message-item block-message-reason\">\n      <h5>{{ reasonHeader }}</h5>\n      <div><p>{{{ reason }}}</p></div>\n    </div>\n  {{/reason}}\n  <div class=\"block-message-buttons\">\n  </div>\n</div>` );\n\t}\n}\n\nmodule.exports = BlockMessageDetails;\n","var util = require( '../mobile.startup/util' ),\n\tactionParams = require( '../mobile.startup/actionParams' );\n\n/**\n * API that helps save and retrieve page content\n *\n * @class EditorGateway\n *\n * @param {Object} options Configuration options\n * @param {mw.Api} options.api an Api to use.\n * @param {string} options.title the title to edit\n * @param {string|null} options.sectionId the id of the section to operate edits on.\n * @param {number} [options.oldId] revision to operate on. If absent defaults to latest.\n * @param {boolean} [options.isNewPage] whether the page being created is new\n * @param {boolean} [options.fromModified] whether the page was loaded in a modified state\n */\nfunction EditorGateway( options ) {\n\tthis.api = options.api;\n\tthis.title = options.title;\n\tthis.sectionId = options.sectionId;\n\tthis.oldId = options.oldId;\n\t// return an empty section for new pages\n\tthis.content = options.isNewPage ? '' : undefined;\n\tthis.fromModified = options.fromModified;\n\tthis.hasChanged = options.fromModified;\n}\n\nEditorGateway.prototype = {\n\n\t/**\n\t * Get the block (if there is one) from the result.\n\t *\n\t * @memberof EditorGateway\n\t * @param {Object} pageObj Page object\n\t * @return {Object|null}\n\t */\n\tgetBlockInfo: function ( pageObj ) {\n\t\tvar blockedError;\n\n\t\tif ( pageObj.actions &&\n\t\t\tpageObj.actions.edit &&\n\t\t\tArray.isArray( pageObj.actions.edit )\n\t\t) {\n\t\t\tpageObj.actions.edit.some( function ( error ) {\n\t\t\t\tif ( [ 'blocked', 'autoblocked' ].indexOf( error.code ) !== -1 ) {\n\t\t\t\t\tblockedError = error;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t} );\n\n\t\t\tif ( blockedError && blockedError.data && blockedError.data.blockinfo ) {\n\t\t\t\treturn blockedError.data.blockinfo;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\t/**\n\t * Get the content of a page.\n\t *\n\t * @memberof EditorGateway\n\t * @instance\n\t * @return {jQuery.Promise}\n\t */\n\tgetContent: function () {\n\t\tvar options,\n\t\t\tself = this;\n\n\t\tfunction resolve() {\n\t\t\treturn util.Deferred().resolve( {\n\t\t\t\ttext: self.content || '',\n\t\t\t\tblockinfo: self.blockinfo\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.content !== undefined ) {\n\t\t\treturn resolve();\n\t\t} else {\n\t\t\toptions = actionParams( {\n\t\t\t\tprop: [ 'revisions', 'info' ],\n\t\t\t\trvprop: [ 'content', 'timestamp' ],\n\t\t\t\ttitles: self.title,\n\t\t\t\t// get block information for this user\n\t\t\t\tintestactions: 'edit',\n\t\t\t\tintestactionsdetail: 'full'\n\t\t\t} );\n\t\t\t// Load text of old revision if desired\n\t\t\tif ( this.oldId ) {\n\t\t\t\toptions.rvstartid = this.oldId;\n\t\t\t}\n\t\t\t// See T52136 - passing rvsection will fail with non wikitext\n\t\t\tif ( this.sectionId ) {\n\t\t\t\toptions.rvsection = this.sectionId;\n\t\t\t}\n\t\t\treturn this.api.get( options ).then( function ( resp ) {\n\t\t\t\tvar revision, pageObj;\n\n\t\t\t\tif ( resp.error ) {\n\t\t\t\t\treturn util.Deferred().reject( resp.error.code );\n\t\t\t\t}\n\n\t\t\t\tpageObj = resp.query.pages[0];\n\t\t\t\t// page might not exist and caller might not have known.\n\t\t\t\tif ( pageObj.missing !== undefined ) {\n\t\t\t\t\tself.content = '';\n\t\t\t\t} else {\n\t\t\t\t\trevision = pageObj.revisions[0];\n\t\t\t\t\tself.content = revision.content;\n\t\t\t\t\tself.timestamp = revision.timestamp;\n\t\t\t\t}\n\n\t\t\t\t// save content a second time to be able to check for changes\n\t\t\t\tself.originalContent = self.content;\n\t\t\t\tself.blockinfo = self.getBlockInfo( pageObj );\n\n\t\t\t\treturn resolve();\n\t\t\t} );\n\t\t}\n\t},\n\n\t/**\n\t * Mark content as modified and set changes to be submitted when #save\n\t * is invoked.\n\t *\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {string} content New section content.\n\t */\n\tsetContent: function ( content ) {\n\t\tif ( this.originalContent !== content || this.fromModified ) {\n\t\t\tthis.hasChanged = true;\n\t\t} else {\n\t\t\tthis.hasChanged = false;\n\t\t}\n\t\tthis.content = content;\n\t},\n\n\t/**\n\t * Save the new content of the section, previously set using #setContent.\n\t *\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {Object} options Configuration options\n\t * @param {string} [options.summary] Optional summary for the edit.\n\t * @param {string} [options.captchaId] If CAPTCHA was requested, ID of the\n\t * captcha.\n\t * @param {string} [options.captchaWord] If CAPTCHA was requested, term\n\t * displayed in the CAPTCHA.\n\t * @return {jQuery.Deferred} On failure callback is passed an object with\n\t * `type` and `details` properties. `type` is a string describing the type\n\t * of error, `details` can be any object (usually error message).\n\t */\n\tsave: function ( options ) {\n\t\tvar self = this,\n\t\t\tresult = util.Deferred();\n\n\t\toptions = options || {};\n\n\t\t/**\n\t\t * Save content. Make an API request.\n\t\t *\n\t\t * @return {jQuery.Deferred}\n\t\t */\n\t\tfunction saveContent() {\n\t\t\tvar apiOptions = {\n\t\t\t\taction: 'edit',\n\t\t\t\terrorformat: 'html',\n\t\t\t\terrorlang: mw.config.get( 'wgUserLanguage' ),\n\t\t\t\terrorsuselocal: 1,\n\t\t\t\tformatversion: 2,\n\t\t\t\ttitle: self.title,\n\t\t\t\tsummary: options.summary,\n\t\t\t\tcaptchaid: options.captchaId,\n\t\t\t\tcaptchaword: options.captchaWord,\n\t\t\t\tbasetimestamp: self.timestamp,\n\t\t\t\tstarttimestamp: self.timestamp\n\t\t\t};\n\n\t\t\tif ( self.content !== undefined ) {\n\t\t\t\tapiOptions.text = self.content;\n\t\t\t}\n\n\t\t\tif ( self.sectionId ) {\n\t\t\t\tapiOptions.section = self.sectionId;\n\t\t\t}\n\n\t\t\tself.api.postWithToken( 'csrf', apiOptions ).then( function ( data ) {\n\t\t\t\tif ( data && data.edit && data.edit.result === 'Success' ) {\n\t\t\t\t\tself.hasChanged = false;\n\t\t\t\t\tresult.resolve( data.edit.newrevid );\n\t\t\t\t} else {\n\t\t\t\t\tresult.reject( data );\n\t\t\t\t}\n\t\t\t}, function ( code, data ) {\n\t\t\t\tresult.reject( data );\n\t\t\t} );\n\t\t\treturn result;\n\t\t}\n\n\t\treturn saveContent();\n\t},\n\n\t/**\n\t * Abort any pending previews.\n\t *\n\t * @memberof EditorGateway\n\t * @instance\n\t */\n\tabortPreview: function () {\n\t\tif ( this._pending ) {\n\t\t\tthis._pending.abort();\n\t\t}\n\t},\n\n\t/**\n\t * Get page preview from the API and abort any existing previews.\n\t *\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {Object} options API query parameters\n\t * @return {jQuery.Deferred}\n\t */\n\tgetPreview: function ( options ) {\n\t\tvar\n\t\t\tsectionLine = '',\n\t\t\tsectionId = '',\n\t\t\tself = this;\n\n\t\tutil.extend( options, {\n\t\t\taction: 'parse',\n\t\t\t// Enable section preview mode to avoid errors (T51218)\n\t\t\tsectionpreview: true,\n\t\t\t// Hide section edit links\n\t\t\tdisableeditsection: true,\n\t\t\t// needed for pre-save transform to work (T55692)\n\t\t\tpst: true,\n\t\t\t// Output mobile HTML (T56243)\n\t\t\tmobileformat: true,\n\t\t\tuseskin: mw.config.get( 'skin' ),\n\t\t\tdisabletoc: true,\n\t\t\ttitle: this.title,\n\t\t\tprop: [ 'text', 'sections' ]\n\t\t} );\n\n\t\tthis.abortPreview();\n\t\tthis._pending = this.api.post( options );\n\n\t\treturn this._pending.then( function ( resp ) {\n\t\t\tif ( resp && resp.parse && resp.parse.text ) {\n\t\t\t\t// When editing section 0 or the whole page, there is no section name, so skip\n\t\t\t\tif ( self.sectionId && self.sectionId !== '0' &&\n\t\t\t\t\tresp.parse.sections !== undefined &&\n\t\t\t\t\tresp.parse.sections[0] !== undefined\n\t\t\t\t) {\n\t\t\t\t\tif ( resp.parse.sections[0].anchor !== undefined ) {\n\t\t\t\t\t\tsectionId = resp.parse.sections[0].anchor;\n\t\t\t\t\t}\n\t\t\t\t\tif ( resp.parse.sections[0].line !== undefined ) {\n\t\t\t\t\t\tsectionLine = resp.parse.sections[0].line;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\ttext: resp.parse.text['*'],\n\t\t\t\t\tid: sectionId,\n\t\t\t\t\tline: sectionLine\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn util.Deferred().reject();\n\t\t\t}\n\t\t} ).promise( {\n\t\t\tabort: function () { self._pending.abort(); }\n\t\t} );\n\t}\n};\n\nmodule.exports = EditorGateway;\n","/* global $ */\nvar Overlay = require( '../mobile.startup/Overlay' ),\n\tutil = require( '../mobile.startup/util' ),\n\tparseBlockInfo = require( './parseBlockInfo' ),\n\theaders = require( '../mobile.startup/headers' ),\n\tPageGateway = require( '../mobile.startup/PageGateway' ),\n\ticons = require( '../mobile.startup/icons' ),\n\tButton = require( '../mobile.startup/Button' ),\n\tIcon = require( '../mobile.startup/Icon' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\tblockMessageDrawer = require( './blockMessageDrawer' ),\n\tMessageBox = require( '../mobile.startup/MessageBox' ),\n\tmwUser = mw.user;\n\n/**\n * 'Edit' button\n *\n * @param {OO.ui.ToolGroup} toolGroup\n * @param {Object} config\n */\nfunction EditVeTool( toolGroup, config ) {\n\tconfig = config || {};\n\tconfig.classes = [ 'visual-editor' ];\n\tEditVeTool.super.call( this, toolGroup, config );\n}\nOO.inheritClass( EditVeTool, OO.ui.Tool );\n\nEditVeTool.static.name = 'editVe';\nEditVeTool.static.icon = 'edit';\nEditVeTool.static.group = 'editorSwitcher';\nEditVeTool.static.title = mw.msg( 'mobile-frontend-editor-switch-visual-editor' );\n/**\n * click handler\n *\n * @memberof EditVeTool\n * @instance\n */\nEditVeTool.prototype.onSelect = function () {\n\t// will be overridden later\n};\n/**\n * Toolbar update state handler.\n *\n * @memberof EditVeTool\n * @instance\n */\nEditVeTool.prototype.onUpdateState = function () {\n\t// do nothing\n};\n\n/**\n * Base class for SourceEditorOverlay and VisualEditorOverlay\n *\n * @class EditorOverlayBase\n * @extends Overlay\n * @uses Icon\n * @uses user\n * @param {Object} params Configuration options\n * @param {number|null} params.editCount of user\n * @param {boolean} params.editSwitcher whether possible to switch mode in header\n * @param {boolean} params.hasToolbar whether the editor has a toolbar\n */\nfunction EditorOverlayBase( params ) {\n\tvar\n\t\toptions = util.extend(\n\t\t\ttrue,\n\t\t\t{\n\t\t\t\tonBeforeExit: this.onBeforeExit.bind( this ),\n\t\t\t\tclassName: 'overlay editor-overlay',\n\t\t\t\tisBorderBox: false\n\t\t\t},\n\t\t\tparams,\n\t\t\t{\n\t\t\t\tevents: util.extend(\n\t\t\t\t\t{\n\t\t\t\t\t\t'click .back': 'onClickBack',\n\t\t\t\t\t\t'click .continue': 'onClickContinue',\n\t\t\t\t\t\t'click .submit': 'onClickSubmit',\n\t\t\t\t\t\t'click .anonymous': 'onClickAnonymous'\n\t\t\t\t\t},\n\t\t\t\t\tparams.events\n\t\t\t\t)\n\t\t\t}\n\t\t);\n\n\tif ( options.isNewPage ) {\n\t\toptions.placeholder = mw.msg( 'mobile-frontend-editor-placeholder-new-page', mwUser );\n\t}\n\t// change the message to request a summary when not in article namespace\n\tif ( mw.config.get( 'wgNamespaceNumber' ) !== 0 ) {\n\t\toptions.summaryRequestMsg = mw.msg( 'mobile-frontend-editor-summary' );\n\t}\n\tthis.pageGateway = new PageGateway( options.api );\n\tthis.editCount = options.editCount;\n\tthis.isNewPage = options.isNewPage;\n\tthis.isNewEditor = options.editCount === 0;\n\tthis.sectionId = options.sectionId;\n\tthis.sessionId = options.sessionId;\n\tthis.overlayManager = options.overlayManager;\n\n\tOverlay.call( this, options );\n}\n\nmfExtend( EditorOverlayBase, Overlay, {\n\t/**\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @mixes Overlay#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {OverlayManager} defaults.overlayManager instance\n\t * @property {mw.Api} defaults.api to interact with\n\t * @property {boolean} defaults.hasToolbar Whether the editor has a toolbar or not. When\n\t *  disabled a header will be show instead.\n\t * @property {string} defaults.continueMsg Caption for the next button on edit form\n\t * which takes you to the screen that shows a preview and license information.\n\t * @property {string} defaults.closeMsg Caption for a button that takes you back to editing\n\t * from edit preview screen.\n\t * @property {string} defaults.summaryRequestMsg Header above edit summary input field\n\t * asking the user to summarize the changes they made to the page.\n\t * @property {string} defaults.summaryMsg A placeholder with examples for the summary input\n\t * field asking user what they changed.\n\t * @property {string} defaults.placeholder Placeholder text for empty sections.\n\t * @property {string} defaults.captchaMsg Placeholder for captcha input field.\n\t * @property {string} defaults.captchaTryAgainMsg A message shown when user enters\n\t * wrong CAPTCHA and a new one is displayed.\n\t * @property {string} defaults.switchMsg Label for button that allows the user\n\t * to switch between two different editing interfaces.\n\t * @property {string} defaults.licenseMsg Text and link of the license,\n\t * under which this contribution will be released to inform the user.\n\t */\n\tdefaults: util.extend( {}, Overlay.prototype.defaults, {\n\t\thasToolbar: false,\n\t\tcontinueMsg: mw.msg( 'mobile-frontend-editor-continue' ),\n\t\tcloseMsg: mw.msg( 'mobile-frontend-editor-keep-editing' ),\n\t\tsummaryRequestMsg: mw.msg( 'mobile-frontend-editor-summary-request' ),\n\t\tsummaryMsg: mw.msg( 'mobile-frontend-editor-summary-placeholder' ),\n\t\tplaceholder: mw.msg( 'mobile-frontend-editor-placeholder' ),\n\t\tcaptchaMsg: mw.msg( 'mobile-frontend-account-create-captcha-placeholder' ),\n\t\tcaptchaTryAgainMsg: mw.msg( 'mobile-frontend-editor-captcha-try-again' ),\n\t\tswitchMsg: mw.msg( 'mobile-frontend-editor-switch-editor' ),\n\t\tconfirmMsg: mw.msg( 'mobile-frontend-editor-cancel-confirm' ),\n\t\tlicenseMsg: undefined\n\t} ),\n\t/**\n\t * @inheritdoc\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\ttemplate: util.template( `\n<div class=\"overlay-header-container header-container position-fixed\"></div>\n\n<div class=\"overlay-content\">\n\t<div class=\"panels\">\n\t\t<div class=\"save-panel panel hideable hidden\">\n\t\t\t<div id=\"error-notice-container\"></div>\n\t\t\t<h2 class=\"summary-request\">{{{summaryRequestMsg}}}</h2>\n\t\t\t<textarea rows=\"2\" class=\"mw-ui-input summary\" placeholder=\"{{summaryMsg}}\"></textarea>\n\t\t\t{{#licenseMsg}}<div class=\"license\">{{{licenseMsg}}}</div>{{/licenseMsg}}\n\t\t</div>\n\t\t<div class=\"captcha-panel panel hideable hidden\">\n\t\t\t<div class=\"captcha-box\">\n\t\t\t\t<img id=\"image\" src=\"\">\n\t\t\t\t<div id=\"question\"></div>\n\t\t\t\t<input class=\"captcha-word mw-ui-input\" placeholder=\"{{captchaMsg}}\" />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t{{>content}}\n</div>\n<div class=\"overlay-footer-container position-fixed\">\n\t{{>footer}}\n</div>\n\t` ),\n\t/**\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tsectionId: '',\n\t/**\n\t * Logs an event to http://meta.wikimedia.org/wiki/Schema:EditAttemptStep\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Object} data\n\t */\n\tlog: function ( data ) {\n\t\tmw.track( 'mf.schemaEditAttemptStep', util.extend( data, {\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\teditor_interface: this.editor,\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\tediting_session_id: this.sessionId\n\t\t} ) );\n\t},\n\t/**\n\t * Logs an event to http://meta.wikimedia.org/wiki/Schema:VisualEditorFeatureUse\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Object} data\n\t */\n\tlogFeatureUse: function ( data ) {\n\t\tmw.track( 'mf.schemaVisualEditorFeatureUse', util.extend( data, {\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\teditor_interface: this.editor,\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\tediting_session_id: this.sessionId\n\t\t} ) );\n\t},\n\n\t/**\n\t * If this is a new article, require confirmation before saving.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @return {boolean} The user confirmed saving\n\t */\n\tconfirmSave: function () {\n\t\tif ( this.isNewPage &&\n\t\t\t// TODO: Replace with an OOUI dialog\n\t\t\t// eslint-disable-next-line no-alert\n\t\t\t!window.confirm( mw.msg( 'mobile-frontend-editor-new-page-confirm', mwUser ) )\n\t\t) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t},\n\t/**\n\t * Executed when page save is complete. Updates urls and shows toast message.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {number|null} newRevId ID of the newly created revision, or null if it was a null\n\t *  edit.\n\t */\n\tonSaveComplete: function ( newRevId ) {\n\t\tvar msg,\n\t\t\ttitle = this.options.title,\n\t\t\tself = this;\n\n\t\tthis.saved = true;\n\n\t\t// FIXME: use generic method for following 3 lines\n\t\tthis.pageGateway.invalidatePage( title );\n\n\t\tif ( this.isNewPage ) {\n\t\t\tmsg = mw.msg( 'mobile-frontend-editor-success-new-page' );\n\t\t} else if ( this.isNewEditor ) {\n\t\t\tmsg = mw.msg( 'mobile-frontend-editor-success-landmark-1' );\n\t\t} else {\n\t\t\tmsg = mw.msg( 'mobile-frontend-editor-success' );\n\t\t}\n\n\t\tif ( !mw.config.get( 'wgPostEditConfirmationDisabled' ) ) {\n\t\t\tthis.showSaveCompleteMsg( msg );\n\t\t}\n\n\t\t/**\n\t\t * Fired after an edit was successfully saved, like postEdit in MediaWiki core.\n\t\t *\n\t\t * @event postEditMobile\n\t\t * @member mw.hook\n\t\t * @param {Object} data\n\t\t * @param {number|null} data.newRevId (since MW 1.37) ID of the newly created revision,\n\t\t *  or null if it was a null edit.\n\t\t */\n\t\tmw.hook( 'postEditMobile' ).fire( { newRevId: newRevId } );\n\n\t\t// Ensure we don't lose this event when logging\n\t\tthis.log( {\n\t\t\taction: 'saveSuccess',\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\trevision_id: newRevId\n\t\t} );\n\t\tsetTimeout( function () {\n\t\t\t// Wait for any other teardown navigation to happen (e.g. router.back())\n\t\t\t// before setting our final location.\n\t\t\tif ( self.sectionId ) {\n\t\t\t\t// Ideally we'd want to do this via replaceState (see T189173)\n\t\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\t\twindow.location.hash = '#' + self.sectionId;\n\t\t\t} else {\n\t\t\t\t// Cancel the hash fragment\n\t\t\t\t// otherwise clicking back after a save will take you back to the editor.\n\t\t\t\t// We avoid calling the hide method of the overlay here as this can be asynchronous\n\t\t\t\t// and may conflict with the window.reload call below.\n\t\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\t\twindow.location.hash = '#';\n\t\t\t}\n\t\t} );\n\t},\n\t/**\n\t * Show a save-complete message to the user\n\t *\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t * @param {string} msg Message\n\t */\n\tshowSaveCompleteMsg: function ( msg ) {\n\t\tmw.notify( msg, { type: 'success' } );\n\t},\n\t/**\n\t * Executed when page save fails. Handles logging the error. Subclasses\n\t * should display error messages as appropriate.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Object} data API response\n\t */\n\tonSaveFailure: function ( data ) {\n\t\tvar code = data && data.errors && data.errors[0] && data.errors[0].code,\n\t\t\t// Compare to ve.init.mw.ArticleTargetEvents.js in VisualEditor.\n\t\t\ttypeMap = {\n\t\t\t\tbadtoken: 'userBadToken',\n\t\t\t\tassertanonfailed: 'userNewUser',\n\t\t\t\tassertuserfailed: 'userNewUser',\n\t\t\t\tassertnameduserfailed: 'userNewUser',\n\t\t\t\t'abusefilter-disallowed': 'extensionAbuseFilter',\n\t\t\t\t'abusefilter-warning': 'extensionAbuseFilter',\n\t\t\t\tcaptcha: 'extensionCaptcha',\n\t\t\t\t// FIXME: This language is non-inclusive and we would love to change it,\n\t\t\t\t// but this relates to an error code provided by software.\n\t\t\t\t// This is blocked on T254649\n\t\t\t\tspamblacklist: 'extensionSpamBlacklist',\n\t\t\t\t// FIXME: This language is non-inclusive and we would love to change it,\n\t\t\t\t// but this relates to an error code provided by software.\n\t\t\t\t// Removal of this line is blocked on T254650.\n\t\t\t\t'titleblacklist-forbidden': 'extensionTitleBlacklist',\n\t\t\t\tpagedeleted: 'editPageDeleted',\n\t\t\t\teditconflict: 'editConflict'\n\t\t\t};\n\n\t\tif ( data.edit && data.edit.captcha ) {\n\t\t\tcode = 'captcha';\n\t\t}\n\n\t\tthis.log( {\n\t\t\taction: 'saveFailure',\n\t\t\tmessage: code,\n\t\t\ttype: typeMap[code] || 'responseUnknown'\n\t\t} );\n\t},\n\t/**\n\t * Report load errors back to the user. Silently record the error using EventLogging.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {string} text Text (HTML) of message to display to user\n\t */\n\treportError: function ( text ) {\n\t\tvar errorNotice = new MessageBox( {\n\t\t\tclassName: 'mw-message-box-error',\n\t\t\tmsg: text,\n\t\t\theading: mw.msg( 'mobile-frontend-editor-error' )\n\t\t} );\n\t\tthis.$errorNoticeContainer.html( errorNotice.$el );\n\t},\n\thideErrorNotice: function () {\n\t\tthis.$errorNoticeContainer.empty();\n\t},\n\t/**\n\t * Prepares the penultimate screen before saving.\n\t * Expects to be overridden by child class.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonStageChanges: function () {\n\t\tthis.showHidden( '.save-header, .save-panel' );\n\t\tthis.hideErrorNotice();\n\t\tthis.log( {\n\t\t\taction: 'saveIntent'\n\t\t} );\n\t\t// Scroll to the top of the page, so that the summary input is visible\n\t\t// (even if overlay was scrolled down when editing) and weird iOS header\n\t\t// problems are avoided (header position not updating to the top of the\n\t\t// screen, instead staying lower until a subsequent scroll event).\n\t\twindow.scrollTo( 0, 1 );\n\t},\n\t/**\n\t * Executed when the editor clicks the save button. Expects to be overridden by child\n\t * class. Checks if the save needs to be confirmed.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonSaveBegin: function () {\n\t\tthis.confirmAborted = false;\n\t\tthis.hideErrorNotice();\n\t\t// Ask for confirmation in some cases\n\t\tif ( !this.confirmSave() ) {\n\t\t\tthis.confirmAborted = true;\n\t\t\treturn;\n\t\t}\n\t\tthis.log( {\n\t\t\taction: 'saveAttempt'\n\t\t} );\n\t},\n\t/**\n\t * @inheritdoc\n\t */\n\tpreRender: function () {\n\t\tconst options = this.options;\n\n\t\tthis.options.headers = [\n\t\t\theaders.formHeader(\n\t\t\t\tutil.template( `\n{{^hasToolbar}}\n<div class=\"overlay-title\">\n\t<h2>{{{editingMsg}}}</h2>\n</div>\n{{/hasToolbar}}\n{{#hasToolbar}}<div class=\"toolbar\"></div>{{/hasToolbar}}\n{{#editSwitcher}}\n\t<div class=\"switcher-container\">\n\t</div>\n{{/editSwitcher}}\n\t\t\t\t` ).render( {\n\t\t\t\t\thasToolbar: options.hasToolbar,\n\t\t\t\t\teditSwitcher: options.editSwitcher,\n\t\t\t\t\teditingMsg: options.editingMsg\n\t\t\t\t} ),\n\t\t\t\toptions.readOnly ? [] : [\n\t\t\t\t\tnew Icon( {\n\t\t\t\t\t\ttagName: 'button',\n\t\t\t\t\t\tname: 'next-invert',\n\t\t\t\t\t\tadditionalClassNames: 'continue',\n\t\t\t\t\t\tdisabled: true,\n\t\t\t\t\t\ttitle: options.continueMsg\n\t\t\t\t\t} )\n\t\t\t\t],\n\t\t\t\ticons.cancel(),\n\t\t\t\t'initial-header'\n\t\t\t),\n\t\t\theaders.saveHeader( options.previewingMsg, 'save-header hidden' ),\n\t\t\theaders.savingHeader( mw.msg( 'mobile-frontend-editor-wait' ) )\n\t\t];\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tthis.$errorNoticeContainer = this.$el.find( '#error-notice-container' );\n\n\t\tOverlay.prototype.postRender.apply( this );\n\n\t\tthis.showHidden( '.initial-header' );\n\t},\n\tshow: function () {\n\t\tvar self = this;\n\t\tthis.allowCloseWindow = mw.confirmCloseWindow( {\n\t\t\t// Returns true if content has changed\n\t\t\ttest: function () {\n\t\t\t\t// Check if content has changed\n\t\t\t\treturn self.hasChanged();\n\t\t\t},\n\n\t\t\t// Message to show the user, if content has changed\n\t\t\tmessage: mw.msg( 'mobile-frontend-editor-cancel-confirm' ),\n\t\t\t// Event namespace\n\t\t\tnamespace: 'editwarning'\n\t\t} );\n\n\t\tthis.saved = false;\n\t\tOverlay.prototype.show.call( this );\n\n\t\t// Inform other interested code that the editor has loaded\n\t\tmw.hook( 'mobileFrontend.editorOpened' ).fire( this.editor );\n\t},\n\t/**\n\t * Back button click handler\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonClickBack: function () {},\n\t/**\n\t * Submit button click handler\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonClickSubmit: function () {\n\t\tthis.onSaveBegin();\n\t},\n\t/**\n\t * Continue button click handler\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonClickContinue: function () {\n\t\tthis.onStageChanges();\n\t},\n\t/**\n\t * \"Edit without logging in\" button click handler\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonClickAnonymous: function () {},\n\t/**\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Function} exit Callback to exit the overlay\n\t * @param {Function} cancel Callback to cancel exiting the overlay\n\t */\n\tonBeforeExit: function ( exit, cancel ) {\n\t\tvar self = this;\n\t\tif ( this.hasChanged() && !this.switching ) {\n\t\t\tif ( !this.windowManager ) {\n\t\t\t\tthis.windowManager = OO.ui.getWindowManager();\n\t\t\t\tthis.windowManager.addWindows( [ new mw.widgets.AbandonEditDialog() ] );\n\t\t\t}\n\t\t\tthis.windowManager.openWindow( 'abandonedit' )\n\t\t\t\t.closed.then( function ( data ) {\n\t\t\t\t\tif ( data && data.action === 'discard' ) {\n\t\t\t\t\t\t// log abandonment\n\t\t\t\t\t\tself.log( {\n\t\t\t\t\t\t\taction: 'abort',\n\t\t\t\t\t\t\tmechanism: 'cancel',\n\t\t\t\t\t\t\ttype: 'abandon'\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tself.onExit();\n\t\t\t\t\t\texit();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\tcancel();\n\t\t\treturn;\n\t\t}\n\t\tif ( !this.switching && !this.saved ) {\n\t\t\t// log leaving without changes\n\t\t\tthis.log( {\n\t\t\t\taction: 'abort',\n\t\t\t\tmechanism: 'cancel',\n\t\t\t\t// if this is VE, hasChanged will be false because the Surface has\n\t\t\t\t// already been destroyed (which is good because it stops us\n\t\t\t\t// double-showing the abandon changes dialog above)... but we can\n\t\t\t\t// test whether there *were* changes for logging purposes by\n\t\t\t\t// examining the target:\n\t\t\t\ttype: ( this.target && this.target.edited ) ? 'abandon' : 'nochange'\n\t\t\t} );\n\t\t}\n\t\tthis.onExit();\n\t\texit();\n\t},\n\tonExit: function () {\n\t\t// May not be set if overlay has not been previously shown\n\t\tif ( this.allowCloseWindow ) {\n\t\t\tthis.allowCloseWindow.release();\n\t\t}\n\t\tmw.hook( 'mobileFrontend.editorClosed' ).fire();\n\t},\n\t/**\n\t * Sets additional values used for anonymous editing warning.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Object} options\n\t * @return {jQuery.Element}\n\t */\n\tcreateAnonWarning: function ( options ) {\n\t\tvar $actions = $( '<div>' ).addClass( 'actions' ),\n\t\t\t$anonWarning = $( '<div>' ).addClass( 'anonwarning content' ).append(\n\t\t\t\tnew MessageBox( {\n\t\t\t\t\tclassName: 'mw-message-box-notice anon-msg',\n\t\t\t\t\tmsg: mw.msg( 'mobile-frontend-editor-anonwarning' )\n\t\t\t\t} ).$el,\n\t\t\t\t$actions\n\t\t\t),\n\t\t\tparams = util.extend( {\n\t\t\t\treturnto: options.returnTo || (\n\t\t\t\t\t// use wgPageName as this includes the namespace if outside Main\n\t\t\t\t\tmw.config.get( 'wgPageName' ) + '#/editor/' + ( options.sectionId || 'all' )\n\t\t\t\t),\n\t\t\t\twarning: 'mobile-frontend-edit-login-action'\n\t\t\t}, options.queryParams ),\n\t\t\tsignupParams = util.extend( {\n\t\t\t\ttype: 'signup',\n\t\t\t\twarning: 'mobile-frontend-edit-signup-action'\n\t\t\t}, options.signupQueryParams ),\n\t\t\tanonymousEditorActions = [\n\t\t\t\tnew Button( {\n\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-editor-anon' ),\n\t\t\t\t\tblock: true,\n\t\t\t\t\tadditionalClassNames: 'anonymous progressive',\n\t\t\t\t\tprogressive: true\n\t\t\t\t} ),\n\t\t\t\tnew Button( {\n\t\t\t\t\tblock: true,\n\t\t\t\t\thref: mw.util.getUrl( 'Special:UserLogin', params ),\n\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-watchlist-cta-button-login' )\n\t\t\t\t} ),\n\t\t\t\tnew Button( {\n\t\t\t\t\tblock: true,\n\t\t\t\t\thref: mw.util.getUrl( 'Special:UserLogin', util.extend( params, signupParams ) ),\n\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-watchlist-cta-button-signup' )\n\t\t\t\t} )\n\t\t\t];\n\n\t\t$actions.append(\n\t\t\tanonymousEditorActions.map( function ( action ) {\n\t\t\t\treturn action.$el;\n\t\t\t} )\n\t\t);\n\n\t\treturn $anonWarning;\n\t},\n\t/**\n\t * Creates and returns a copy of the anon talk message warning\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @return {jQuery.Element}\n\t */\n\tcreateAnonTalkWarning: function () {\n\t\treturn $( '.minerva-anon-talk-message' ).clone();\n\t},\n\t/**\n\t * Get an options object not containing any defaults or editor\n\t * specific options, so that it can be used to construct a\n\t * different editor for switching.\n\t *\n\t * @return {Object} Options\n\t */\n\tgetOptionsForSwitch: function () {\n\t\t// Only preserve options that would be passed in editor.js#setupEditor\n\t\t// and skip over defaults.\n\t\treturn {\n\t\t\tswitched: true,\n\t\t\toverlayManager: this.options.overlayManager,\n\t\t\tcurrentPageHTMLParser: this.options.currentPageHTMLParser,\n\t\t\tfakeScroll: this.options.fakeScroll,\n\t\t\tapi: this.options.api,\n\t\t\tlicenseMsg: this.options.licenseMsg,\n\t\t\ttitle: this.options.title,\n\t\t\ttitleObj: this.options.titleObj,\n\t\t\tisAnon: this.options.isAnon,\n\t\t\tisNewPage: this.options.isNewPage,\n\t\t\teditCount: this.options.editCount,\n\t\t\toldId: this.options.oldId,\n\t\t\tcontentLang: this.options.contentLang,\n\t\t\tcontentDir: this.options.contentDir,\n\t\t\tsessionId: this.options.sessionId,\n\t\t\tsectionId: this.options.sectionId\n\t\t};\n\t},\n\n\t/**\n\t * Checks whether the state of the thing being edited as changed. Expects to be\n\t * implemented by child class.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\thasChanged: function () {},\n\t/**\n\t * Get a promise that is resolved when the editor data has loaded,\n\t * or rejected when we're refusing to load the editor because the user is blocked.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @return {jQuery.Promise}\n\t */\n\tgetLoadingPromise: function () {\n\t\treturn this.dataPromise.then( function ( result ) {\n\t\t\t// check if user is blocked\n\t\t\tif ( result && result.blockinfo ) {\n\t\t\t\tvar block = parseBlockInfo( result.blockinfo ),\n\t\t\t\t\tmessage = blockMessageDrawer( block );\n\t\t\t\treturn util.Deferred().reject( message );\n\t\t\t}\n\t\t\treturn result;\n\t\t} );\n\t},\n\t/**\n\t * Handles a failed save due to a CAPTCHA provided by ConfirmEdit extension.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Object} details Details returned from the api.\n\t */\n\thandleCaptcha: function ( details ) {\n\t\tvar self = this,\n\t\t\t$input = this.$el.find( '.captcha-word' );\n\n\t\tif ( this.captchaShown ) {\n\t\t\t$input.val( '' );\n\t\t\t$input.attr( 'placeholder', this.options.captchaTryAgainMsg );\n\t\t\tsetTimeout( function () {\n\t\t\t\t$input.attr( 'placeholder', self.options.captchaMsg );\n\t\t\t}, 2000 );\n\t\t}\n\n\t\t// handle different mime types different\n\t\tif ( details.mime.indexOf( 'image/' ) === 0 ) {\n\t\t\t// image based CAPTCHA's like provided by FancyCaptcha, ReCaptcha or similar\n\t\t\tthis.$el.find( '.captcha-panel#question' ).detach();\n\t\t\tthis.$el.find( '.captcha-panel img' ).attr( 'src', details.url );\n\t\t} else {\n\t\t\t// not image based CAPTCHA.\n\t\t\tthis.$el.find( '.captcha-panel #image' ).detach();\n\t\t\tif ( details.mime.indexOf( 'text/html' ) === 0 ) {\n\t\t\t\t// handle mime type of HTML as HTML content (display as-is).\n\t\t\t\t// QuestyCaptcha now have default MIME type \"text/html\": see T147606\n\t\t\t\tthis.$el.find( '.captcha-panel #question' ).html( details.question );\n\t\t\t} else {\n\t\t\t\t// handle mime types\n\t\t\t\t// (other than image based ones and HTML based ones)\n\t\t\t\t// as plain text by default.\n\t\t\t\t// e.g. MathCaptcha (solve a math formula) or\n\t\t\t\t// SimpleCaptcha (simple math formula)\n\t\t\t\tthis.$el.find( '.captcha-panel #question' ).text( details.question );\n\t\t\t}\n\t\t}\n\n\t\tthis.showHidden( '.save-header, .captcha-panel' );\n\t\tthis.captchaShown = true;\n\t}\n} );\n\nmodule.exports = EditorOverlayBase;\n","var EditorOverlayBase = require( './EditorOverlayBase' ),\n\tutil = require( '../mobile.startup/util' ),\n\ticons = require( '../mobile.startup/icons' ),\n\tSection = require( '../mobile.startup/Section' ),\n\tsaveFailureMessage = require( './saveFailureMessage' ),\n\tEditorGateway = require( './EditorGateway' ),\n\tfakeToolbar = require( '../mobile.init/fakeToolbar' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\ttoast = require( '../mobile.startup/showOnPageReload' ),\n\tsetPreferredEditor = require( './setPreferredEditor' ),\n\tVisualEditorOverlay = require( './VisualEditorOverlay' );\n\n/**\n * Overlay that shows an editor\n *\n * @class SourceEditorOverlay\n * @uses Section\n * @uses EditorGateway\n * @uses VisualEditorOverlay\n * @extends EditorOverlayBase\n *\n * @param {Object} options Configuration options\n * @param {Object} [options.visualEditorConfig] falls back to wgVisualEditorConfig if not defined\n * @param {jQuery.Promise} [dataPromise] Optional promise for loading content\n */\nfunction SourceEditorOverlay( options, dataPromise ) {\n\tthis.isFirefox = /firefox/i.test( window.navigator.userAgent );\n\tthis.visualEditorConfig = options.visualEditorConfig ||\n\t\tmw.config.get( 'wgVisualEditorConfig' ) || {};\n\tthis.gateway = new EditorGateway( {\n\t\tapi: options.api,\n\t\ttitle: options.title,\n\t\tsectionId: options.sectionId,\n\t\toldId: options.oldId,\n\t\tisNewPage: options.isNewPage,\n\t\tfromModified: !!dataPromise\n\t} );\n\tthis.readOnly = !!options.oldId; // If old revision, readOnly mode\n\tthis.dataPromise = dataPromise || this.gateway.getContent();\n\tif ( this.isVisualEditorEnabled() ) {\n\t\toptions.editSwitcher = true;\n\t}\n\tif ( this.readOnly ) {\n\t\toptions.readOnly = true;\n\t\toptions.editingMsg = mw.msg( 'mobile-frontend-editor-viewing-source-page', options.title );\n\t} else {\n\t\toptions.editingMsg = mw.msg( 'mobile-frontend-editor-editing-page', options.title );\n\t}\n\toptions.previewingMsg = mw.msg( 'mobile-frontend-editor-previewing-page', options.title );\n\tEditorOverlayBase.call(\n\t\tthis,\n\t\tutil.extend( true,\n\t\t\t{ events: { 'input .wikitext-editor': 'onInputWikitextEditor' } },\n\t\t\toptions\n\t\t)\n\t);\n}\n\nmfExtend( SourceEditorOverlay, EditorOverlayBase, {\n\t/**\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, EditorOverlayBase.prototype.templatePartials, {\n\t\tcontent: util.template( `\n<div lang=\"{{contentLang}}\" dir=\"{{contentDir}}\" class=\"editor-container content\">\n\t<textarea class=\"wikitext-editor\" id=\"wikitext-editor\" cols=\"40\" rows=\"10\" placeholder=\"{{placeholder}}\"></textarea>\n\t<div class=\"preview\"></div>\n</div>\n\t\t` )\n\t} ),\n\t/**\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\teditor: 'wikitext',\n\t/**\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tsectionLine: '',\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\tEditorOverlayBase.prototype.show.apply( this, arguments );\n\t\t// Ensure we do this after showing the overlay, otherwise it doesn't work.\n\t\tthis._resizeEditor();\n\t},\n\t/**\n\t * Check whether VisualEditor is enabled or not.\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisVisualEditorEnabled: function () {\n\t\tvar config = this.visualEditorConfig,\n\t\t\tns = config.namespaces;\n\n\t\treturn ns &&\n\t\t\tns.indexOf(\n\t\t\t\tmw.config.get( 'wgNamespaceNumber' )\n\t\t\t) > -1 &&\n\t\t\tmw.config.get( 'wgTranslatePageTranslation' ) !== 'translation' &&\n\t\t\tmw.config.get( 'wgPageContentModel' ) === 'wikitext';\n\t},\n\t/**\n\t * Wikitext Editor input handler\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonInputWikitextEditor: function () {\n\t\tthis.gateway.setContent( this.$el.find( '.wikitext-editor' ).val() );\n\t\tthis.$el.find( '.continue, .submit' ).prop( 'disabled', false );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonClickBack: function () {\n\t\tEditorOverlayBase.prototype.onClickBack.apply( this, arguments );\n\t\tthis._hidePreview();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this,\n\t\t\tconfig = this.visualEditorConfig,\n\t\t\toptions = this.options,\n\t\t\tshowAnonWarning = options.isAnon && !options.switched;\n\n\t\t// log edit attempt\n\t\tthis.log( { action: 'ready' } );\n\t\tthis.log( { action: 'loaded' } );\n\n\t\tif ( this.isVisualEditorEnabled() ) {\n\t\t\tmw.loader.using( 'ext.visualEditor.switching' ).then( function () {\n\t\t\t\tvar switchToolbar, windowManager, switchWindow,\n\t\t\t\t\ttoolFactory = new OO.ui.ToolFactory(),\n\t\t\t\t\ttoolGroupFactory = new OO.ui.ToolGroupFactory();\n\n\t\t\t\ttoolFactory.register( mw.libs.ve.MWEditModeVisualTool );\n\t\t\t\ttoolFactory.register( mw.libs.ve.MWEditModeSourceTool );\n\t\t\t\tswitchToolbar = new OO.ui.Toolbar( toolFactory, toolGroupFactory, {\n\t\t\t\t\tclasses: [ 'editor-switcher' ]\n\t\t\t\t} );\n\n\t\t\t\tswitchToolbar.on( 'switchEditor', function ( mode ) {\n\t\t\t\t\t// NOTE: Should be just config.allowSwitchingToVisualMode, but we need to\n\t\t\t\t\t// preserve compatibility for a bit.\n\t\t\t\t\tvar canSwitch = config.allowSwitchingToVisualMode ||\n\t\t\t\t\t\tconfig.fullRestbaseUrl ||\n\t\t\t\t\t\tconfig.allowLossySwitching;\n\n\t\t\t\t\tif ( mode === 'visual' ) {\n\t\t\t\t\t\tif ( !self.gateway.hasChanged ) {\n\t\t\t\t\t\t\tself._switchToVisualEditor();\n\t\t\t\t\t\t} else if ( canSwitch ) {\n\t\t\t\t\t\t\t// Pass wikitext if there are changes.\n\t\t\t\t\t\t\tself._switchToVisualEditor( self.gateway.content );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twindowManager = new OO.ui.WindowManager();\n\t\t\t\t\t\t\tswitchWindow = new mw.libs.ve.SwitchConfirmDialog();\n\t\t\t\t\t\t\twindowManager.$element.appendTo( document.body );\n\t\t\t\t\t\t\twindowManager.addWindows( [ switchWindow ] );\n\t\t\t\t\t\t\twindowManager.openWindow( switchWindow, { mode: 'simple' } )\n\t\t\t\t\t\t\t\t.closed.then( function ( data ) {\n\t\t\t\t\t\t\t\t\tif ( data && data.action === 'discard' ) {\n\t\t\t\t\t\t\t\t\t\tself._switchToVisualEditor();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twindowManager.destroy();\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tswitchToolbar.setup( [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'editMode',\n\t\t\t\t\t\ttype: 'list',\n\t\t\t\t\t\ticon: 'edit',\n\t\t\t\t\t\ttitle: mw.msg( 'visualeditor-mweditmode-tooltip' ),\n\t\t\t\t\t\tinclude: [ 'editModeVisual', 'editModeSource' ]\n\t\t\t\t\t}\n\t\t\t\t] );\n\n\t\t\t\tself.$el.find( '.switcher-container' ).html( switchToolbar.$element );\n\t\t\t\tswitchToolbar.emit( 'updateState' );\n\t\t\t} );\n\t\t}\n\n\t\tEditorOverlayBase.prototype.postRender.apply( this );\n\n\t\t// This spinner is still used when displaying save/preview panel\n\t\tthis.$el.find( '.overlay-content' ).append( icons.spinner().$el );\n\t\tthis.hideSpinner();\n\n\t\tthis.$preview = this.$el.find( '.preview' );\n\t\tthis.$content = this.$el.find( '.wikitext-editor' );\n\t\t// The following classes can be used here:\n\t\t// * mw-editfont-monospace\n\t\t// * mw-editfont-sans-serif\n\t\t// * mw-editfont-serif\n\t\tthis.$content.addClass( 'mw-editfont-' + mw.user.options.get( 'editfont' ) );\n\t\tif ( showAnonWarning ) {\n\t\t\tthis.$anonWarning = this.createAnonWarning( options );\n\t\t\tthis.$anonTalkWarning = this.createAnonTalkWarning();\n\t\t\tthis.$el.find( '.editor-container' ).append( [ this.$anonTalkWarning, this.$anonWarning ] );\n\t\t\tthis.$content.hide();\n\t\t\t// the user has to click login, signup or edit without login,\n\t\t\t// disable \"Next\" button on top right\n\t\t\tthis.$anonHiddenButtons = this.$el.find( '.overlay-header .continue, .editor-switcher' ).hide();\n\t\t}\n\t\t// make license links open in separate tabs\n\t\tthis.$el.find( '.license a' ).attr( 'target', '_blank' );\n\n\t\t// If in readOnly mode, make textarea readonly\n\t\tif ( this.readOnly ) {\n\t\t\tthis.$content.prop( 'readonly', true );\n\t\t}\n\n\t\tthis.$content\n\t\t\t.on( 'input', this._resizeEditor.bind( this ) )\n\t\t\t.one( 'input', function () {\n\t\t\t\tself.log( { action: 'firstChange' } );\n\t\t\t} );\n\n\t\tif ( this.isFirefox ) {\n\t\t\tthis.$content.on( 'mousedown', function () {\n\t\t\t\t// Support: Firefox Mobile\n\t\t\t\t// Firefox scrolls back to the top of the page *every time*\n\t\t\t\t// you tap on the textarea. This makes things slightly\n\t\t\t\t// more usable by restoring your scroll offset every time\n\t\t\t\t// the page scrolls for the next 1000ms.\n\t\t\t\t// The page will still flicker every time the user touches\n\t\t\t\t// to place the cursor, but this is better than completely\n\t\t\t\t// losing your scroll offset. (T214880)\n\t\t\t\tvar docEl = document.documentElement,\n\t\t\t\t\tscrollTop = docEl.scrollTop;\n\t\t\t\tfunction blockScroll() {\n\t\t\t\t\tdocEl.scrollTop = scrollTop;\n\t\t\t\t}\n\t\t\t\twindow.addEventListener( 'scroll', blockScroll );\n\t\t\t\tsetTimeout( function () {\n\t\t\t\t\twindow.removeEventListener( 'scroll', blockScroll );\n\t\t\t\t}, 1000 );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !showAnonWarning ) {\n\t\t\tthis._loadContent();\n\t\t}\n\t},\n\n\t/**\n\t * Handles click on \"Edit without login\" in anonymous editing warning.\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @private\n\t */\n\tonClickAnonymous: function () {\n\t\tthis.$anonWarning.hide();\n\t\tthis.$anonTalkWarning.hide();\n\t\t// reenable \"Next\" button\n\t\tthis.$anonHiddenButtons.show();\n\t\tthis._loadContent();\n\t},\n\n\t/**\n\t * Prepares the preview interface and reveals the save screen of the overlay\n\t *\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonStageChanges: function () {\n\t\tvar self = this,\n\t\t\tparams = {\n\t\t\t\ttext: this.getContent()\n\t\t\t};\n\n\t\tthis.scrollTop = util.getDocument().find( 'body' ).scrollTop();\n\t\tthis.$content.hide();\n\t\tthis.showSpinner();\n\n\t\tif ( mw.config.get( 'wgIsMainPage' ) ) {\n\t\t\tparams.mainpage = 1; // Setting it to 0 will have the same effect\n\t\t}\n\n\t\tfunction hideSpinnerAndShowPreview() {\n\t\t\tself.hideSpinner();\n\t\t\tself.$preview.show();\n\t\t\tmw.hook( 'wikipage.content' ).fire( self.$preview );\n\t\t}\n\n\t\tthis.gateway.getPreview( params ).then( function ( result ) {\n\t\t\tvar parsedText = result.text,\n\t\t\t\tparsedSectionLine = result.line;\n\n\t\t\tself.sectionId = result.id;\n\t\t\t// On desktop edit summaries strip tags. Mimic this behavior on mobile devices\n\t\t\tself.sectionLine = self.parseHTML( '<div>' ).html( parsedSectionLine ).text();\n\t\t\tnew Section( {\n\t\t\t\tel: self.$preview,\n\t\t\t\ttext: parsedText\n\t\t\t} ).$el.find( 'a' ).on( 'click', false );\n\n\t\t\thideSpinnerAndShowPreview();\n\t\t}, function () {\n\t\t\tself.$preview.addClass(\n\t\t\t\t'mw-message-box mw-message-box-error'\n\t\t\t).text( mw.msg( 'mobile-frontend-editor-error-preview' ) );\n\n\t\t\thideSpinnerAndShowPreview();\n\t\t} );\n\n\t\tEditorOverlayBase.prototype.onStageChanges.apply( this, arguments );\n\t},\n\n\t/**\n\t * Hides the preview and reverts back to initial screen.\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @private\n\t */\n\t_hidePreview: function () {\n\t\tthis.gateway.abortPreview();\n\t\tthis.hideSpinner();\n\t\tthis.$preview.removeClass(\n\t\t\t'mw-message-box-error'\n\t\t).hide();\n\t\tthis.$content.show();\n\t\twindow.scrollTo( 0, this.scrollTop );\n\t\tthis.showHidden( '.initial-header' );\n\t},\n\n\t/**\n\t * Resize the editor textarea, maintaining scroll position in iOS\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\t_resizeEditor: function () {\n\t\tvar scrollTop, container, $scrollContainer;\n\n\t\tif ( !this.$scrollContainer ) {\n\t\t\tcontainer = OO.ui.Element.static\n\t\t\t\t.getClosestScrollableContainer( this.$content[ 0 ] );\n\t\t\t// The scroll container will be either within the view\n\t\t\t// or the document element itself.\n\t\t\t$scrollContainer = this.$el.find( container ).length ?\n\t\t\t\tthis.$el.find( container ) : util.getDocument();\n\t\t\tthis.$scrollContainer = $scrollContainer;\n\t\t\tthis.$content.css( 'padding-bottom', this.$scrollContainer.height() * 0.6 );\n\t\t} else {\n\t\t\t$scrollContainer = this.$scrollContainer;\n\t\t}\n\n\t\t// Only do this if scroll container exists\n\t\tif ( this.$content.prop( 'scrollHeight' ) && $scrollContainer.length ) {\n\t\t\tscrollTop = $scrollContainer.scrollTop();\n\t\t\tthis.$content\n\t\t\t\t.css( 'height', 'auto' )\n\t\t\t\t// can't reuse prop( 'scrollHeight' ) because we need the current value\n\t\t\t\t.css( 'height', ( this.$content.prop( 'scrollHeight' ) + 2 ) + 'px' );\n\t\t\t$scrollContainer.scrollTop( scrollTop );\n\t\t}\n\t},\n\n\t/**\n\t * Set content to the user input field.\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @param {string} content The content to set.\n\t */\n\tsetContent: function ( content ) {\n\t\tthis.$content\n\t\t\t.show()\n\t\t\t.val( content );\n\t\tthis._resizeEditor();\n\t},\n\n\t/**\n\t * Returns the content of the user input field.\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @return {string}\n\t */\n\tgetContent: function () {\n\t\treturn this.$content.val();\n\t},\n\n\t/**\n\t * Requests content from the API and reveals it in UI.\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @private\n\t */\n\t_loadContent: function () {\n\t\tvar self = this;\n\n\t\tthis.$content.hide();\n\n\t\tthis.getLoadingPromise()\n\t\t\t.then( function ( result ) {\n\t\t\t\tvar content = result.text;\n\n\t\t\t\tself.setContent( content );\n\n\t\t\t\tif ( self.gateway.fromModified ) {\n\t\t\t\t\t// Trigger intial EditorGateway#setContent and update save button\n\t\t\t\t\tself.onInputWikitextEditor();\n\t\t\t\t}\n\t\t\t} );\n\t},\n\n\t/**\n\t * Loads a {VisualEditorOverlay} and replaces the existing SourceEditorOverlay with it\n\t * based on the current option values.\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @private\n\t * @param {string} [wikitext] Wikitext to pass to VE\n\t */\n\t_switchToVisualEditor: function ( wikitext ) {\n\t\tvar self = this;\n\t\tthis.log( {\n\t\t\taction: 'abort',\n\t\t\ttype: 'switchnochange',\n\t\t\tmechanism: 'navigate'\n\t\t} );\n\t\tthis.logFeatureUse( {\n\t\t\tfeature: 'editor-switch',\n\t\t\taction: 'visual-mobile'\n\t\t} );\n\n\t\t// Save a user setting indicating that this user prefers using the VisualEditor\n\t\tsetPreferredEditor( 'VisualEditor' );\n\n\t\tthis.$el.addClass( 'switching' );\n\t\tthis.$el.find( '.overlay-header-container' ).hide();\n\t\tthis.$el.append( fakeToolbar() );\n\t\tthis.$content.prop( 'readonly', true );\n\n\t\tmw.loader.using( 'ext.visualEditor.targetLoader' ).then( function () {\n\t\t\tmw.libs.ve.targetLoader.addPlugin( 'mobile.editor.ve' );\n\t\t\treturn mw.libs.ve.targetLoader.loadModules( 'visual' );\n\t\t} ).then(\n\t\t\tfunction () {\n\t\t\t\tvar newOverlay, options = self.getOptionsForSwitch();\n\t\t\t\toptions.SourceEditorOverlay = SourceEditorOverlay;\n\t\t\t\tif ( wikitext ) {\n\t\t\t\t\toptions.dataPromise = mw.libs.ve.targetLoader.requestPageData( 'visual', mw.config.get( 'wgRelevantPageName' ), {\n\t\t\t\t\t\tsection: options.sectionId,\n\t\t\t\t\t\toldId: options.oldId || mw.config.get( 'wgRevisionId' ),\n\t\t\t\t\t\ttargetName: 'mobile',\n\t\t\t\t\t\tmodified: true,\n\t\t\t\t\t\twikitext: wikitext\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tdelete options.dataPromise;\n\t\t\t\t}\n\t\t\t\tnewOverlay = new VisualEditorOverlay( options );\n\t\t\t\tnewOverlay.getLoadingPromise().then( function () {\n\t\t\t\t\tself.switching = true;\n\t\t\t\t\tself.overlayManager.replaceCurrent( newOverlay );\n\t\t\t\t\tself.switching = false;\n\t\t\t\t} );\n\t\t\t},\n\t\t\tfunction () {\n\t\t\t\tself.$el.removeClass( 'switching' );\n\t\t\t\tself.$el.find( '.overlay-header-container' ).show();\n\t\t\t\tself.$el.find( '.ve-mobile-fakeToolbar-container' ).remove();\n\t\t\t\tself.$content.prop( 'readonly', false );\n\t\t\t\t// FIXME: We should show an error notification, but right now toast\n\t\t\t\t// notifications are not dismissible when shown within the editor.\n\t\t\t}\n\t\t);\n\t},\n\n\t/**\n\t * Executed when the editor clicks the save/publish button. Handles logging and submitting\n\t * the save action to the editor API.\n\t *\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonSaveBegin: function () {\n\t\tvar self = this,\n\t\t\toptions = {\n\t\t\t\tsummary: this.$el.find( '.summary' ).val()\n\t\t\t};\n\n\t\tif ( self.sectionLine !== '' ) {\n\t\t\toptions.summary = '/* ' + self.sectionLine + ' */' + options.summary;\n\t\t}\n\t\tEditorOverlayBase.prototype.onSaveBegin.apply( this, arguments );\n\t\tif ( this.confirmAborted ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( this.captchaId ) {\n\t\t\toptions.captchaId = this.captchaId;\n\t\t\toptions.captchaWord = this.$el.find( '.captcha-word' ).val();\n\t\t}\n\n\t\tthis.showHidden( '.saving-header' );\n\n\t\tthis.gateway.save( options )\n\t\t\t.then( function ( newRevId ) {\n\t\t\t\tvar title = self.options.title;\n\t\t\t\t// Special case behaviour of main page\n\t\t\t\tif ( mw.config.get( 'wgIsMainPage' ) ) {\n\t\t\t\t\t// FIXME: Blocked on T189173\n\t\t\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\t\t\twindow.location = mw.util.getUrl( title );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tself.onSaveComplete( newRevId );\n\t\t\t}, function ( data ) {\n\t\t\t\tself.onSaveFailure( data );\n\t\t\t} );\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @param {number|null} newRevId ID of the newly created revision, or null if it was a null\n\t *  edit.\n\t */\n\tonSaveComplete: function ( newRevId ) {\n\t\tEditorOverlayBase.prototype.onSaveComplete.apply( this, arguments );\n\n\t\t// The parent class changes the location hash in a setTimeout, so wait\n\t\t// for that to happen before reloading.\n\t\tsetTimeout( function () {\n\t\t\tif ( newRevId ) {\n\t\t\t\t// Set a notify parameter similar to venotify in VisualEditor.\n\t\t\t\tvar uri = new mw.Uri( location.href );\n\t\t\t\turi.query.mfnotify = this.isNewPage ? 'created' : 'saved';\n\t\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\t\twindow.location.search = uri.getQueryString();\n\t\t\t} else {\n\t\t\t\t// Null edit; do not add notify parameter.\n\t\t\t\t// Note the \"#\" may be in the URL.\n\t\t\t\t// If so, using window.location alone will not reload the page\n\t\t\t\t// we need to forcefully refresh\n\t\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\t\twindow.location.reload();\n\t\t\t}\n\t\t} );\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tshowSaveCompleteMsg: function ( msg ) {\n\t\ttoast.showOnPageReload( msg, { type: 'success' } );\n\t},\n\n\t/**\n\t * Executed when page save fails. Handles error display and bookkeeping,\n\t * passes logging duties to the parent.\n\t *\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonSaveFailure: function ( data ) {\n\t\tvar msg, noRetry;\n\n\t\tif ( data.edit && data.edit.captcha ) {\n\t\t\tthis.captchaId = data.edit.captcha.id;\n\t\t\tthis.handleCaptcha( data.edit.captcha );\n\t\t} else {\n\t\t\tmsg = saveFailureMessage( data );\n\t\t\tthis.reportError( msg );\n\t\t\tthis.showHidden( '.save-header, .save-panel' );\n\n\t\t\t// Some errors may be temporary, but for others we know for sure that the save will\n\t\t\t// never succeed, so don't confuse the user by giving them the option to retry.\n\t\t\tnoRetry = data.errors && data.errors.some( function ( error ) {\n\t\t\t\treturn error.code === 'abusefilter-disallowed';\n\t\t\t} );\n\n\t\t\tif ( noRetry ) {\n\t\t\t\t// disable continue and save buttons, reenabled when user changes content\n\t\t\t\tthis.$el.find( '.continue, .submit' ).prop( 'disabled', true );\n\t\t\t}\n\t\t}\n\n\t\tEditorOverlayBase.prototype.onSaveFailure.apply( this, arguments );\n\t},\n\n\t/**\n\t * Checks whether the existing content has changed.\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @return {boolean}\n\t */\n\thasChanged: function () {\n\t\treturn this.gateway.hasChanged;\n\t}\n} );\n\nmodule.exports = SourceEditorOverlay;\n","/* global ve, $ */\nvar EditorOverlayBase = require( './EditorOverlayBase' ),\n\tEditorGateway = require( './EditorGateway' ),\n\tfakeToolbar = require( '../mobile.init/fakeToolbar' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\trouter = mw.loader.require( 'mediawiki.router' ),\n\tidentifyLeadParagraph = require( './identifyLeadParagraph' ),\n\tsetPreferredEditor = require( './setPreferredEditor' ),\n\tutil = require( '../mobile.startup/util' ),\n\tOverlayManager = require( '../mobile.startup/OverlayManager' ),\n\toverlayManager = OverlayManager.getSingleton();\n\n/**\n * Overlay for VisualEditor view\n *\n * @class VisualEditorOverlay\n * @extends EditorOverlayBase\n *\n * @param {Object} options Configuration options\n * @param {SourceEditorOverlay} options.SourceEditorOverlay Class to use for standard\n *  Wikitext editor. It must be passed in explicitly to avoid a cyclic\n *  dependency between VisualEditorOverlay and SourceEditorOverlay\n */\nfunction VisualEditorOverlay( options ) {\n\tvar surfaceReady = util.Deferred();\n\n\tEditorOverlayBase.call( this,\n\t\tutil.extend( {\n\t\t\teditSwitcher: false,\n\t\t\thasToolbar: true,\n\t\t\tonBeforeExit: this.onBeforeExit.bind( this ),\n\t\t\tisBorderBox: false,\n\t\t\tclassName: 'overlay editor-overlay editor-overlay-ve'\n\t\t}, options )\n\t);\n\tthis.SourceEditorOverlay = options.SourceEditorOverlay;\n\tthis.isNewPage = options.isNewPage;\n\tthis.fromModified = options.dataPromise && options.switched;\n\n\t// VE surfaces must be attached to the DOM while initializing, and measurable\n\tthis.$el.addClass( 'editor-overlay-ve-initializing' );\n\toverlayManager.container.appendChild( this.$el[ 0 ] );\n\n\t// Gateway present for a few utility purposes; the VE articletarget\n\t// handles the actual API calls separately\n\tthis.gateway = new EditorGateway( {\n\t\tapi: options.api,\n\t\ttitle: options.title,\n\t\tsectionId: options.sectionId,\n\t\toldId: options.oldId,\n\t\tisNewPage: options.isNewPage\n\t} );\n\n\tthis.origDataPromise = this.options.dataPromise || mw.libs.ve.targetLoader.requestPageData(\n\t\t'visual',\n\t\toptions.titleObj.getPrefixedDb(),\n\t\t{\n\t\t\tsessionStore: true,\n\t\t\tsection: options.sectionId || null,\n\t\t\toldId: options.oldId || undefined,\n\t\t\ttargetName: ve.init.mw.MobileArticleTarget.static.trackingName\n\t\t}\n\t);\n\n\tthis.target = ve.init.mw.targetFactory.create( 'article', this, {\n\t\t$element: this.$el,\n\t\t// string or null, but not undefined\n\t\tsection: this.options.sectionId || null\n\t} );\n\tthis.target.once( 'surfaceReady', function () {\n\t\tsurfaceReady.resolve();\n\n\t\tthis.target.getSurface().getModel().getDocument().once( 'transact', function () {\n\t\t\tthis.log( { action: 'firstChange' } );\n\t\t}.bind( this ) );\n\t}.bind( this ) );\n\n\tthis.target.load( this.origDataPromise );\n\n\t// Overlay is only shown after this is resolved. It must be resolved\n\t// with the API response regardless of what we are waiting for.\n\tthis.dataPromise = this.origDataPromise.then( function ( data ) {\n\t\treturn surfaceReady.then( function () {\n\t\t\tthis.$el.removeClass( 'editor-overlay-ve-initializing' );\n\t\t\treturn data && data.visualeditor;\n\t\t}.bind( this ) );\n\t}.bind( this ) );\n}\n\nmfExtend( VisualEditorOverlay, EditorOverlayBase, {\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, EditorOverlayBase.prototype.templatePartials, {\n\t\teditHeader: util.template( `\n<div class=\"overlay-header header initial-header hideable hidden\">\n\t<div class=\"toolbar\"></div>\n</div>\n\t\t` ),\n\t\tcontent: util.template( `\n<div class=\"surface\" lang=\"{{contentLang}}\" dir=\"{{contentDir}}\">\n</div>\n\t\t` )\n\t} ),\n\t/**\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\teditor: 'visualeditor',\n\t/**\n\t * Destroy the existing VisualEditor target.\n\t *\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tdestroyTarget: function () {\n\t\tif ( this.target ) {\n\t\t\tthis.target.destroy();\n\t\t\tthis.target = null;\n\t\t}\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\tvar\n\t\t\toptions = this.options,\n\t\t\tshowAnonWarning = options.isAnon && !options.switched;\n\n\t\tEditorOverlayBase.prototype.show.apply( this, arguments );\n\n\t\t// log edit attempt\n\t\tthis.log( { action: 'ready' } );\n\t\tthis.log( { action: 'loaded' } );\n\n\t\tif ( !showAnonWarning ) {\n\t\t\tthis.targetInit();\n\t\t} else {\n\t\t\tthis.$anonWarning = this.createAnonWarning( this.options );\n\t\t\tthis.$anonTalkWarning = this.createAnonTalkWarning();\n\t\t\tthis.$el.append( [ this.$anonTalkWarning, this.$anonWarning ] );\n\t\t\tthis.$el.find( '.overlay-content' ).hide();\n\t\t}\n\n\t\tthis.emit( 'editor-loaded' );\n\t},\n\t/**\n\t * Initialize the target after it has been made visible\n\t */\n\ttargetInit: function () {\n\t\t// Note this.target will not be set if an error occurred and/or destroyTarget was called.\n\t\tif ( this.target ) {\n\t\t\tthis.target.afterSurfaceReady();\n\t\t\tthis.scrollToLeadParagraph();\n\t\t}\n\t},\n\t/**\n\t * Scroll so that the lead paragraph in edit mode shows at the same place on the screen\n\t * as the lead paragraph in read mode.\n\t *\n\t * Their normal position is different because of (most importantly) the lead paragraph\n\t * transformation to move it before the infobox, and also invisible templates and slugs\n\t * caused by the presence of hatnote templates (both only shown in edit mode).\n\t */\n\tscrollToLeadParagraph: function () {\n\t\tvar editLead, editLeadView, readLead, offset, initialCursorOffset,\n\t\t\tcurrentPageHTMLParser = this.options.currentPageHTMLParser,\n\t\t\tfakeScroll = this.options.fakeScroll,\n\t\t\t$window = $( window ),\n\t\t\tsection = this.target.section,\n\t\t\tsurface = this.target.getSurface(),\n\t\t\tmode = surface.getMode();\n\n\t\tif ( ( section === null || section === '0' ) && mode === 'visual' ) {\n\t\t\teditLead = identifyLeadParagraph( surface.getView().$attachedRootNode );\n\t\t\tif ( currentPageHTMLParser.getLeadSectionElement() ) {\n\t\t\t\treadLead = identifyLeadParagraph( currentPageHTMLParser.getLeadSectionElement() );\n\t\t\t}\n\n\t\t\tif ( editLead && readLead ) {\n\t\t\t\toffset = $( editLead ).offset().top - ( $( readLead ).offset().top - fakeScroll );\n\t\t\t\t// Set a model range to match\n\t\t\t\teditLeadView = $( editLead ).data( 'view' );\n\t\t\t\tif ( editLeadView ) {\n\t\t\t\t\tsurface.getModel().setLinearSelection(\n\t\t\t\t\t\tnew ve.Range( editLeadView.getModel().getRange().start )\n\t\t\t\t\t);\n\t\t\t\t\tinitialCursorOffset =\n\t\t\t\t\t\tsurface.getView().getSelection().getSelectionBoundingRect().top;\n\t\t\t\t\t// Ensure the surface is tall enough to scroll the cursor into view\n\t\t\t\t\tsurface.$element.css( 'min-height', $window.height() + initialCursorOffset - surface.padding.top );\n\t\t\t\t}\n\t\t\t\t$window.scrollTop( offset );\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tonBeforeExit: function ( exit, cancel ) {\n\t\tvar overlay = this;\n\t\tEditorOverlayBase.prototype.onBeforeExit.call( this, function () {\n\t\t\t// If this function is called, the parent method has decided that we should exit\n\t\t\texit();\n\t\t\t// VE-specific cleanup\n\t\t\toverlay.destroyTarget();\n\t\t}, cancel );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tonClickBack: function () {\n\t\tEditorOverlayBase.prototype.onClickBack.apply( this, arguments );\n\t\tthis.switchToEditor();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tonClickAnonymous: function () {\n\t\tvar self = this;\n\t\tthis.$anonWarning.hide();\n\t\tthis.$anonTalkWarning.hide();\n\t\tself.$el.find( '.overlay-content' ).show();\n\t\tthis.targetInit();\n\t},\n\t/**\n\t * Reveal the editing interface.\n\t *\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tswitchToEditor: function () {\n\t\tthis.showHidden( '.initial-header' );\n\t},\n\t/**\n\t * Loads an {SourceEditorOverlay} and replaces the existing {VisualEditorOverlay}\n\t *\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t * @param {jQuery.Promise} [dataPromise] Optional promise for loading content\n\t */\n\tswitchToSourceEditor: function ( dataPromise ) {\n\t\tvar self = this,\n\t\t\tSourceEditorOverlay = this.SourceEditorOverlay,\n\t\t\tnewOverlay,\n\t\t\toptions = this.getOptionsForSwitch();\n\t\tthis.log( {\n\t\t\taction: 'abort',\n\t\t\ttype: 'switchnochange',\n\t\t\tmechanism: 'navigate'\n\t\t} );\n\t\tthis.logFeatureUse( {\n\t\t\tfeature: 'editor-switch',\n\t\t\taction: 'source-mobile'\n\t\t} );\n\n\t\t// Save a user setting indicating that this user prefers using the SourceEditor\n\t\tsetPreferredEditor( 'SourceEditor' );\n\n\t\tthis.$el.addClass( 'switching' );\n\t\tthis.$el.find( '.overlay-header-container' ).hide();\n\t\tthis.$el.append( fakeToolbar() );\n\t\tthis.target.getSurface().setReadOnly( true );\n\n\t\tif ( dataPromise ) {\n\t\t\t// If switching with edits we can't stay in section editing, as a VE edit\n\t\t\t// can always affect the whole document (e.g. references)\n\t\t\toptions.sectionId = null;\n\t\t\trouter.navigateTo( document.title, {\n\t\t\t\tpath: '#/editor/all',\n\t\t\t\tuseReplaceState: true\n\t\t\t} );\n\t\t}\n\t\tnewOverlay = new SourceEditorOverlay( options, dataPromise );\n\t\tnewOverlay.getLoadingPromise().then( function () {\n\t\t\tself.switching = true;\n\t\t\tself.overlayManager.replaceCurrent( newOverlay );\n\t\t\tself.switching = false;\n\t\t} );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\thasChanged: function () {\n\t\tif ( this.saved ) {\n\t\t\t// If we just saved, there's not really any changes, and the\n\t\t\t// target is going to be destroyed in one tick\n\t\t\treturn false;\n\t\t}\n\t\treturn this.fromModified || (\n\t\t\tthis.target &&\n\t\t\tthis.target.getSurface() &&\n\t\t\tthis.target.getSurface().getModel().hasBeenModified()\n\t\t);\n\t}\n} );\n\nmodule.exports = VisualEditorOverlay;\n","const\n\tDrawer = require( '../mobile.startup/Drawer' ),\n\tBlockMessageDetails = require( './BlockMessageDetails' );\n\n/**\n * @typedef {Object} BlockMessageOptions\n * @property {number} blockId representing the block\n * @property {boolean} partial is this a partial block?\n * @property {Object} creator\n * @property {string} creator.name of the blocker\n * @property {string} creator.url associated with the block\n * @property {string} reason for block\n * @property {string} [duration] of block e.g. \"1 week\"\n * @property {string} [expiry] of block, wrapped in parentheses\n *  e.g. \"(1st September 2019)\"\n */\n\n/**\n * This creates the drawer at the bottom of the screen that appears when a\n * blocked user tries to edit.\n *\n * @param {BlockMessageOptions} props\n * @return {Drawer}\n */\nmodule.exports = function blockMessageDrawer( props ) {\n\tconst blockDrawer = new Drawer( {\n\t\tclassName: 'drawer block-message',\n\t\tonBeforeHide: function ( drawer ) {\n\t\t\tdrawer.$el.remove();\n\t\t},\n\t\tonShow: function () {\n\t\t\tconst $drawer = blockDrawer.$el.find( '.drawer.block-message' ),\n\t\t\t\tdrawerTop = $drawer.offset().top - 100,\n\t\t\t\tcreatorTop = blockDrawer.$el.find( '.block-message-creator' ).offset().top - 100,\n\t\t\t\tbuttonsTop = blockDrawer.$el.find( '.block-message-buttons' ).offset().top - 100,\n\t\t\t\t$seeMore = blockDrawer.$el.find( '.block-message-see-more' ),\n\t\t\t\twiki = mw.config.get( 'wgDBname' );\n\n\t\t\t$drawer.css( 'top', drawerTop + ( buttonsTop - creatorTop ) );\n\t\t\t$seeMore.on(\n\t\t\t\t'click',\n\t\t\t\tfunction () {\n\t\t\t\t\tconst $container = blockDrawer.$el.find( '.block-message-container' );\n\t\t\t\t\t$drawer.css( 'top', 0 );\n\t\t\t\t\t$container.css( 'overflow-y', 'auto' );\n\t\t\t\t\t$container.css( 'height', buttonsTop - $container.offset().top );\n\t\t\t\t\t$seeMore.hide();\n\n\t\t\t\t\tif ( mw.config.get( 'wgMFTrackBlockNotices' ) ) {\n\t\t\t\t\t\tmw.track( 'counter.MediaWiki.BlockNotices.' + wiki + '.MobileFrontend.reasonShown', 1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif ( mw.config.get( 'wgMFTrackBlockNotices' ) ) {\n\t\t\t\tmw.track( 'counter.MediaWiki.BlockNotices.' + wiki + '.MobileFrontend.shown', 1 );\n\t\t\t}\n\t\t},\n\t\tchildren: [\n\t\t\t( new BlockMessageDetails( props ) ).$el\n\t\t]\n\t} );\n\treturn blockDrawer;\n};\n","/* global $ */\n/**\n * Find first paragraph that has text content, i.e. paragraphs that are not empty.\n * Keep in sync with MoveLeadParagraphTransform::identifyLeadParagraph().\n *\n * @param {jQuery} $body Where to search for paragraphs\n * @return {Node|null} The lead paragraph\n */\nmodule.exports = function identifyLeadParagraph( $body ) {\n\t// Keep in sync with MoveLeadParagraphTransform::isNotEmptyNode()\n\tfunction isNotEmptyNode( node ) {\n\t\t// Ignore VE whitespace characters\n\t\treturn !/^[\\s↵➞]*$/.test( node.textContent );\n\t}\n\n\t// Keep in sync with MoveLeadParagraphTransform::isNonLeadParagraph()\n\tfunction isNonLeadParagraph( node ) {\n\t\tnode = node.cloneNode( true );\n\t\tvar $node = $( node );\n\t\t// The paragraph itself can be an invisible template (T293834)\n\t\tif ( $node.hasClass( 've-ce-focusableNode-invisible' ) ) {\n\t\t\treturn true;\n\t\t}\n\t\t// Ignore non-content nodes, TemplateStyles and coordinates\n\t\t$node.find( '.ve-ce-branchNode-inlineSlug, .ve-ce-focusableNode-invisible, style, span#coordinates' ).remove();\n\t\tif ( isNotEmptyNode( node ) ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tvar $paragraphs = $body.children( 'p' );\n\tfor ( var i = 0; i < $paragraphs.length; i++ ) {\n\t\tvar p = $paragraphs[ i ];\n\t\tif ( !isNonLeadParagraph( p ) ) {\n\t\t\treturn p;\n\t\t}\n\t}\n\treturn null;\n};\n","var m = require( './../mobile.startup/moduleLoaderSingleton' ),\n\tSourceEditorOverlay = require( './SourceEditorOverlay' ),\n\tVisualEditorOverlay = require( './VisualEditorOverlay' );\n\n// Exposed for MobileFrontend mobile.init usage.\nm.define( 'mobile.editor.overlay/SourceEditorOverlay', SourceEditorOverlay );\nm.define( 'mobile.editor.overlay/VisualEditorOverlay', VisualEditorOverlay );\n","var util = require( '../mobile.startup/util' );\n\n/**\n * @param {string} blockinfo\n * @return {Object}\n */\nmodule.exports = function parseBlockInfo( blockinfo ) {\n\tconst blockInfo = {\n\t\tpartial: blockinfo.blockpartial || false,\n\t\tnoCreateAccount: blockinfo.blocknocreate || false,\n\t\tanonOnly: blockinfo.blockanononly === undefined ? true : blockinfo.blockanononly,\n\t\tcreator: {\n\t\t\tname: blockinfo.blockedby,\n\t\t\turl: null\n\t\t},\n\t\texpiry: null,\n\t\tduration: null,\n\t\treason: '',\n\t\tblockId: blockinfo.blockid\n\t};\n\n\t// Workaround to parse a message parameter for mw.message, see T96885\n\tfunction jqueryMsgParse( wikitext ) {\n\t\t// eslint-disable-next-line new-cap\n\t\tconst parser = new mw.jqueryMsg.parser();\n\t\ttry {\n\t\t\tconst ast = parser.wikiTextToAst( wikitext );\n\t\t\treturn parser.emitter.emit( ast ).html();\n\t\t} catch ( e ) {\n\t\t\t// Ignore error as it's probably the parser error. Usually this is because we\n\t\t\t// can't parse templates.\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// URL only useful if block creator is a local user\n\tif ( blockinfo.blockedbyid === 0 ) {\n\t\tblockInfo.creator.url = '';\n\t} else {\n\t\tblockInfo.creator.url = mw.Title.makeTitle(\n\t\t\tmw.config.get( 'wgNamespaceIds' ).user,\n\t\t\tblockInfo.creator.name\n\t\t).getUrl();\n\t}\n\n\tif ( [ 'infinite', 'indefinite', 'infinity', 'never' ].indexOf( blockinfo.blockexpiry ) === -1 ) {\n\t\tblockInfo.expiry = mw.message( 'parentheses', blockinfo.blockexpiryformatted ).escaped();\n\t\tblockInfo.duration = blockinfo.blockexpiryrelative;\n\t}\n\n\tconst reason = blockinfo.blockreason;\n\tif ( reason ) {\n\t\tblockInfo.reason = jqueryMsgParse( reason ) || mw.html.escape( reason );\n\t\tblockInfo.parsedReason = ( new mw.Api() ).get( {\n\t\t\taction: 'parse',\n\t\t\tformatversion: 2,\n\t\t\ttext: reason,\n\t\t\tcontentmodel: 'wikitext'\n\t\t} ).then( function ( result ) {\n\t\t\treturn result.parse.text;\n\t\t} ).catch( function () {\n\t\t\treturn jqueryMsgParse( reason ) || mw.html.escape( reason );\n\t\t} );\n\t} else {\n\t\tblockInfo.reason = mw.message( 'mobile-frontend-editor-generic-block-reason' ).escaped();\n\t\tblockInfo.parsedReason = util.Deferred().resolve( blockInfo.reason ).promise();\n\t}\n\n\treturn blockInfo;\n};\n","/**\n * Build a save failure message from the API response\n *\n * @param {Object} data API response\n * @return {string} message HTML text describing the failure for display to the user\n */\nmodule.exports = function saveFailureMessage( data ) {\n\t// In most cases, return the error message from the API directly.\n\t// Handle a few exceptions where it is unsuitable for end-users\n\t// (some error messages are seemingly intended for tool developers).\n\n\tvar code = data && data.errors && data.errors[0] && data.errors[0].code;\n\n\tif ( code === 'editconflict' ) {\n\t\treturn mw.msg( 'mobile-frontend-editor-error-conflict' );\n\t}\n\n\tif ( code === 'readonly' ) {\n\t\treturn data.errors[0].html + '<br>' + data.errors[0].data.readonlyreason;\n\t}\n\n\tif ( data.errors && data.errors[0] ) {\n\t\treturn data.errors[0].html;\n\t}\n\n\t// This probably indicates a connection problem and a \"fake\" response\n\t// generated by mediawiki.Api. TODO Give a better error message here.\n\treturn '';\n};\n","/**\n * Store the user's preferred editor\n *\n * @param {string} editor 'VisualEditor' or 'SourceEditor'\n */\nmodule.exports = function setPreferredEditor( editor ) {\n\tif ( !mw.user.isAnon() ) {\n\t\tnew mw.Api().saveOption( 'mobile-editor', editor ).then( function () {\n\t\t\tmw.user.options.set( 'mobile-editor', editor );\n\t\t} );\n\t} else {\n\t\tmw.storage.set( 'preferredEditor', editor );\n\t}\n};\n","var\n\tView = require( './View' ),\n\tutil = require( './util' ),\n\tmfExtend = require( './mfExtend' );\n\n/**\n * @class MessageBox\n * @extends View\n */\nfunction MessageBox() {\n\tView.apply( this, arguments );\n}\n\nmfExtend( MessageBox, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof MessageBox\n\t * @instance\n\t */\n\tisTemplateMode: true,\n\t/**\n\t * @memberof MessageBox\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} [defaults.heading] heading to show along with message (text)\n\t * @property {string} defaults.msg message to show (html)\n\t * @property {string} defaults.className either mw-message-box-error,\n\t *   mw-message-box-notice or mw-message-box-warning\n\t */\n\tdefaults: {},\n\t/**\n\t * @memberof MessageBox\n\t * @instance\n\t */\n\ttemplate: util.template( `\n<div class=\"{{className}} mw-message-box\">\n\t{{#heading}}<h2>{{heading}}</h2>{{/heading}}\n\t{{{msg}}}\n</div>\n\t` )\n} );\n\nmodule.exports = MessageBox;\n"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","_defineProperties","e","r","t","length","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","i","toPrimitive","call","TypeError","String","_toPrimitive","_callSuper","_getPrototypeOf","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","apply","Boolean","valueOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_setPrototypeOf","Button","require","View","Icon","util","BlockMessageDetails","_View","a","n","_classCallCheck","arguments","create","value","_inherits","get","createDetailsAnchorHref","blockId","render","mw","getUrl","wpTarget","createDetailsAnchorLabel","msg","createTitle","msgKey","user","isAnon","this","partial","createBody","anonOnly","noCreateAccount","seeMoreLink","reasonHeader","creatorHeader","options","expiryHeader","cta","config","progressive","wiki","label","href","Title","quiet","tagName","additionalClassNames","track","events","click","drawer","$el","find","prepend","getButtonConfig","name","parsedReason","then","htmlReason","html","template","module","exports","actionParams","EditorGateway","api","title","sectionId","oldId","content","isNewPage","undefined","fromModified","hasChanged","getBlockInfo","pageObj","blockedError","actions","edit","Array","isArray","some","error","indexOf","code","data","blockinfo","getContent","self","resolve","Deferred","text","prop","rvprop","titles","intestactions","intestactionsdetail","rvstartid","rvsection","resp","revision","reject","query","pages","missing","revisions","timestamp","originalContent","setContent","save","apiOptions","result","action","errorformat","errorlang","errorsuselocal","formatversion","summary","captchaid","captchaId","captchaword","captchaWord","basetimestamp","starttimestamp","section","postWithToken","newrevid","abortPreview","_pending","abort","getPreview","sectionLine","extend","sectionpreview","disableeditsection","pst","mobileformat","useskin","disabletoc","post","parse","sections","anchor","line","id","promise","Overlay","parseBlockInfo","headers","PageGateway","icons","mfExtend","blockMessageDrawer","MessageBox","mwUser","EditVeTool","toolGroup","classes","super","EditorOverlayBase","params","onBeforeExit","className","isBorderBox","placeholder","summaryRequestMsg","pageGateway","editCount","isNewEditor","sessionId","overlayManager","OO","inheritClass","ui","Tool","static","icon","group","onSelect","onUpdateState","defaults","hasToolbar","continueMsg","closeMsg","summaryMsg","captchaMsg","captchaTryAgainMsg","switchMsg","confirmMsg","licenseMsg","log","editor_interface","editor","editing_session_id","logFeatureUse","confirmSave","window","confirm","onSaveComplete","newRevId","saved","invalidatePage","showSaveCompleteMsg","hook","fire","revision_id","setTimeout","location","hash","notify","type","onSaveFailure","errors","captcha","message","badtoken","assertanonfailed","assertuserfailed","assertnameduserfailed","spamblacklist","pagedeleted","editconflict","reportError","errorNotice","heading","$errorNoticeContainer","hideErrorNotice","empty","onStageChanges","showHidden","scrollTo","onSaveBegin","confirmAborted","preRender","formHeader","editSwitcher","editingMsg","readOnly","disabled","cancel","saveHeader","previewingMsg","savingHeader","postRender","show","allowCloseWindow","confirmCloseWindow","test","namespace","onClickBack","onClickSubmit","onClickContinue","onClickAnonymous","exit","switching","windowManager","getWindowManager","addWindows","widgets","AbandonEditDialog","openWindow","closed","mechanism","onExit","target","edited","release","createAnonWarning","$actions","$","addClass","$anonWarning","append","returnto","returnTo","warning","queryParams","signupParams","signupQueryParams","anonymousEditorActions","block","map","createAnonTalkWarning","clone","getOptionsForSwitch","switched","currentPageHTMLParser","fakeScroll","titleObj","contentLang","contentDir","getLoadingPromise","dataPromise","handleCaptcha","details","$input","captchaShown","val","attr","mime","detach","url","question","Section","saveFailureMessage","fakeToolbar","toast","setPreferredEditor","VisualEditorOverlay","SourceEditorOverlay","isFirefox","navigator","userAgent","visualEditorConfig","gateway","isVisualEditorEnabled","templatePartials","_resizeEditor","ns","namespaces","onInputWikitextEditor","_hidePreview","showAnonWarning","loader","using","switchToolbar","switchWindow","toolFactory","ToolFactory","toolGroupFactory","ToolGroupFactory","register","libs","ve","MWEditModeVisualTool","MWEditModeSourceTool","Toolbar","on","mode","canSwitch","allowSwitchingToVisualMode","fullRestbaseUrl","allowLossySwitching","_switchToVisualEditor","WindowManager","SwitchConfirmDialog","$element","appendTo","document","body","destroy","setup","include","emit","spinner","hideSpinner","$preview","$content","$anonTalkWarning","hide","$anonHiddenButtons","one","docEl","documentElement","scrollTop","blockScroll","addEventListener","removeEventListener","_loadContent","hideSpinnerAndShowPreview","getDocument","showSpinner","mainpage","parsedText","parsedSectionLine","parseHTML","el","removeClass","container","$scrollContainer","Element","getClosestScrollableContainer","css","height","wikitext","feature","targetLoader","addPlugin","loadModules","newOverlay","requestPageData","targetName","modified","replaceCurrent","remove","uri","Uri","mfnotify","search","getQueryString","reload","showOnPageReload","router","identifyLeadParagraph","getSingleton","surfaceReady","appendChild","origDataPromise","getPrefixedDb","sessionStore","init","MobileArticleTarget","trackingName","targetFactory","once","getSurface","getModel","load","visualeditor","editHeader","destroyTarget","targetInit","afterSurfaceReady","scrollToLeadParagraph","editLead","editLeadView","readLead","offset","initialCursorOffset","$window","surface","getMode","getView","$attachedRootNode","getLeadSectionElement","top","setLinearSelection","Range","getRange","start","getSelection","getSelectionBoundingRect","padding","overlay","switchToEditor","switchToSourceEditor","setReadOnly","navigateTo","path","useReplaceState","hasBeenModified","Drawer","props","blockDrawer","onBeforeHide","onShow","$drawer","drawerTop","creatorTop","buttonsTop","$seeMore","$container","children","$body","isNonLeadParagraph","node","cloneNode","$node","hasClass","textContent","isNotEmptyNode","$paragraphs","p","m","define","blockInfo","blockpartial","blocknocreate","blockanononly","creator","blockedby","expiry","duration","reason","blockid","jqueryMsgParse","parser","jqueryMsg","ast","wikiTextToAst","emitter","blockedbyid","makeTitle","blockexpiry","blockexpiryformatted","escaped","blockexpiryrelative","blockreason","escape","Api","contentmodel","catch","readonlyreason","storage","set","saveOption","isTemplateMode"],"sourceRoot":""}