{"version":3,"file":"mobile.startup.js","mappings":"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","sources":["webpack://mfModules/./src/mobile.startup/LanguageInfo.js","webpack://mfModules/./src/mobile.startup/MessageBox.js","webpack://mfModules/./src/mobile.startup/Section.js","webpack://mfModules/./src/mobile.startup/languageOverlay/getDeviceLanguage.js","webpack://mfModules/./src/mobile.startup/languageOverlay/languageInfoOverlay.js","webpack://mfModules/./src/mobile.startup/languageOverlay/languageOverlay.js","webpack://mfModules/./src/mobile.startup/mediaViewer/overlay.js","webpack://mfModules/./src/mobile.startup/mobile.startup.js","webpack://mfModules/./src/mobile.startup/promisedView.js","webpack://mfModules/./src/mobile.startup/references/ReferencesGateway.js","webpack://mfModules/./src/mobile.startup/references/ReferencesHtmlScraperGateway.js","webpack://mfModules/./src/mobile.startup/references/references.js","webpack://mfModules/./src/mobile.startup/time.js"],"sourcesContent":["const util = require( './util.js' ),\n\tactionParams = require( './actionParams' );\n\n/**\n * API for providing language data.\n *\n * @class module:mobile.startup/languages~LanguageInfo\n */\nclass LanguageInfo {\n\t/**\n\t * @param {mw.Api} api\n\t */\n\tconstructor( api ) {\n\t\tthis.api = api;\n\t}\n\n\t/**\n\t * Get languageinfo API data from the local wiki, and transform it into a\n\t * format usable by LanguageSearcher.\n\t *\n\t * @memberof module:mobile.startup/languages~LanguageInfo\n\t * @instance\n\t * @returns {jQuery.Deferred}\n\t */\n\tgetLanguages() {\n\t\treturn this.api.get( actionParams( {\n\t\t\tmeta: 'languageinfo',\n\t\t\tliprop: 'code|autonym|name|bcp47'\n\t\t} ) ).then( ( resp ) => {\n\t\t\tconst filteredLanguages = [];\n\t\t\t// Filter out legacy languages and require an autonym.\n\t\t\t// If the bcp47 (https://w.wiki/Y7A) does not match the language\n\t\t\t// code, that is in an indication that the language code is outdated\n\t\t\t// and should not be used.\n\t\t\tObject.keys( resp.query.languageinfo ).forEach( ( key ) => {\n\t\t\t\tconst language = resp.query.languageinfo[key];\n\t\t\t\tif ( ( language.code.toLowerCase() === language.bcp47.toLowerCase() ) &&\n\t\t\t\t\tlanguage.autonym ) {\n\t\t\t\t\tfilteredLanguages.push( language );\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn filteredLanguages;\n\t\t}, () => util.Deferred().reject() ).then( ( filteredLanguages ) => ( {\n\t\t\tlanguages: filteredLanguages.map( ( data ) => {\n\t\t\t\tdata.url = '#';\n\t\t\t\tdata.lang = data.code;\n\t\t\t\tdata.langname = data.name;\n\t\t\t\t// FIXME: This isn't a \"title\" in the sense of a MediaWiki\n\t\t\t\t// Title, and it is rendered as a subheader in the list\n\t\t\t\t// item, so a different name would be wiser, both here and\n\t\t\t\t// in LanguageSearcher's template. Also it would arguably\n\t\t\t\t// be more intuitive for the language name (localized) to\n\t\t\t\t// appear as the main emphasized element of each language\n\t\t\t\t// list element; but instead the autonym has that role.\n\t\t\t\t// A more thorough refactoring of LanguageSearcher to allow\n\t\t\t\t// for generic header/subheader elements is left for a\n\t\t\t\t// follow-up.\n\t\t\t\tdata.title = data.name;\n\t\t\t\treturn data;\n\t\t\t} )\n\t\t} ), () => util.Deferred().reject() );\n\t}\n}\n\nmodule.exports = LanguageInfo;\n","const\n\tView = require( './View' ),\n\tutil = require( './util' );\n\n/**\n * Render CSS version of Codex message component.\n */\nclass MessageBox extends View {\n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tget isTemplateMode() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @mixes module:mobile.startup/View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} [defaults.heading] heading to show along with message (text)\n\t * @property {string} defaults.msg message to show (html)\n\t * @property {string} defaults.type either error, notice or warning\n\t * @property {string} defaults.className\n\t */\n\tget defaults() {\n\t\treturn {};\n\t}\n\n\tget template() {\n\t\treturn util.template( `\n<div\n  class=\"cdx-message cdx-message--block cdx-message--{{type}} {{className}}\"\n  aria-live=\"polite\"\n>\n  <!-- Empty span for message icon. -->\n  <span class=\"cdx-message__icon\"></span>\n  <!-- Div for content. -->\n  <div class=\"cdx-message__content\">\n  {{#heading}}<h2>{{heading}}</h2>{{/heading}}\n  {{{msg}}}\n  </div>\n</div>\n\t` );\n\t}\n}\n\nmodule.exports = MessageBox;\n","const util = require( './util.js' ),\n\tView = require( './View' );\n\n/**\n * Builds a section of a page\n */\nclass Section extends View {\n\t/**\n\t * @param {Object} options Configuration options\n\t */\n\tconstructor( options ) {\n\t\toptions.tag = 'h' + options.level;\n\t\tsuper( options );\n\t\tthis.line = options.line;\n\t\tthis.text = options.text;\n\t\tthis.hasReferences = options.hasReferences || false;\n\t\tthis.id = options.id || null;\n\t\tthis.anchor = options.anchor;\n\t\tthis.subsections = [];\n\t\t( options.subsections || [] ).forEach( ( section ) => this.subsections.push(\n\t\t\tnew Section( section ) ) );\n\t}\n\n\tget template() {\n\t\treturn util.template( `\n<h{{level}} id=\"{{anchor}}\">{{{line}}}</h{{level}}>\n{{{text}}}\n\t` );\n\t}\n\n\t/**\n\t * @mixes module:mobile.startup/View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.text Section text.\n\t */\n\tget defaults() {\n\t\treturn {\n\t\t\tline: undefined,\n\t\t\ttext: ''\n\t\t};\n\t}\n}\n\nmodule.exports = Section;\n","/**\n * Return the language code of the device in lowercase\n *\n * @ignore\n * @param {window.navigator} navigator\n * @return {string|undefined}\n */\nfunction getDeviceLanguage( navigator ) {\n\tconst lang = navigator.languages ?\n\t\tnavigator.languages[ 0 ] :\n\t\tnavigator.language || navigator.userLanguage ||\n\t\t\t\tnavigator.browserLanguage || navigator.systemLanguage;\n\n\treturn lang ? lang.toLowerCase() : undefined;\n}\n\nmodule.exports = getDeviceLanguage;\n","const\n\tm = require( '../moduleLoaderSingleton' ),\n\tgetDeviceLanguage = require( './getDeviceLanguage' ),\n\tOverlay = require( '../Overlay' ),\n\tpromisedView = require( '../promisedView' );\n\n/**\n * @ignore\n * @param {LanguageInfo} languageInfo\n * @param {boolean} showSuggestedLanguages If the suggested languages section\n * should be rendered.\n * @return {jQuery.Promise} Resolves to LanguageSearcher\n */\nfunction loadLanguageInfoSearcher( languageInfo, showSuggestedLanguages ) {\n\treturn mw.loader.using( 'mobile.languages.structured' ).then( () => languageInfo.getLanguages() ).then( ( data ) => {\n\t\tconst LanguageSearcher = m.require( 'mobile.languages.structured/LanguageSearcher' );\n\t\treturn new LanguageSearcher( {\n\t\t\tlanguages: data.languages,\n\t\t\tvariants: data.variants,\n\t\t\tshowSuggestedLanguages,\n\t\t\tdeviceLanguage: getDeviceLanguage( navigator )\n\t\t} );\n\n\t} );\n}\n\n/**\n * Factory function that returns a language info featured instance of an Overlay\n *\n * @ignore\n * @function\n * @memberof module:mobile.startup/languages\n * @param {module:mobile.startup/languages~LanguageInfo} languageInfo\n * @param {boolean} showSuggestedLanguages If the suggested languages section\n * should be rendered.\n * @return {module:mobile.startup/Overlay}\n */\nfunction languageInfoOverlay( languageInfo, showSuggestedLanguages ) {\n\treturn Overlay.make(\n\t\t{\n\t\t\theading: mw.msg( 'mobile-frontend-language-heading' ),\n\t\t\tclassName: 'overlay language-info-overlay'\n\t\t}, promisedView( loadLanguageInfoSearcher( languageInfo, showSuggestedLanguages ) )\n\t);\n}\n\n// To make knowing when async logic has resolved easier in tests\nlanguageInfoOverlay.test = {\n\tloadLanguageInfoSearcher\n};\n\nmodule.exports = languageInfoOverlay;\n","const\n\tm = require( '../moduleLoaderSingleton' ),\n\tgetDeviceLanguage = require( './getDeviceLanguage' ),\n\tOverlay = require( '../Overlay' ),\n\tMessageBox = require( '../MessageBox' ),\n\tcurrentPageHTMLParser = require( '../currentPageHTMLParser' )(),\n\tpromisedView = require( '../promisedView' );\n\n/**\n * @ignore\n * @return {jQuery.Promise} Resolves to LanguageSearcher\n */\nfunction loadLanguageSearcher() {\n\treturn mw.loader.using( 'mobile.languages.structured' ).then( () => currentPageHTMLParser.getLanguages(\n\t\tmw.config.get( 'wgTitle' )\n\t) ).then( ( data ) => {\n\t\tconst LanguageSearcher = m.require( 'mobile.languages.structured/LanguageSearcher' );\n\n\t\treturn new LanguageSearcher( {\n\t\t\tlanguages: data.languages,\n\t\t\tvariants: data.variants,\n\t\t\tshowSuggestedLanguages: true,\n\t\t\tdeviceLanguage: getDeviceLanguage( navigator ),\n\t\t\t/**\n\t\t\t * Stable for use inside ContentTranslation.\n\t\t\t *\n\t\t\t * @event ~'mobileFrontend.languageSearcher.onOpen'\n\t\t\t * @memberof Hooks\n\t\t\t * @param {Hooks~LanguageSearcher} searcher\n\t\t\t */\n\t\t\tonOpen: ( searcher ) => mw.hook( 'mobileFrontend.languageSearcher.onOpen' ).fire( searcher )\n\t\t} );\n\t}, () => new MessageBox( {\n\t\ttype: 'error',\n\t\tclassName: 'content',\n\t\tmsg: mw.msg( 'mobile-frontend-languages-structured-overlay-error' )\n\t} ) );\n}\n\n/**\n * Factory function that returns a language featured instance of an Overlay.\n *\n * @function\n * @memberof module:mobile.startup/languages\n * @return {module:mobile.startup/Overlay}\n */\nfunction languageOverlay() {\n\treturn Overlay.make(\n\t\t{\n\t\t\theading: mw.msg( 'mobile-frontend-language-heading' ),\n\t\t\tclassName: 'overlay language-overlay'\n\t\t}, promisedView( loadLanguageSearcher() )\n\t);\n}\n\n// To make knowing when async logic has resolved easier in tests\nlanguageOverlay.test = {\n\tloadLanguageSearcher\n};\n\nmodule.exports = languageOverlay;\n","/**\n * Internal for use inside Minerva only. See {@link module:mobile.startup} for access.\n *\n * @module mobile.startup/mediaViewer\n */\nconst m = require( '../moduleLoaderSingleton' ),\n\tpromisedView = require( '../promisedView' ),\n\tutil = require( '../util' ),\n\theader = require( '../headers' ).header,\n\ticons = require( '../icons' ),\n\tOverlay = require( '../Overlay' );\n\n/**\n * Produce an overlay for mediaViewer\n *\n * @name overlay\n * @memberof module:mobile.startup/mediaViewer\n * @param {Object} options\n * @return {module:mobile.startup/Overlay}\n */\nfunction mediaViewerOverlay( options ) {\n\tconst overlay = Overlay.make(\n\t\t{\n\t\t\theaders: [\n\t\t\t\theader( '', [], icons.cancel( 'gray' ) )\n\t\t\t],\n\t\t\tclassName: 'overlay media-viewer'\n\t\t},\n\t\tpromisedView(\n\t\t\tutil.Promise.all( [\n\t\t\t\tmw.loader.using( 'mobile.mediaViewer' )\n\t\t\t] ).then( () => {\n\t\t\t\tconst ImageCarousel = m.require( 'mobile.mediaViewer' ).ImageCarousel;\n\t\t\t\treturn new ImageCarousel( options );\n\t\t\t} )\n\t\t)\n\t);\n\n\treturn overlay;\n}\n\nmodule.exports = mediaViewerOverlay;\n","const currentPageHTMLParser = require( './currentPageHTMLParser' );\nconst time = require( './time' );\nconst LanguageInfo = require( './LanguageInfo' );\nconst currentPage = require( './currentPage' );\nconst Drawer = require( './Drawer' );\nconst CtaDrawer = require( './CtaDrawer' );\nconst lazyImageLoader = require( './lazyImages/lazyImageLoader' );\nconst icons = require( './icons' );\nconst PageHTMLParser = require( './PageHTMLParser' );\nconst showOnPageReload = require( './showOnPageReload' );\nconst OverlayManager = require( './OverlayManager' );\nconst View = require( './View' );\nconst Overlay = require( './Overlay' );\nconst references = require( './references/references' );\nconst promisedView = require( './promisedView' );\nconst headers = require( './headers' );\nconst Skin = require( './Skin' );\nconst mediaViewer = {\n\toverlay: require( './mediaViewer/overlay' )\n};\nconst languageInfoOverlay = require( './languageOverlay/languageInfoOverlay' );\nconst languageOverlay = require( './languageOverlay/languageOverlay' );\nconst amcOutreach = require( './amcOutreach/amcOutreach' );\nconst util = require( './util.js' );\nconst actionParams = require( './actionParams.js' );\nconst Icon = require( './Icon.js' );\nconst IconButton = require( './IconButton.js' );\nconst MessageBox = require( './MessageBox.js' );\nconst Section = require( './Section.js' );\nconst Button = require( './Button.js' );\n\n// Expose chunk to temporary variable which will be deleted and exported via ResourceLoader\n// package inside mobile.startup.exports.\n\n/**\n * The main library for accessing MobileFrontend's stable APIs.\n *\n * @module mobile.startup\n */\nmodule.exports = {\n\t/**\n\t * Internal, strictly for use inside MobileFrontend only\n\t *\n\t * @private\n\t */\n\tactionParams,\n\t/**\n\t * Internal, strictly for use inside MobileFrontend only\n\t *\n\t * @memberof module:mobile.startup\n\t * @type module:mobile.startup/util\n\t * @private\n\t */\n\tutil,\n\t/**\n\t * Internal for use inside Minerva only\n\t *\n\t * @memberof module:mobile.startup\n\t * @type module:mobile.startup/AmcOutreach\n\t */\n\n\tamcOutreach,\n\t/**\n\t * @private for use inside MobileFrontend only.\n\t */\n\theaders,\n\t// Internal for use inside GrowthExperiments only.\n\toverlayHeader: headers.header,\n\t/**\n\t * Internal for use inside Minerva, GrowthExperiments only.\n\t *\n\t * @type module:mobile.startup/Drawer\n\t */\n\tDrawer,\n\t// Internal for use inside Minerva only.\n\tCtaDrawer,\n\t/**\n\t * @internal for use strictly inside MobileFrontend only. Other extensions\n\t *  should use View.make and Overlay.make\n\t */\n\tclass: {\n\t\tView,\n\t\tOverlay,\n\t\tSection,\n\t\tMessageBox,\n\t\tIcon,\n\t\tIconButton,\n\t\tButton\n\t},\n\t/**\n\t * @stable for use\n\t * @memberof module:mobile.startup\n\t * @type module:mobile.startup/View\n\t */\n\tView: {\n\t\tmake: View.make\n\t},\n\t/**\n\t * @stable for use\n\t * @memberof module:mobile.startup\n\t * @type module:mobile.startup/Overlay\n\t */\n\tOverlay: {\n\t\tmake: Overlay.make\n\t},\n\t/**\n\t * Internal for use inside Minerva only.\n\t *\n\t * @memberof module:mobile.startup\n\t * @type module:mobile.startup/PageHTMLParser\n\t */\n\tcurrentPageHTMLParser,\n\t/**\n\t * Internal for use inside Minerva, ExternalGuidance and Echo only.\n\t *\n\t * @memberof module:mobile.startup\n\t * @return {module:mobile.startup/OverlayManager}\n\t */\n\tgetOverlayManager: () => OverlayManager.getSingleton(),\n\t/**\n\t * Internal for use inside Minerva only.\n\t *\n\t * @type module:mobile.startup/Page\n\t * @memberof module:mobile.startup\n\t */\n\tcurrentPage,\n\t/**\n\t * Internal for use inside Minerva only.\n\t *\n\t * @type module:mobile.startup/PageHTMLParser\n\t * @memberof module:mobile.startup\n\t */\n\tPageHTMLParser,\n\t/**\n\t * Internal for use inside Minerva only.\n\t *\n\t * @type module:mobile.startup/Icon\n\t * @memberof module:mobile.startup\n\t */\n\tspinner: icons.spinner,\n\t/**\n\t * Internal for use inside MobileFrontend only\n\t *\n\t * @private\n\t */\n\tcancelIcon: icons.cancel,\n\t/**\n\t * Internal for use inside Minerva only.\n\t *\n\t * @memberof module:mobile.startup\n\t * @type module:mobile.startup/mediaViewer\n\t */\n\tmediaViewer,\n\t/**\n\t * Internal for use inside Minerva only.\n\t *\n\t * @memberof module:mobile.startup\n\t * @type module:mobile.startup/references\n\t */\n\treferences,\n\t/**\n\t * Internal for use inside Minerva only.\n\t *\n\t * @memberof module:mobile.startup\n\t * @type module:mobile.startup/time\n\t */\n\ttime,\n\t// Internal for use inside Echo, GrowthExperiments only.\n\tpromisedView,\n\t/**\n\t * Loads all images on the page, stable to call.\n\t *\n\t * @memberof module:mobile.startup\n\t * @return {jQuery.Deferred}\n\t */\n\tloadAllImagesInPage: () => lazyImageLoader.loadImages(\n\t\tlazyImageLoader.queryPlaceholders( document.getElementById( 'content' ) )\n\t),\n\t/**\n\t * Show a notification on page reload, internal for Minerva\n\t *\n\t * @memberof module:mobile.startup\n\t * @param {string} msg\n\t * @return {jQuery.Deferred}\n\t */\n\tnotifyOnPageReload: ( msg ) => showOnPageReload( msg ),\n\t/**\n\t * Internal for use inside VisualEditor\n\t *\n\t * @memberof module:mobile.startup\n\t * @return {string|undefined}\n\t */\n\tlicense() {\n\t\tconst skin = Skin.getSingleton();\n\t\treturn skin.getLicenseMsg();\n\t},\n\t/**\n\t * Internal for use inside Minerva. See {@link module:mobile.startup} for access.\n\t *\n\t * @module mobile.startup/languages\n\t */\n\t/**\n\t * Access to language overlays for usage inside Minerva only.\n\t *\n\t * @memberof module:mobile.startup\n\t * @type module:mobile.startup/languages\n\t */\n\tlanguages: {\n\t\tlanguageOverlay,\n\t\t/**\n\t\t * Shows information about suggested languages.\n\t\t *\n\t\t * @memberof module:mobile.startup/languages\n\t\t * @param {mw.Api} api\n\t\t * @param {boolean} showSuggestedLanguage If the suggested languages section\n\t\t * should be rendered.\n\t\t */\n\t\tlanguageInfoOverlay( api, showSuggestedLanguage ) {\n\t\t\treturn languageInfoOverlay( new LanguageInfo( api ), showSuggestedLanguage );\n\t\t}\n\t}\n};\n","const\n\ticons = require( './icons' ),\n\tView = require( './View' );\n\n/**\n * Internal for use inside Echo, GrowthExperiments only.\n * It's a view that spins until the promise resolves!\n * If the promise successfully resolves, the newView will be shown. if the\n * promise rejects and rejects to a view, the errorView will be shown.\n *\n * @function promisedView\n * @memberof module:mobile.startup\n * @param {jQuery.Promise} promise\n * @return {module:mobile.startup/View}\n */\nmodule.exports = function promisedView( promise ) {\n\tconst view = new View( {\n\t\tclassName: 'promised-view'\n\t} );\n\tview.$el.append( icons.spinner().$el );\n\tpromise.then( ( newView ) => {\n\t\tview.$el.replaceWith( newView.$el );\n\t\t// update the internal reference.\n\t\tview.$el = newView.$el;\n\t}, ( errorView ) => {\n\t\tif ( !errorView || !errorView.$el ) {\n\t\t\t// return early to keep backwards compatibility with clients of\n\t\t\t// promisedView that do not reject to an error view\n\t\t\treturn;\n\t\t}\n\n\t\tview.$el.replaceWith( errorView.$el );\n\t\t// update the internal reference.\n\t\tview.$el = errorView.$el;\n\t} );\n\n\treturn view;\n};\n","/**\n * Abstract base class\n * Gateway for retrieving references\n *\n * @class module:mobile.startup/references~Gateway\n * @abstract\n */\nclass ReferencesGateway {\n\t/**\n\t * @param {mw.Api} api\n\t */\n\tconstructor( api ) {\n\t\tthis.api = api;\n\t}\n\n\t// eslint-disable-next-line jsdoc/require-returns-check\n\t/**\n\t * Return the matched reference via API or DOM query\n\t *\n\t * @memberof module:mobile.startup/references~Gateway\n\t * @instance\n\t * @param {string} id CSS selector\n\t * @param {Page} page to find reference for\n\t * @param {module:mobile.startup/PageHTMLParser} pageHTMLParser\n\t * @return {jQuery.Promise} resolves with an Object representing reference\n\t *  with a `text` property\n\t *  The promise should be rejected with ReferenceGateway.ERROR_NOT_EXIST:\n\t *  if the reference is not found.\n\t *  If for some reason locating the reference fails return ReferenceGateway.ERROR_OTHER.\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tgetReference( id, page, pageHTMLParser ) {\n\t\t// overridden\n\t}\n}\n\n/**\n * @memberof module:mobile.startup/references~Gateway\n * @property ERROR_NOT_EXIST error code to be returned by getReference\n *  when a reference does not exist.\n * @type string\n */\nReferencesGateway.ERROR_NOT_EXIST = 'NOT_EXIST_ERROR';\n/**\n * ERROR_OTHER error code to be returned by getReference\n *  under any other circumstance not covered\n *  by ERROR_NOT_EXIST. It should be used if it is unclear whether a reference exists or not.\n *\n * @memberof module:mobile.startup/references~Gateway\n * @type string\n */\nReferencesGateway.ERROR_OTHER = 'OTHER_ERROR';\n\nmodule.exports = ReferencesGateway;\n","const ReferencesGateway = require( './ReferencesGateway' ),\n\tutil = require( './../util' );\n\n/**\n * Gateway for retrieving references via the content of the Page\n *\n * @memberof module:mobile.startup/references\n * @inheritdoc\n */\nclass ReferencesHtmlScraperGateway extends ReferencesGateway {\n\tconstructor() {\n\t\tsuper( arguments );\n\t\t/**\n\t\t * @memberof ReferencesHtmlScraperGateway\n\t\t * @property EXTERNAL_LINK_CLASS a CSS class to place on external links\n\t\t * in addition to the default 'external' class.\n\t\t */\n\t\tthis.EXTERNAL_LINK_CLASS = 'external--reference';\n\t}\n\n\t/**\n\t * @param {string} id ID of a DOM element in the page.\n\t * @param {jQuery.Object} $container to scan for an element\n\t * @return {jQuery.Promise} that can be used by getReference\n\t */\n\tgetReferenceFromContainer( id, $container ) {\n\t\tconst result = util.Deferred();\n\n\t\tconst $el = $container.find( '#' + util.escapeSelector( id ) );\n\t\tif ( $el.length ) {\n\t\t\tlet $parent;\n\n\t\t\t// This finds either the inner <ol class=\"mw-extended-references\">, or the outer\n\t\t\t// <ol class=\"references\">\n\t\t\tconst $ol = $el.closest( 'ol' );\n\t\t\tconst isSubref = $ol.hasClass( 'mw-subreference-list' );\n\t\t\tif ( isSubref ) {\n\t\t\t\t$parent = $ol.parent();\n\t\t\t}\n\t\t\t// The following classes are used here:\n\t\t\t// * external--reference\n\t\t\t// * other values of EXTERNAL_LINK_CLASS in sub-classes\n\t\t\t( $parent || $el ).find( '.external' ).addClass( this.EXTERNAL_LINK_CLASS );\n\t\t\tresult.resolve( {\n\t\t\t\ttext: this.getReferenceHtml( $el ),\n\t\t\t\tparentText: this.getReferenceHtml( $parent ),\n\t\t\t\tisSubref\n\t\t\t} );\n\t\t} else {\n\t\t\tresult.reject( ReferencesGateway.ERROR_NOT_EXIST );\n\t\t}\n\t\treturn result.promise();\n\t}\n\n\t/**\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @param {jQuery.Object|undefined} $reference\n\t * @return {string|undefined}\n\t */\n\tgetReferenceHtml( $reference ) {\n\t\treturn $reference ?\n\t\t\t$reference.children( '.mw-reference-text, .reference-text' ).first().html() :\n\t\t\t'';\n\t}\n\n\t/**\n\t * @inheritdoc\n\t * @param {string} hash Hash fragment with leading '#'\n\t * @param {Page} page (unused)\n\t * @param {module:mobile.startup/PageHTMLParser} pageHTMLParser\n\t */\n\tgetReference( hash, page, pageHTMLParser ) {\n\t\tconst id = mw.util.percentDecodeFragment( hash.slice( 1 ) );\n\t\t// If an id is not found it's possible the id passed needs decoding (per T188547).\n\t\treturn this.getReferenceFromContainer( id, pageHTMLParser.$el.find( 'ol.references' ) );\n\t}\n}\n\nmodule.exports = ReferencesHtmlScraperGateway;\n","const Drawer = require( '../Drawer' ),\n\tutil = require( '../util' ),\n\ticons = require( '../icons' ),\n\tReferencesGateway = require( './ReferencesGateway' ),\n\tIcon = require( '../Icon' ),\n\tReferencesHtmlScraperGateway = require( './ReferencesHtmlScraperGateway' ),\n\tIconButton = require( '../IconButton' );\n\n/**\n * Create a callback for clicking references\n *\n * @ignore\n * @param {Function} onNestedReferenceClick\n * @return {Function}\n */\nfunction makeOnNestedReferenceClickHandler( onNestedReferenceClick ) {\n\treturn ( ev ) => {\n\t\tconst target = ev.currentTarget.querySelector( 'a' );\n\t\tif ( target ) {\n\t\t\tonNestedReferenceClick(\n\t\t\t\ttarget.getAttribute( 'href' ),\n\t\t\t\ttarget.textContent\n\t\t\t);\n\t\t\t// Don't hide the already shown drawer via propagation\n\t\t\treturn false;\n\t\t}\n\t};\n}\n\n/**\n * Drawer for references\n *\n * @memberof module:mobile.startup/references\n * @uses IconButton\n * @param {Object} props\n * @param {boolean} [props.error] whether an error has occurred\n * @param {string} props.title of reference e.g [1]\n * @param {string} props.text is the HTML of the reference\n * @param {string} [props.parentText] is the HTML of the parent reference if there is one\n * @param {boolean} props.isSubref true when this reference has a parent\n * @param {Function} [props.onNestedReferenceClick] callback for when a reference\n *  inside the reference is clicked.\n * @return {module:mobile.startup/Drawer}\n */\nfunction referenceDrawer( props ) {\n\tconst errorIcon = props.error ? new IconButton( {\n\t\tname: 'error',\n\t\tisSmall: true\n\t} ).$el : null;\n\n\tconst mainRef = props.isSubref ? props.parentText : props.text;\n\tconst mainRefHtml = util.parseHTML( '<div>' )\n\t\t.addClass( 'main-reference-content' )\n\t\t.html( mainRef );\n\tif ( !mainRef ) {\n\t\tmainRefHtml.append( icons.spinner().$el );\n\t}\n\tconst subRefHtml = props.isSubref ?\n\t\tutil.parseHTML( '<div>' ).html( props.text ) : '';\n\n\treturn new Drawer(\n\t\tutil.extend(\n\t\t\t{\n\t\t\t\tshowCollapseIcon: false,\n\t\t\t\tclassName: 'drawer position-fixed text references-drawer',\n\t\t\t\tevents: {\n\t\t\t\t\t'click sup a': ( ev ) => {\n\t\t\t\t\t\t// Stop default scroll to hash fragment behaviour.\n\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t},\n\t\t\t\t\t'click sup': props.onNestedReferenceClick &&\n\t\t\t\t\t\tmakeOnNestedReferenceClickHandler( props.onNestedReferenceClick )\n\t\t\t\t},\n\t\t\t\tchildren: [\n\t\t\t\t\tutil.parseHTML( '<div>' )\n\t\t\t\t\t\t.addClass( 'references-drawer__header' )\n\t\t\t\t\t\t.append( [\n\t\t\t\t\t\t\tnew Icon( {\n\t\t\t\t\t\t\t\ticon: 'reference',\n\t\t\t\t\t\t\t\tisSmall: true\n\t\t\t\t\t\t\t} ).$el,\n\t\t\t\t\t\t\tutil.parseHTML( '<span>' ).addClass( 'references-drawer__title' ).text( mw.msg( 'mobile-frontend-references-citation' ) ),\n\t\t\t\t\t\t\ticons.cancel( 'gray', {\n\t\t\t\t\t\t\t\tisSmall: true\n\t\t\t\t\t\t\t} ).$el\n\t\t\t\t\t\t] ),\n\n\t\t\t\t\t// Add .mw-parser-output so that TemplateStyles styles apply (T244510)\n\t\t\t\t\tutil.parseHTML( '<div>' ).addClass( 'mw-parser-output' ).append( [\n\t\t\t\t\t\terrorIcon,\n\t\t\t\t\t\tutil.parseHTML( '<sup>' ).text( props.title ),\n\t\t\t\t\t\tmainRefHtml,\n\t\t\t\t\t\tsubRefHtml\n\t\t\t\t\t] )\n\t\t\t\t]\n\t\t\t},\n\t\t\tprops\n\t\t)\n\t);\n}\n\n/**\n * Internal for use inside Minerva only. See {@link module:mobile.startup} for access.\n *\n * @exports module:mobile.startup/references\n */\nconst references = {\n\ttest: {\n\t\tmakeOnNestedReferenceClickHandler\n\t},\n\tReferencesHtmlScraperGateway,\n\treferenceDrawer,\n\t/**\n\t * Fetch and render nested reference upon click\n\t *\n\t * @param {string} id of the reference to be retrieved\n\t * @param {Page} page to locate reference for\n\t * @param {string} refNumber the number it identifies as in the page\n\t * @param {module:mobile.startup/PageHTMLParser} pageHTMLParser\n\t * @param {module:mobile.startup/references~Gateway} gateway\n\t * @param {Object} props for referenceDrawer\n\t * @param {Function} onShowNestedReference function call when a nested reference is triggered.\n\t * @return {jQuery.Deferred}\n\t */\n\tshowReference( id, page, refNumber, pageHTMLParser, gateway, props,\n\t\tonShowNestedReference\n\t) {\n\t\treturn gateway.getReference( id, page, pageHTMLParser ).then( ( reference ) => {\n\t\t\tconst drawer = referenceDrawer( util.extend( {\n\t\t\t\ttitle: refNumber,\n\t\t\t\ttext: reference.text,\n\t\t\t\tparentText: reference.parentText,\n\t\t\t\tisSubref: reference.isSubref,\n\t\t\t\tonNestedReferenceClick( href, text ) {\n\t\t\t\t\treferences.showReference(\n\t\t\t\t\t\thref,\n\t\t\t\t\t\tpage,\n\t\t\t\t\t\ttext,\n\t\t\t\t\t\tpageHTMLParser,\n\t\t\t\t\t\tgateway\n\t\t\t\t\t).then( ( nestedDrawer ) => {\n\t\t\t\t\t\tif ( props.onShowNestedReference ) {\n\t\t\t\t\t\t\tonShowNestedReference( drawer, nestedDrawer );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmw.log.warn( 'Please provide onShowNestedReferences parameter.' );\n\t\t\t\t\t\t\tdocument.body.appendChild( nestedDrawer.$el[0] );\n\t\t\t\t\t\t\tdrawer.hide();\n\t\t\t\t\t\t\tnestedDrawer.show();\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}, props ) );\n\t\t\treturn drawer;\n\t\t}, ( err ) => {\n\t\t\t// If non-existent reference nothing to do.\n\t\t\tif ( err === ReferencesGateway.ERROR_NOT_EXIST ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn referenceDrawer( {\n\t\t\t\terror: true,\n\t\t\t\ttitle: refNumber,\n\t\t\t\ttext: mw.msg( 'mobile-frontend-references-citation-error' )\n\t\t\t} );\n\t\t} );\n\t}\n};\n\nmodule.exports = references;\n","const units = [ 'seconds', 'minutes', 'hours', 'days', 'months', 'years' ],\n\tutil = require( './util' ),\n\tlimits = [ 1, 60, 3600, 86400, 2592000, 31536000 ];\n\n/**\n * Calculate the correct unit of timestamp\n *\n * @memberof module:mobile.startup/time\n * @instance\n * @param {number} timestampDelta\n * @return {{value: number, unit: string}}\n */\nfunction timeAgo( timestampDelta ) {\n\tlet i = 0;\n\twhile ( i < limits.length && timestampDelta > limits[i + 1] ) {\n\t\t++i;\n\t}\n\treturn {\n\t\tvalue: Math.round( timestampDelta / limits[i] ),\n\t\tunit: units[i]\n\t};\n}\n\n/**\n * Calculate the correct unit of timestamp delta\n *\n * @memberof module:mobile.startup/time\n * @param {number} timestamp\n * @return {{value: number, unit: string}}\n */\nfunction getTimeAgoDelta( timestamp ) {\n\tconst currentTimestamp = Math.round( Date.now() / 1000 );\n\n\treturn timeAgo( currentTimestamp - timestamp );\n}\n\n/**\n * Whether timestamp delta is less than a day old\n *\n * @instance\n * @memberof module:mobile.startup/time\n * @param {{value: number, unit: string}} delta Object of timestamp and its label\n * @return {boolean}\n */\nfunction isRecent( delta ) {\n\treturn [ 'seconds', 'minutes', 'hours' ].indexOf( delta.unit ) > -1;\n}\n\n/**\n * Is delta less than 10 seconds?\n *\n * @instance\n * @memberof module:mobile.startup/time\n * @param {{value: number, unit: string}} delta Object of timestamp and its label\n * @return {boolean}\n */\nfunction isNow( delta ) {\n\treturn delta.unit === 'seconds' && delta.value < 10;\n}\n\n/**\n * Return a message relating to the last modified relative time.\n *\n * @instance\n * @memberof module:mobile.startup/time\n * @param {number} ts timestamp\n * @param {string} username of the last user to modify the page\n * @param {string} gender of the last user to modify the page\n * @param {string} historyUrl url to the history page for the message (deprecated)\n * @return {string}\n */\nfunction getLastModifiedMessage( ts, username, gender, historyUrl ) {\n\tconst linkAll = typeof historyUrl === 'undefined',\n\t\tkeys = {\n\t\t\tseconds: 'mobile-frontend-last-modified-with-user-seconds',\n\t\t\tminutes: 'mobile-frontend-last-modified-with-user-minutes',\n\t\t\thours: 'mobile-frontend-last-modified-with-user-hours',\n\t\t\tdays: 'mobile-frontend-last-modified-with-user-days',\n\t\t\tmonths: 'mobile-frontend-last-modified-with-user-months',\n\t\t\tyears: 'mobile-frontend-last-modified-with-user-years'\n\t\t},\n\t\targs = [];\n\n\tgender = gender || 'unknown';\n\n\tconst delta = getTimeAgoDelta( ts );\n\tif ( isNow( delta ) ) {\n\t\targs.push( 'mobile-frontend-last-modified-with-user-just-now', gender, username );\n\t} else {\n\t\targs.push( keys[ delta.unit ], gender, username,\n\t\t\tmw.language.convertNumber( delta.value )\n\t\t);\n\t}\n\n\tconst lastEditedElement = linkAll ?\n\t\tutil.parseHTML( '<strong>' ).attr( 'class', 'last-modified-text-accent' ) :\n\t\tutil.parseHTML( '<a>' ).attr( 'href', historyUrl || '#' );\n\tconst usernameElement = linkAll ?\n\t\tutil.parseHTML( '<span>' ).attr( 'class', 'last-modified-text-accent' ) :\n\t\tutil.parseHTML( '<a>' ).attr( 'href', mw.util.getUrl( 'User:' + username ) );\n\n\targs.push(\n\t\tlastEditedElement,\n\t\t// Abuse PLURAL support to determine if the user is anonymous or not\n\t\tmw.language.convertNumber( username ? 1 : 0 ),\n\t\t// Our abuse of PLURAL support means we have to pass the relative URL\n\t\t// rather than construct it from a wikilink\n\t\tusername ? usernameElement : ''\n\t);\n\n\treturn mw.message.apply( this, args ).parse();\n}\n\n/**\n * Return a message relating to the registration date of the user\n *\n * @instance\n * @memberof module:mobile.startup/time\n * @param {string} ts timestamp\n * @param {string} [gender] of the last user editing this page\n * @return {string}\n */\nfunction getRegistrationMessage( ts, gender ) {\n\tconst keys = {\n\t\tseconds: 'mobile-frontend-joined-seconds',\n\t\tminutes: 'mobile-frontend-joined-minutes',\n\t\thours: 'mobile-frontend-joined-hours',\n\t\tdays: 'mobile-frontend-joined-days',\n\t\tmonths: 'mobile-frontend-joined-months',\n\t\tyears: 'mobile-frontend-joined-years'\n\t};\n\n\tconst args = [];\n\n\tgender = gender || 'unknown';\n\n\tconst delta = getTimeAgoDelta( parseInt( ts, 10 ) );\n\tif ( isNow( delta ) ) {\n\t\targs.push( 'mobile-frontend-joined-just-now', gender );\n\t} else {\n\t\targs.push( keys[ delta.unit ], gender, mw.language.convertNumber( delta.value ) );\n\t}\n\tconst html = mw.message.apply( this, args ).parse();\n\treturn html;\n}\n\n/**\n * Utility library for relative time.\n *\n * @exports module:mobile.startup/time\n */\nmodule.exports = {\n\tgetLastModifiedMessage,\n\tgetRegistrationMessage,\n\ttimeAgo,\n\tgetTimeAgoDelta,\n\tisNow,\n\tisRecent\n};\n"],"names":["util","actionParams","module","exports","constructor","api","this","getLanguages","get","meta","liprop","then","resp","filteredLanguages","Object","keys","query","languageinfo","forEach","key","language","code","toLowerCase","bcp47","autonym","push","Deferred","reject","languages","map","data","url","lang","langname","name","title","View","props","super","isTemplateMode","defaults","template","Section","options","tag","level","line","text","hasReferences","id","anchor","subsections","section","undefined","navigator","userLanguage","browserLanguage","systemLanguage","m","getDeviceLanguage","Overlay","promisedView","loadLanguageInfoSearcher","languageInfo","showSuggestedLanguages","mw","loader","using","require","variants","deviceLanguage","languageInfoOverlay","make","heading","msg","className","test","MessageBox","currentPageHTMLParser","loadLanguageSearcher","config","onOpen","searcher","hook","fire","type","languageOverlay","header","icons","headers","cancel","Promise","all","ImageCarousel","time","LanguageInfo","currentPage","Drawer","CtaDrawer","lazyImageLoader","PageHTMLParser","showOnPageReload","OverlayManager","references","Skin","mediaViewer","overlay","amcOutreach","Icon","IconButton","Button","overlayHeader","class","getOverlayManager","getSingleton","spinner","cancelIcon","loadAllImagesInPage","loadImages","queryPlaceholders","document","getElementById","notifyOnPageReload","license","getLicenseMsg","showSuggestedLanguage","promise","view","$el","append","newView","replaceWith","errorView","ReferencesGateway","getReference","page","pageHTMLParser","ERROR_NOT_EXIST","ERROR_OTHER","arguments","EXTERNAL_LINK_CLASS","getReferenceFromContainer","$container","result","find","escapeSelector","length","$parent","$ol","closest","isSubref","hasClass","parent","addClass","resolve","getReferenceHtml","parentText","$reference","children","first","html","hash","percentDecodeFragment","slice","ReferencesHtmlScraperGateway","makeOnNestedReferenceClickHandler","onNestedReferenceClick","ev","target","currentTarget","querySelector","getAttribute","textContent","referenceDrawer","errorIcon","error","isSmall","mainRef","mainRefHtml","parseHTML","subRefHtml","extend","showCollapseIcon","events","preventDefault","icon","showReference","refNumber","gateway","onShowNestedReference","reference","drawer","href","nestedDrawer","log","warn","body","appendChild","hide","show","err","units","limits","timeAgo","timestampDelta","i","value","Math","round","unit","getTimeAgoDelta","timestamp","Date","now","isNow","delta","getLastModifiedMessage","ts","username","gender","historyUrl","linkAll","args","seconds","minutes","hours","days","months","years","convertNumber","lastEditedElement","attr","usernameElement","getUrl","message","apply","parse","getRegistrationMessage","parseInt","isRecent","indexOf"],"sourceRoot":""}