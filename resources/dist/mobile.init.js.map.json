{"version":3,"file":"mobile.init.js","mappings":"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","sources":["webpack://mfModules/./src/mobile.init/editor.js","webpack://mfModules/./src/mobile.init/editorLoadingOverlay.js","webpack://mfModules/./src/mobile.init/lazyLoadedImages.js","webpack://mfModules/./src/mobile.init/mobile.init.js","webpack://mfModules/./src/mobile.init/toggling.js"],"sourcesContent":["/* global $ */\nvar M = require( '../mobile.startup/moduleLoaderSingleton' ),\n\tutil = require( '../mobile.startup/util' ),\n\teditorLoadingOverlay = require( './editorLoadingOverlay' ),\n\tOverlayManager = require( '../mobile.startup/OverlayManager' ),\n\t// #ca-edit, .mw-editsection are standard MediaWiki elements\n\t// .edit-link can be added to links anywhere to trigger the editor (e.g. MobileFrontend\n\t// user page creation CTA, edit-full-page overflow menu item)\n\t// Links in content are handled separately to allow reloading the content (T324686)\n\t$editTab = $( '#ca-edit, #ca-editsource, #ca-viewsource, #ca-ve-edit, #ca-ve-create, #ca-createsource' ),\n\thasTwoEditIcons = $editTab.length > 1,\n\teditorOverride = null,\n\tEDITSECTION_SELECTOR = '.mw-editsection a, .edit-link',\n\tuser = mw.user,\n\tCtaDrawer = require( '../mobile.startup/CtaDrawer' ),\n\tveConfig = mw.config.get( 'wgVisualEditorConfig' ),\n\teditorPath = /^\\/editor\\/(\\d+|T-\\d+|all)$/;\n\n/**\n * Event handler for edit link clicks. Will prevent default link\n * behaviour and will not allow propagation\n *\n * @method\n * @ignore\n * @param {HTMLElement} elem\n * @param {jQuery.Event} ev\n * @param {Router} router\n */\nfunction onEditLinkClick( elem, ev, router ) {\n\tvar section;\n\tif ( $( EDITSECTION_SELECTOR ).length === 0 ) {\n\t\t// If section edit links are not available, the only edit link\n\t\t// should allow editing the whole page (T232170)\n\t\tsection = 'all';\n\t} else {\n\t\tsection = mw.util.getParamValue( 'section', elem.href ) || 'all';\n\t}\n\t// Don't do anything for section edit links for different pages (transcluded)\n\tif ( mw.config.get( 'wgPageName' ) !== mw.util.getParamValue( 'title', elem.href ) ) {\n\t\treturn;\n\t}\n\tif ( hasTwoEditIcons ) {\n\t\tif ( elem.id === 'ca-ve-edit' || elem.id === 'ca-ve-create' ) {\n\t\t\t// \"Edit\" tab loads the visual editor\n\t\t\teditorOverride = 'VisualEditor';\n\t\t} else if ( elem.id === 'ca-editsource' || elem.id === 'ca-createsource' ) {\n\t\t\t// \"Edit source\" tab loads the source editor\n\t\t\teditorOverride = 'SourceEditor';\n\t\t} else {\n\t\t\t// Any other edit links (e.g. for sections) load the preferred editor\n\t\t}\n\t}\n\trouter.navigate( '#/editor/' + section );\n\t// DO NOT USE stopPropagation or you'll break click tracking in WikimediaEvents\n\t// You DO NOT NEED to\n\t// prevent folding section when clicking Edit by stopping propagation\n\t// as this is a concern of the Toggler class and taken care of by inspecting\n\t// !ev.target.href (see Toggler.js)\n\t// avoid navigating to ?action=edit\n\tev.preventDefault();\n}\n\n/**\n * Retrieve the user's preferred editor setting. If none is set, return the default\n * editor for this wiki.\n *\n * @method\n * @ignore\n * @return {string} Either 'VisualEditor' or 'SourceEditor'\n */\nfunction getPreferredEditor() {\n\tif ( editorOverride ) {\n\t\t// Temporary override, set via the URL for this request\n\t\t// or by clicking the chosen mode when both tabs are shown\n\t\treturn editorOverride;\n\t}\n\tconst preferredEditor = mw.user.options.get( 'mobile-editor' ) || mw.storage.get( 'preferredEditor' );\n\tif ( preferredEditor ) {\n\t\treturn preferredEditor;\n\t}\n\tconst defaultEditor = mw.config.get( 'wgMFDefaultEditor' );\n\tswitch ( defaultEditor ) {\n\t\tcase 'source':\n\t\t\treturn 'SourceEditor';\n\t\tcase 'visual':\n\t\t\treturn 'VisualEditor';\n\t\tcase 'preference':\n\t\t\t// First check if the user has actually used the desktop editor.\n\t\t\t// This is done hackily by checking if they have the preference\n\t\t\t// set to suppress the welcome dialog or user education popups. (T261423)\n\t\t\tif ( mw.user.options.get( 'visualeditor-hidebetawelcome' ) || mw.user.options.get( 'visualeditor-hideusered' ) ) {\n\t\t\t\treturn mw.user.options.get( 'visualeditor-editor' ) === 'visualeditor' ? 'VisualEditor' : 'SourceEditor';\n\t\t\t} else {\n\t\t\t\t// We don't know what their preference is.\n\t\t\t\t// For now, continue to give them the source editor.\n\t\t\t\treturn 'SourceEditor';\n\t\t\t}\n\t}\n\t// In the event of misconfiguration, fall back to source\n\treturn 'SourceEditor';\n}\n\n/**\n * Initialize the edit button so that it launches the editor interface when clicked.\n *\n * @method\n * @ignore\n * @param {Page} page The page to edit.\n * @param {Skin} skin\n * @param {PageHTMLParser} currentPageHTMLParser\n * @param {Router} router\n */\nfunction setupEditor( page, skin, currentPageHTMLParser, router ) {\n\tvar\n\t\toverlayManager = OverlayManager.getSingleton(),\n\t\tisNewPage = page.id === 0;\n\n\t$editTab.add( '.edit-link' ).on( 'click.mfeditlink', function ( ev ) {\n\t\tonEditLinkClick( this, ev, overlayManager.router );\n\t} );\n\tmw.hook( 'wikipage.content' ).add( function ( $content ) {\n\t\t// make sure that any .edit-link links in here don't get double-handled\n\t\t$content.find( EDITSECTION_SELECTOR ).off( 'click.mfeditlink' ).on( 'click.mfeditlink', function ( ev ) {\n\t\t\tonEditLinkClick( this, ev, overlayManager.router );\n\t\t} );\n\t} );\n\n\toverlayManager.add( editorPath, function ( sectionId ) {\n\t\tvar\n\t\t\tscrollTop = window.pageYOffset,\n\t\t\t$contentText = $( '#mw-content-text' ),\n\t\t\turl = new URL( location.href ),\n\t\t\teditorOptions = {\n\t\t\t\toverlayManager: overlayManager,\n\t\t\t\tcurrentPageHTMLParser: currentPageHTMLParser,\n\t\t\t\tfakeScroll: 0,\n\t\t\t\tapi: new mw.Api(),\n\t\t\t\tlicenseMsg: skin.getLicenseMsg(),\n\t\t\t\ttitle: page.title,\n\t\t\t\ttitleObj: page.titleObj,\n\t\t\t\tisAnon: user.isAnon(),\n\t\t\t\tisNewPage: isNewPage,\n\t\t\t\toldId: mw.util.getParamValue( 'oldid' ),\n\t\t\t\tcontentLang: $contentText.attr( 'lang' ),\n\t\t\t\tcontentDir: $contentText.attr( 'dir' ),\n\t\t\t\t// Arrange preload content if we're on a page with those URL parameters\n\t\t\t\tpreload: url.searchParams.get( 'preload' ),\n\t\t\t\tpreloadparams: mw.util.getArrayParam( 'preloadparams', url.searchParams ),\n\t\t\t\teditintro: url.searchParams.get( 'editintro' )\n\t\t\t},\n\t\t\tvisualAbortPromise = $.Deferred(),\n\t\t\tanimationDelayDeferred, abortableDataPromise, loadingOverlay, overlayPromise,\n\t\t\tinitMechanism = mw.util.getParamValue( 'redlink' ) ? 'new' : 'click';\n\n\t\tif ( sectionId !== 'all' ) {\n\t\t\teditorOptions.sectionId = page.isWikiText() ? sectionId : undefined;\n\t\t}\n\n\t\tfunction showLoading() {\n\t\t\tvar $page, $content, $sectionTop, fakeScroll, enableVisualSectionEditing;\n\n\t\t\t$( document.body ).addClass( 've-loading' );\n\n\t\t\t$page = $( '#mw-mf-page-center' );\n\t\t\t$content = $( '#content' );\n\t\t\tif ( sectionId === '0' || sectionId === 'all' ) {\n\t\t\t\t$sectionTop = $( '#bodyContent' );\n\t\t\t} else {\n\t\t\t\t$sectionTop = $( '[data-section=\"' + sectionId + '\"]' )\n\t\t\t\t\t.closest( 'h1, h2, h3, h4, h5, h6' );\n\t\t\t\t// When loading on action=edit URLs, there is no page content\n\t\t\t\tif ( !$sectionTop.length ) {\n\t\t\t\t\t$sectionTop = $( '#bodyContent' );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Pretend that we didn't just scroll the page to the top.\n\t\t\t$page.prop( 'scrollTop', scrollTop );\n\t\t\t// Then, pretend that we're scrolling to the position of the clicked heading.\n\t\t\tfakeScroll = $sectionTop[0].getBoundingClientRect().top;\n\t\t\t// Adjust for height of the toolbar.\n\t\t\tfakeScroll -= 48;\n\t\t\tif ( shouldLoadVisualEditor() ) {\n\t\t\t\tenableVisualSectionEditing = veConfig.enableVisualSectionEditing === true ||\n\t\t\t\t\t// === ve.init.mw.MobileArticleTarget.static.trackingName\n\t\t\t\t\tveConfig.enableVisualSectionEditing === 'mobile';\n\t\t\t\tif ( sectionId === '0' || sectionId === 'all' || enableVisualSectionEditing ) {\n\t\t\t\t\t// Adjust for surface padding. Only needed if we're at the beginning of the doc.\n\t\t\t\t\tfakeScroll -= 16;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( sectionId === '0' || sectionId === 'all' ) {\n\t\t\t\t\tfakeScroll -= 16;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$content.css( {\n\t\t\t\t// Use transform instead of scroll for smoother animation (via CSS transitions).\n\t\t\t\ttransform: 'translate( 0, ' + -fakeScroll + 'px )',\n\t\t\t\t// If the clicked heading is near the end of the page, we might need to insert\n\t\t\t\t// some extra space to allow us to scroll \"beyond the end\" of the page.\n\t\t\t\t'padding-bottom': '+=' + fakeScroll,\n\t\t\t\t'margin-bottom': '-=' + fakeScroll\n\t\t\t} );\n\t\t\teditorOptions.fakeScroll = fakeScroll;\n\t\t\tsetTimeout( animationDelayDeferred.resolve, 500 );\n\t\t}\n\n\t\tfunction clearLoading() {\n\t\t\tif ( abortableDataPromise && abortableDataPromise.abort ) {\n\t\t\t\tabortableDataPromise.abort();\n\t\t\t}\n\n\t\t\t$( '#content' ).css( {\n\t\t\t\ttransform: '',\n\t\t\t\t'padding-bottom': '',\n\t\t\t\t'margin-bottom': ''\n\t\t\t} );\n\n\t\t\t$( document.body ).removeClass( 've-loading' );\n\t\t}\n\n\t\tfunction loadBasicEditor() {\n\t\t\t// Note that this option was used when logging a wikitext init later\n\t\t\tinitMechanism = 'tooslow';\n\n\t\t\t// This restarts the loading (whether it was aborted when loading the code or the data)\n\t\t\tvisualAbortPromise.reject();\n\t\t\tif ( abortableDataPromise && abortableDataPromise.abort ) {\n\t\t\t\tabortableDataPromise.abort();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Log init event to edit schema.\n\t\t * Need to log this from outside the Overlay object because that module\n\t\t * won't have loaded yet.\n\t\t *\n\t\t * @private\n\t\t * @ignore\n\t\t * @param {string} editor name e.g. wikitext or visualeditor\n\t\t * @method\n\t\t */\n\t\tfunction logInit( editor ) {\n\t\t\tmw.track( 'editAttemptStep', {\n\t\t\t\taction: 'init',\n\t\t\t\ttype: 'section',\n\t\t\t\tmechanism: initMechanism,\n\t\t\t\tintegration: 'page',\n\t\t\t\t/* eslint-disable camelcase */\n\t\t\t\teditor_interface: editor\n\t\t\t\t/* eslint-enable camelcase */\n\t\t\t} );\n\t\t}\n\n\t\t/**\n\t\t * Check whether VisualEditor should be loaded\n\t\t *\n\t\t * @private\n\t\t * @ignore\n\t\t * @method\n\t\t * @return {bool}\n\t\t */\n\t\tfunction shouldLoadVisualEditor() {\n\t\t\tvar preferredEditor = getPreferredEditor();\n\n\t\t\treturn page.isVESourceAvailable() || (\n\t\t\t\tpage.isVEVisualAvailable() &&\n\t\t\t\t// If the user prefers visual mode or the user has no preference and\n\t\t\t\t// the visual mode is the default editor for this wiki\n\t\t\t\tpreferredEditor === 'VisualEditor'\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Load source editor\n\t\t *\n\t\t * @private\n\t\t * @ignore\n\t\t * @method\n\t\t * @return {jQuery.Promise} Promise resolved with the editor overlay\n\t\t */\n\t\tfunction loadSourceEditor() {\n\t\t\tlogInit( 'wikitext' );\n\t\t\t// Inform other interested code that we're loading the editor\n\t\t\tmw.hook( 'mobileFrontend.editorOpening' ).fire();\n\n\t\t\treturn mw.loader.using( 'mobile.editor.overlay' ).then( function () {\n\t\t\t\tvar SourceEditorOverlay = M.require( 'mobile.editor.overlay/SourceEditorOverlay' );\n\t\t\t\treturn new SourceEditorOverlay( editorOptions );\n\t\t\t} );\n\t\t}\n\n\t\t/**\n\t\t * Load visual editor. If it fails to load for any reason, load the source editor instead.\n\t\t *\n\t\t * @private\n\t\t * @ignore\n\t\t * @method\n\t\t * @return {jQuery.Promise} Promise resolved with the editor overlay\n\t\t */\n\t\tfunction loadVisualEditorMaybe() {\n\t\t\tlogInit( 'visualeditor' );\n\t\t\t// Inform other interested code that we're loading the editor\n\t\t\tmw.hook( 'mobileFrontend.editorOpening' ).fire();\n\n\t\t\teditorOptions.mode = mw.config.get( 'wgMFEnableVEWikitextEditor' ) && getPreferredEditor() === 'SourceEditor' ?\n\t\t\t\t'source' :\n\t\t\t\t'visual';\n\t\t\teditorOptions.dataPromise = mw.loader.using( 'ext.visualEditor.targetLoader' ).then( function () {\n\t\t\t\tabortableDataPromise = mw.libs.ve.targetLoader.requestPageData(\n\t\t\t\t\teditorOptions.mode,\n\t\t\t\t\teditorOptions.titleObj.getPrefixedDb(),\n\t\t\t\t\t{\n\t\t\t\t\t\tsessionStore: true,\n\t\t\t\t\t\tsection: editorOptions.sectionId === undefined ?\n\t\t\t\t\t\t\tnull : editorOptions.sectionId,\n\t\t\t\t\t\toldId: editorOptions.oldId || undefined,\n\t\t\t\t\t\tpreload: editorOptions.preload,\n\t\t\t\t\t\tpreloadparams: editorOptions.preloadparams,\n\t\t\t\t\t\teditintro: editorOptions.editintro,\n\t\t\t\t\t\t// Should be ve.init.mw.MobileArticleTarget.static.trackingName,\n\t\t\t\t\t\t// but the class hasn't loaded yet.\n\t\t\t\t\t\ttargetName: 'mobile'\n\t\t\t\t\t} );\n\t\t\t\treturn abortableDataPromise;\n\t\t\t} );\n\n\t\t\tvar visualLoadingPromise = mw.loader.using( 'ext.visualEditor.targetLoader' )\n\t\t\t\t.then( function () {\n\t\t\t\t\t// Load 'mobile.editor.overlay' separately, so that if we fall back to basic\n\t\t\t\t\t// editor, we can display it without waiting for the visual code\n\t\t\t\t\treturn mw.loader.using( 'mobile.editor.overlay' ).then( function () {\n\t\t\t\t\t\tmw.libs.ve.targetLoader.addPlugin( 'ext.visualEditor.mobileArticleTarget' );\n\t\t\t\t\t\tif ( mw.config.get( 'wgMFEnableVEWikitextEditor' ) ) {\n\t\t\t\t\t\t\t// Target loader only loads wikitext editor if the desktop\n\t\t\t\t\t\t\t// preference is set.\n\t\t\t\t\t\t\t// TODO: Have a cleaner API for this instead of duplicating\n\t\t\t\t\t\t\t// the module name here.\n\t\t\t\t\t\t\tmw.libs.ve.targetLoader.addPlugin( 'ext.visualEditor.mwwikitext' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn mw.libs.ve.targetLoader.loadModules( editorOptions.mode );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\t// Continue when loading is completed or aborted\n\t\t\tvar visualPromise = $.Deferred();\n\t\t\tvisualLoadingPromise.then( visualPromise.resolve, visualPromise.reject );\n\t\t\tvisualAbortPromise.then( visualPromise.reject, visualPromise.reject );\n\n\t\t\treturn visualPromise\n\t\t\t\t.then( function () {\n\t\t\t\t\tvar VisualEditorOverlay = M.require( 'mobile.editor.overlay/VisualEditorOverlay' ),\n\t\t\t\t\t\tSourceEditorOverlay = M.require( 'mobile.editor.overlay/SourceEditorOverlay' );\n\t\t\t\t\teditorOptions.SourceEditorOverlay = SourceEditorOverlay;\n\t\t\t\t\treturn new VisualEditorOverlay( editorOptions );\n\t\t\t\t}, function () {\n\t\t\t\t\treturn loadSourceEditor();\n\t\t\t\t} );\n\t\t}\n\n\t\tanimationDelayDeferred = util.Deferred();\n\n\t\t// showLoading() has to run after the overlay has opened, which disables page scrolling.\n\t\t// clearLoading() has to run after the loading overlay is hidden in any way\n\t\t// (either when loading is aborted, or when the editor overlay is shown instead).\n\t\tloadingOverlay = editorLoadingOverlay( showLoading, clearLoading,\n\t\t\tshouldLoadVisualEditor() ? loadBasicEditor : null );\n\n\t\tif ( shouldLoadVisualEditor() ) {\n\t\t\toverlayPromise = loadVisualEditorMaybe();\n\t\t} else {\n\t\t\toverlayPromise = loadSourceEditor();\n\t\t}\n\n\t\t// Wait for the scroll animation to finish before we show the editor overlay\n\t\tutil.Promise.all( [ overlayPromise, animationDelayDeferred ] ).then( function ( overlay ) {\n\t\t\t// Wait for the data to load before we show the editor overlay\n\t\t\toverlay.getLoadingPromise().catch( function ( error ) {\n\t\t\t\tif ( visualAbortPromise.state() === 'rejected' ) {\n\t\t\t\t\treturn loadSourceEditor().then( function ( sourceOverlay ) {\n\t\t\t\t\t\toverlay = sourceOverlay;\n\t\t\t\t\t\treturn overlay.getLoadingPromise();\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\treturn $.Deferred().reject( error ).promise();\n\t\t\t} ).then( function () {\n\t\t\t\t// Make sure the user did not close the loading overlay while we were waiting\n\t\t\t\tvar overlayData = overlayManager.stack[0];\n\t\t\t\tif ( !overlayData || overlayData.overlay !== loadingOverlay ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// Show the editor!\n\t\t\t\toverlayManager.replaceCurrent( overlay );\n\t\t\t}, function ( error, apiResponse ) {\n\t\t\t\t// Could not load the editor.\n\t\t\t\toverlayManager.router.back();\n\t\t\t\tif ( error.show ) {\n\t\t\t\t\t// Probably a blockMessageDrawer returned because the user is blocked.\n\t\t\t\t\tdocument.body.appendChild( error.$el[ 0 ] );\n\t\t\t\t\terror.show();\n\t\t\t\t} else if ( apiResponse ) {\n\t\t\t\t\tmw.notify( editorOptions.api.getErrorMessage( apiResponse ) );\n\t\t\t\t} else {\n\t\t\t\t\tmw.notify( mw.msg( 'mobile-frontend-editor-error-loading' ) );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Reset the temporary override for the next load\n\t\teditorOverride = null;\n\n\t\treturn loadingOverlay;\n\t} );\n\n\t$( '#ca-edit a, a#ca-edit, #ca-editsource a, a#ca-editsource' ).prop( 'href', function ( i, href ) {\n\t\tconst editUrl = new URL( href, location.href );\n\t\t// By default the editor opens section 0 (lead section), rather than the whole article.\n\t\t// This might be changed in the future (T210659).\n\t\teditUrl.searchParams.set( 'section', '0' );\n\t\treturn editUrl.toString();\n\t} );\n\n\t// We use wgAction instead of getParamValue('action') as the former can be\n\t// overridden by hooks to stop the editor loading automatically.\n\tif ( !router.getPath() && ( mw.util.getParamValue( 'veaction' ) || mw.config.get( 'wgAction' ) === 'edit' ) ) {\n\t\tif ( mw.util.getParamValue( 'veaction' ) === 'edit' ) {\n\t\t\teditorOverride = 'VisualEditor';\n\t\t} else if ( mw.util.getParamValue( 'veaction' ) === 'editsource' ) {\n\t\t\teditorOverride = 'SourceEditor';\n\t\t}\n\t\t// else: action=edit, for which we allow the default to take effect\n\t\tconst fragment = '#/editor/' + ( mw.util.getParamValue( 'section' ) || ( mw.config.get( 'wgAction' ) === 'edit' ? 'all' : '0' ) );\n\t\t// eslint-disable-next-line no-restricted-properties\n\t\tif ( window.history && history.pushState ) {\n\t\t\t// We're reformatting the action=edit URL into a view URL and\n\t\t\t// replacing it into the history, and then will fall through to\n\t\t\t// router.navigate which will move us to the editing URL for the\n\t\t\t// mobile site. We do this because the editor overlay deeply\n\t\t\t// expects to have been opened on top of an actual page, and e.g.\n\t\t\t// closing the editor via the X will produce unexpected behavior\n\t\t\t// otherwise.\n\t\t\tconst url = new URL( location.href );\n\t\t\turl.searchParams.delete( 'action' );\n\t\t\turl.searchParams.delete( 'veaction' );\n\t\t\turl.searchParams.delete( 'section' );\n\t\t\thistory.replaceState( null, document.title, url );\n\t\t}\n\t\trouter.navigate( fragment );\n\t}\n}\n\n/**\n * Hide any section id icons in the page. This will not hide the edit icon in the page action\n * menu.\n *\n * @method\n * @ignore\n * @param {PageHTMLParser} currentPageHTMLParser\n */\nfunction hideSectionEditIcons( currentPageHTMLParser ) {\n\tcurrentPageHTMLParser.$el.find( '.mw-editsection' ).hide();\n}\n\n/**\n * Show a drawer with log in / sign up buttons.\n *\n * @method\n * @ignore\n * @param {Router} router\n */\nfunction bindEditLinksLoginDrawer( router ) {\n\tvar drawer;\n\tfunction showLoginDrawer() {\n\t\tif ( !drawer ) {\n\t\t\tdrawer = new CtaDrawer( {\n\t\t\t\tcontent: mw.msg( 'mobile-frontend-editor-disabled-anon' ),\n\t\t\t\tsignupQueryParams: {\n\t\t\t\t\twarning: 'mobile-frontend-watchlist-signup-action'\n\t\t\t\t}\n\t\t\t} );\n\t\t\tdocument.body.appendChild( drawer.$el[ 0 ] );\n\t\t}\n\t\tdrawer.show();\n\t}\n\t$editTab.on( 'click', function ( ev ) {\n\t\tshowLoginDrawer();\n\t\tev.preventDefault();\n\t} );\n\tmw.hook( 'wikipage.content' ).add( function ( $content ) {\n\t\t$content.find( EDITSECTION_SELECTOR ).on( 'click', function ( ev ) {\n\t\t\tshowLoginDrawer();\n\t\t\tev.preventDefault();\n\t\t} );\n\t} );\n\trouter.route( editorPath, function () {\n\t\tshowLoginDrawer();\n\t} );\n\trouter.checkRoute();\n}\n\n/**\n * Setup the editor if the user can edit the page otherwise show a sorry toast.\n *\n * @method\n * @ignore\n * @param {Page} currentPage\n * @param {PageHTMLParser} currentPageHTMLParser\n * @param {Skin} skin\n * @param {Router} router\n */\nfunction init( currentPage, currentPageHTMLParser, skin, router ) {\n\tvar isReadOnly, isEditable, editErrorMessage, editRestrictions;\n\t// see: https://www.mediawiki.org/wiki/Manual:Interface/JavaScript#Page-specific\n\tisReadOnly = mw.config.get( 'wgMinervaReadOnly' );\n\tisEditable = !isReadOnly && mw.config.get( 'wgIsProbablyEditable' );\n\n\tif ( isEditable ) {\n\t\t// Edit button updated in setupEditor.\n\t\tsetupEditor( currentPage, skin, currentPageHTMLParser, router );\n\t} else {\n\t\thideSectionEditIcons( currentPageHTMLParser );\n\t\teditRestrictions = mw.config.get( 'wgRestrictionEdit' );\n\t\tif ( mw.user.isAnon() && Array.isArray( editRestrictions ) && !editRestrictions.length ) {\n\t\t\tbindEditLinksLoginDrawer( router );\n\t\t} else {\n\t\t\tvar $link = $( '<a>' ).attr( 'href', '/wiki/' + mw.config.get( 'wgPageName' ) + '?action=edit' );\n\t\t\teditErrorMessage = isReadOnly ? mw.msg( 'apierror-readonly' ) : mw.message( 'mobile-frontend-editor-disabled', $link ).parseDom();\n\t\t\tbindEditLinksSorryToast( editErrorMessage, router );\n\t\t}\n\t}\n}\n\n/**\n * Wire up events that ensure we\n * show a toast message with sincere condolences when user navigates to\n * #/editor or clicks on an edit button\n *\n * @method\n * @ignore\n * @param {string} msg Message for sorry message\n * @param {Router} router\n */\nfunction bindEditLinksSorryToast( msg, router ) {\n\t$editTab.on( 'click', function ( ev ) {\n\t\tmw.notify( msg );\n\t\tev.preventDefault();\n\t} );\n\tmw.hook( 'wikipage.content' ).add( function ( $content ) {\n\t\t$content.find( EDITSECTION_SELECTOR ).on( 'click', function ( ev ) {\n\t\t\tmw.notify( msg );\n\t\t\tev.preventDefault();\n\t\t} );\n\t} );\n\trouter.route( editorPath, function () {\n\t\tmw.notify( msg );\n\t} );\n\trouter.checkRoute();\n}\n\nmodule.exports = function ( currentPage, currentPageHTMLParser, skin ) {\n\tvar router = mw.loader.require( 'mediawiki.router' );\n\n\tif ( currentPage.inNamespace( 'file' ) && currentPage.id === 0 ) {\n\t\t// Is a new file page (enable upload image only) T60311\n\t\tbindEditLinksSorryToast( mw.msg( 'mobile-frontend-editor-uploadenable' ), router );\n\t} else {\n\t\t// Edit button is currently hidden. A call to init() will update it as needed.\n\t\tinit( currentPage, currentPageHTMLParser, skin, router );\n\t}\n};\n","var\n\tfakeToolbar = require( './fakeToolbar' ),\n\tIconButton = require( '../mobile.startup/IconButton' ),\n\tOverlay = require( '../mobile.startup/Overlay' );\n\n/* global $ */\n\n/**\n * Like loadingOverlay(), but with a fake editor toolbar instead of the spinner.\n *\n * @param {Function} afterShow Callback which runs after overlay is shown\n * @param {Function} afterHide Callback which runs after overlay is hidden\n * @param {Function} [loadBasicEditor] Callback for the \"Use basic editor\" button\n * @return {Overlay}\n */\nfunction editorLoadingOverlay( afterShow, afterHide, loadBasicEditor ) {\n\tvar\n\t\t$fakeToolbar = fakeToolbar(),\n\t\t$loadBasicWrapper = $( '<div>' ).addClass( 've-loadbasiceditor' ),\n\t\tloadBasicButton = new IconButton( {\n\t\t\tlabel: mw.msg( 'mobile-frontend-editor-loadbasiceditor' ),\n\t\t\taction: 'progressive',\n\t\t\tweight: 'normal',\n\t\t\tsize: 'medium',\n\t\t\tisIconOnly: false,\n\t\t\ticon: null\n\t\t} ),\n\t\toverlay = new Overlay( {\n\t\t\tclassName: 'overlay overlay-loading',\n\t\t\tnoHeader: true,\n\t\t\tisBorderBox: false,\n\t\t\tonBeforeExit: function ( exit ) {\n\t\t\t\texit();\n\t\t\t\tafterHide();\n\t\t\t}\n\t\t} );\n\n\toverlay.show = function () {\n\t\tOverlay.prototype.show.call( this );\n\t\tafterShow();\n\t};\n\n\toverlay.$el.find( '.overlay-content' ).append( $fakeToolbar );\n\n\tif ( loadBasicEditor ) {\n\t\toverlay.$el.find( '.overlay-content' ).append(\n\t\t\t$loadBasicWrapper.append(\n\t\t\t\t$( '<p>' ).text( mw.msg( 'mobile-frontend-editor-loadingtooslow' ) ),\n\t\t\t\tloadBasicButton.$el\n\t\t\t)\n\t\t);\n\n\t\tsetTimeout( function () {\n\t\t\t$loadBasicWrapper.addClass( 've-loadbasiceditor-shown' );\n\t\t}, 3000 );\n\n\t\tloadBasicButton.$el.on( 'click', function () {\n\t\t\t$loadBasicWrapper.removeClass( 've-loadbasiceditor-shown' );\n\t\t\tloadBasicEditor();\n\t\t} );\n\t}\n\n\t// Animate the toolbar sliding into place.\n\t$fakeToolbar.addClass( 'toolbar-hidden' );\n\tsetTimeout( function () {\n\t\t$fakeToolbar.addClass( 'toolbar-shown' );\n\t\tsetTimeout( function () {\n\t\t\t$fakeToolbar.addClass( 'toolbar-shown-done' );\n\t\t}, 250 );\n\t} );\n\n\treturn overlay;\n}\n\nmodule.exports = editorLoadingOverlay;\n","/* global $ */\nconst lazyImageLoader = require( '../mobile.startup/lazyImages/lazyImageLoader' );\n\n/**\n * Initialise lazy loading images to supplement the HTML changes inside the\n * MobileFormatter.\n *\n * @param {jQuery} $container\n */\nfunction init( $container ) {\n\tconst imagePlaceholders = lazyImageLoader.queryPlaceholders( $container[ 0 ] );\n\n\t// Regardless of whether or not lazy load is turned on\n\t// We need to load in all images before print\n\twindow.addEventListener( 'beforeprint', function () {\n\t\tlazyImageLoader.loadImages( imagePlaceholders );\n\t} );\n\n\tif ( !mw.config.get( 'wgMFLazyLoadImages' ) ) {\n\t\treturn;\n\t}\n\n\tif ( 'IntersectionObserver' in window ) {\n\t\tconst observer = new IntersectionObserver(\n\t\t\t( entries ) => {\n\t\t\t\tentries.forEach( ( entry ) => {\n\t\t\t\t\tconst placeholder = entry.target;\n\t\t\t\t\t// If intersecting load image and stop observing it to free up resources.\n\t\t\t\t\tif ( entry.isIntersecting ) {\n\t\t\t\t\t\tlazyImageLoader.loadImage( placeholder );\n\t\t\t\t\t\tobserver.unobserve( placeholder );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t},\n\t\t\t// See https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n\t\t\t{\n\t\t\t\t// Setup the area for observing.\n\t\t\t\t// By default the root is the viewport.\n\t\t\t\t// We want the detection area to be as tall as 150% of the viewport height,\n\t\t\t\t// allowing elements to be detected before they reach the viewport.\n\t\t\t\t// This is achieved with a 50% bottom margin.\n\t\t\t\trootMargin: '0px 0px 50% 0px',\n\t\t\t\t// The default is 0 (meaning as soon as even one pixel is visible,\n\t\t\t\t// the callback will be run), however we explicitly set this so that\n\t\t\t\t// it is clear we have made this choice in case we want to revisit later.\n\t\t\t\tthreshold: 0\n\t\t\t}\n\t\t);\n\n\t\t// observe all the placeholders\n\t\timagePlaceholders.forEach( ( placeholder ) => {\n\t\t\tobserver.observe( placeholder );\n\t\t} );\n\t} else {\n\t\t/**\n\t\t * Adds the following class to identify the tap to click images on\n\t\t * older browsers that do not support IntersectionObserver:\n\t\t * lazy-image-placeholder--tap\n\t\t */\n\t\t// eslint-disable-next-line mediawiki/class-doc\n\t\t$( imagePlaceholders ).addClass( `${lazyImageLoader.placeholderClass}--tap` );\n\n\t\t// Tap to show (see T246767)\n\t\tdocument.addEventListener( 'click', function ( ev ) {\n\t\t\tif ( imagePlaceholders.indexOf( ev.target ) > -1 ) {\n\t\t\t\tlazyImageLoader.loadImage( ev.target );\n\t\t\t}\n\t\t} );\n\t}\n}\n\nmodule.exports = function () {\n\tmw.hook( 'wikipage.content' ).add( init );\n};\n","// FIXME: make this an object with a constructor to facilitate testing\n// (see https://bugzilla.wikimedia.org/show_bug.cgi?id=44264)\n/**\n * mobileFrontend namespace\n *\n * @class mw.mobileFrontend\n * @singleton\n */\nvar skin,\n\turl,\n\ttoggling = require( './toggling' ),\n\tFONT_SIZE_KEY = 'mf-font-size',\n\tstorage = mw.storage,\n\tapi = new mw.Api(),\n\tlazyLoadedImages = require( './lazyLoadedImages' ),\n\teditor = require( './editor' ),\n\tcurrentPage = require( '../mobile.startup/currentPage' )(),\n\tcurrentPageHTMLParser = require( '../mobile.startup/currentPageHTMLParser' )(),\n\tmfUtil = require( '../mobile.startup/util' ),\n\t$window = mfUtil.getWindow(),\n\tSkin = require( '../mobile.startup/Skin' ),\n\teventBus = require( '../mobile.startup/eventBusSingleton' );\n\nskin = Skin.getSingleton();\n\n/**\n * Given 2 functions, it returns a function that will run both with it's\n * context and parameters and return the results combined\n *\n * @private\n * @param {Function} fn1\n * @param {Function} fn2\n * @return {Function} which returns void\n */\nfunction apply2( fn1, fn2 ) {\n\treturn function () {\n\t\tfn1.apply( this, arguments );\n\t\tfn2.apply( this, arguments );\n\t};\n}\n\n/**\n * The `window`'s resize event debounced at 100 ms.\n * The `resize:throttled` event is the `window`'s\n * resize event throttled to 200 ms.\n *\n * @event resize\n */\n\n/**\n * The `window`'s scroll event debounced at 100 ms.\n * The `scroll:throttled` event is the `window`'s\n * scroll event throttled to 200 ms.\n *\n * @event scroll\n */\n\n$window\n\t.on( 'resize', apply2(\n\t\tmw.util.debounce( function () { eventBus.emit( 'resize' ); }, 100 ),\n\t\tmw.util.throttle( function () { eventBus.emit( 'resize:throttled' ); }, 200 )\n\t) )\n\t.on( 'scroll', apply2(\n\t\tmw.util.debounce( function () { eventBus.emit( 'scroll' ); }, 100 ),\n\t\tmw.util.throttle( function () { eventBus.emit( 'scroll:throttled' ); }, 200 )\n\t) );\n\n// Hide URL flags used to pass state through reloads\n// venotify is normally handled in ve.init.mw.DesktopArticleTarget.init.js\n// but that's not loaded on mobile\n// eslint-disable-next-line no-restricted-properties\nif ( window.history && history.pushState ) {\n\t// eslint-disable-next-line no-restricted-properties\n\turl = new URL( window.location.href );\n\tif ( url.searchParams.has( 'venotify' ) || url.searchParams.has( 'mfnotify' ) ) {\n\t\turl.searchParams.delete( 'venotify' );\n\t\turl.searchParams.delete( 'mfnotify' );\n\t\t// eslint-disable-next-line no-restricted-properties\n\t\twindow.history.replaceState( null, document.title, url.toString() );\n\t}\n}\n\n// Recruit volunteers through the console\n// (note console.log may not be a function so check via apply)\n/* eslint-disable no-console */\nif ( window.console && window.console.log && window.console.log.apply &&\n\t\tmw.config.get( 'wgMFEnableJSConsoleRecruitment' ) ) {\n\tconsole.log( mw.msg( 'mobile-frontend-console-recruit' ) );\n}\n/* eslint-enable no-console */\n\n// Setup editor, if supported for the current page view\nif ( mw.config.get( 'wgMFIsSupportedEditRequest' ) ) {\n\teditor( currentPage, currentPageHTMLParser, skin );\n}\n\n/**\n * One time action to migrate legacy font size to new system.\n * FIXME: Can be removed in 1 months time and replaced with `storage.remove( 'userFontSize' );`\n */\nfunction migrateLegacyFontSizeValue() {\n\tlet currentValue = storage.get( 'userFontSize' );\n\tif ( currentValue ) {\n\t\t// x-large is mapped to xlarge but others are the same.\n\t\tcurrentValue = currentValue.replace( '-', '' );\n\t\tif ( mw.user.isAnon() ) {\n\t\t\tmw.user.clientPrefs.set( FONT_SIZE_KEY, currentValue );\n\t\t} else {\n\t\t\tapi.saveOption( FONT_SIZE_KEY, currentValue );\n\t\t}\n\t\tstorage.remove( 'userFontSize' );\n\t}\n}\n\nmigrateLegacyFontSizeValue();\ntoggling();\nlazyLoadedImages();\n","module.exports = function () {\n\tvar\n\t\tcurrentPage = require( '../mobile.startup/currentPage' )(),\n\t\tToggler = require( '../mobile.startup/Toggler' ),\n\t\teventBus = require( '../mobile.startup/eventBusSingleton' );\n\n\t/**\n\t * Initialises toggling code.\n\t *\n\t * @method\n\t * @param {jQuery.Object} $container to enable toggling on\n\t * @param {string} prefix a prefix to use for the id.\n\t * @param {Page} page The current page\n\t * @ignore\n\t */\n\tfunction init( $container, prefix, page ) {\n\t\t// Only handle headings in content processed by MakeSectionsTransform.\n\t\t// Remove event handler added by MakeSectionsTransform::interimTogglingSupport().\n\t\t$container.find( '.section-heading' ).removeAttr( 'onclick' );\n\t\t// Cleanup global as it is no longer needed. We check if it's undefined because\n\t\t// there is no guarantee this won't be run on other skins e.g. Vector or cached HTML.\n\t\tif ( window.mfTempOpenSection !== undefined ) {\n\t\t\tdelete window.mfTempOpenSection;\n\t\t}\n\t\t// eslint-disable-next-line no-new\n\t\tnew Toggler( {\n\t\t\t$container: $container,\n\t\t\tprefix: prefix,\n\t\t\tpage: page,\n\t\t\teventBus: eventBus\n\t\t} );\n\t}\n\n\tif (\n\t\t// Avoid this running on Watchlist.\n\t\t!currentPage.inNamespace( 'special' ) &&\n\t\tmw.config.get( 'wgAction' ) === 'view'\n\t) {\n\t\tmw.hook( 'wikipage.content' ).add( function ( $container ) {\n\t\t\tvar $contentContainer = $container.find( '.mw-parser-output' );\n\t\t\t// If there was no mw-parser-output wrapper, just use the parent.\n\t\t\tif ( $contentContainer.length === 0 ) {\n\t\t\t\t$contentContainer = $container;\n\t\t\t}\n\t\t\tinit( $contentContainer, 'content-', currentPage );\n\t\t} );\n\t}\n};\n"],"names":["M","require","util","editorLoadingOverlay","OverlayManager","$editTab","$","hasTwoEditIcons","length","editorOverride","EDITSECTION_SELECTOR","user","mw","CtaDrawer","veConfig","config","get","editorPath","onEditLinkClick","elem","ev","router","section","getParamValue","href","id","navigate","preventDefault","getPreferredEditor","preferredEditor","options","storage","bindEditLinksSorryToast","msg","on","notify","hook","add","$content","find","route","checkRoute","module","exports","currentPage","currentPageHTMLParser","skin","loader","inNamespace","isReadOnly","editRestrictions","page","overlayManager","getSingleton","isNewPage","this","off","sectionId","animationDelayDeferred","abortableDataPromise","loadingOverlay","overlayPromise","scrollTop","window","pageYOffset","$contentText","url","URL","location","editorOptions","fakeScroll","api","Api","licenseMsg","getLicenseMsg","title","titleObj","isAnon","oldId","contentLang","attr","contentDir","preload","searchParams","preloadparams","getArrayParam","editintro","visualAbortPromise","Deferred","initMechanism","logInit","editor","track","action","type","mechanism","integration","editor_interface","shouldLoadVisualEditor","isVESourceAvailable","isVEVisualAvailable","loadSourceEditor","fire","using","then","isWikiText","undefined","$page","$sectionTop","enableVisualSectionEditing","document","body","addClass","closest","prop","getBoundingClientRect","top","css","transform","setTimeout","resolve","abort","removeClass","reject","mode","dataPromise","libs","ve","targetLoader","requestPageData","getPrefixedDb","sessionStore","targetName","visualLoadingPromise","addPlugin","loadModules","visualPromise","VisualEditorOverlay","SourceEditorOverlay","loadVisualEditorMaybe","Promise","all","overlay","getLoadingPromise","catch","error","state","sourceOverlay","promise","overlayData","stack","replaceCurrent","apiResponse","back","show","appendChild","$el","getErrorMessage","i","editUrl","set","toString","getPath","fragment","history","pushState","delete","replaceState","setupEditor","hide","hideSectionEditIcons","Array","isArray","drawer","showLoginDrawer","content","signupQueryParams","warning","bindEditLinksLoginDrawer","$link","message","parseDom","init","fakeToolbar","IconButton","Overlay","afterShow","afterHide","loadBasicEditor","$fakeToolbar","$loadBasicWrapper","loadBasicButton","label","weight","size","isIconOnly","icon","className","noHeader","isBorderBox","onBeforeExit","exit","prototype","call","append","text","lazyImageLoader","$container","imagePlaceholders","queryPlaceholders","addEventListener","loadImages","observer","IntersectionObserver","entries","forEach","entry","placeholder","target","isIntersecting","loadImage","unobserve","rootMargin","threshold","observe","concat","placeholderClass","indexOf","currentValue","toggling","FONT_SIZE_KEY","lazyLoadedImages","$window","getWindow","Skin","eventBus","apply2","fn1","fn2","apply","arguments","debounce","emit","throttle","has","console","log","replace","clientPrefs","saveOption","remove","Toggler","$contentContainer","prefix","removeAttr","mfTempOpenSection"],"sourceRoot":""}