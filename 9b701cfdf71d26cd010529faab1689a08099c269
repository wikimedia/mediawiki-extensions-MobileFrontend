{
  "comments": [
    {
      "key": {
        "uuid": "07665b17_85f300fc",
        "filename": "src/mobile.init/mobile.init.js",
        "patchSetId": 1
      },
      "lineNbr": 213,
      "author": {
        "id": 2426
      },
      "writtenOn": "2019-02-20T16:50:01Z",
      "side": 1,
      "message": "This looks like we\u0027re meshing two different event buses. Should we use eventBus instead?",
      "range": {
        "startLine": 213,
        "startChar": 1,
        "endLine": 213,
        "endChar": 47
      },
      "revId": "9b701cfdf71d26cd010529faab1689a08099c269",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad93fed1_db694951",
        "filename": "src/mobile.init/mobile.init.js",
        "patchSetId": 1
      },
      "lineNbr": 213,
      "author": {
        "id": 94
      },
      "writtenOn": "2019-02-20T18:00:55Z",
      "side": 1,
      "message": "We\u0027d need a global event bus, which I thought we were moving away from. Here I use the local event bus to Skin to emit a global event for Minerva to subscribe to.\n\nmw.hook is the global event bus used by all Wikimedia extensions, so it felt like the right thing to do here.\n\nAre you suggesting creating a new global event bus? If so what are the advantages of doing that over using mw.hook?",
      "parentUuid": "07665b17_85f300fc",
      "range": {
        "startLine": 213,
        "startChar": 1,
        "endLine": 213,
        "endChar": 47
      },
      "revId": "9b701cfdf71d26cd010529faab1689a08099c269",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e26ac1b4_a7933607",
        "filename": "src/mobile.init/mobile.init.js",
        "patchSetId": 1
      },
      "lineNbr": 213,
      "author": {
        "id": 2426
      },
      "writtenOn": "2019-02-20T18:48:49Z",
      "side": 1,
      "message": "Isn\u0027t eventBus already a global singleton? It looks like Skin is actually passed eventBus in its constructor so I don\u0027t think that ferrying from one bus to another will be necessary if the consumer also uses eventBus. Maybe? I\u0027m not sure.\n\nI\u0027m not opposed to using mw.hook() but are we also committed to removing OO.EventEmitter usages? A piecewise change here may improve consistency with extensions but reduces consistency with the rest of MobileFrontend.\n\nI don\u0027t think this change is a big deal either way but wanted to understand it better.",
      "parentUuid": "ad93fed1_db694951",
      "range": {
        "startLine": 213,
        "startChar": 1,
        "endLine": 213,
        "endChar": 47
      },
      "revId": "9b701cfdf71d26cd010529faab1689a08099c269",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40c69dd5_0a0e78a5",
        "filename": "src/mobile.init/mobile.init.js",
        "patchSetId": 1
      },
      "lineNbr": 213,
      "author": {
        "id": 94
      },
      "writtenOn": "2019-02-22T19:33:29Z",
      "side": 1,
      "message": "I don\u0027t know the answer to this, so I\u0027ve spun this out, since I think the most important thing at this point is to make clear these methods are deprecated.\n\nWe can continue conversation on:\nhttps://gerrit.wikimedia.org/r/#/c/mediawiki/extensions/MobileFrontend/+/492371 Provide a way for Minerva to respond to lazy reference loads  \n\nbut this patch should now hopefully be ready to merge!",
      "parentUuid": "e26ac1b4_a7933607",
      "range": {
        "startLine": 213,
        "startChar": 1,
        "endLine": 213,
        "endChar": 47
      },
      "revId": "9b701cfdf71d26cd010529faab1689a08099c269",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}