{
  "comments": [
    {
      "key": {
        "uuid": "cea0dbb8_efffcdfa",
        "filename": "includes/MobileContext.php",
        "patchSetId": 5
      },
      "lineNbr": 200,
      "author": {
        "id": 3945
      },
      "writtenOn": "2016-10-18T21:18:02Z",
      "side": 1,
      "message": "There are aalready at least 3 almost identical getters for a config variable (line 184 and 168).\n\nWould be nice to create sth like :\n\nprivate function getSystemConfigVariable($settingName) {\n   $configVars \u003d $this-\u003egetMFConfig()-\u003eget($settingName);\n   if ($value \u003d\u003d\u003d null) { \n     //doesn\u0027t exist, default value? exception?, do we want to handle that ?\n   }\n   if ($this-\u003eisBetaGroupMemeber() \u0026\u0026 array_key_exists(\u0027beta\u0027, $configVars) {\n     return $configVars[\u0027beta\u0027];\n   }\n   return $configVars[\u0027base\u0027];\n}\n\nthen this function gets super simple:\n\npublic function shouldShowFirstParagraphBeforeInfobox() {\n    if ($this-\u003eshowFirstParagraphBeforeInfobox \u003d\u003d\u003d null) {\n      $this-\u003eshowFirstParagraphBeforeInfobox \u003d $this-\u003egetSystemConfigVariable(\u0027MFShowFirstParagraphBeforeInfobox\u0027);\n    }\n    return $this-\u003eshowFirstParagraphBeforeInfobox;\n}",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_5aeb150a",
        "filename": "includes/MobileContext.php",
        "patchSetId": 5
      },
      "lineNbr": 200,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-10-19T00:43:15Z",
      "side": 1,
      "message": "I think this a good optimization, but given that we maybe getting rid of the beta mode, this change may not be necessary. Let\u0027s hear what other devs have to say about this.",
      "parentUuid": "cea0dbb8_efffcdfa",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_5b82f498",
        "filename": "includes/MobileContext.php",
        "patchSetId": 5
      },
      "lineNbr": 200,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-10-19T21:41:52Z",
      "side": 1,
      "message": "I\u0027ve not heard any recent conversations (nor have I see a recent card) about removing beta mode and we should work on the assumption this code is not going anywhere fast until there is a declaration otherwise. I agree it would be nice to explore a better approach to this given we use this so frequently now - it would tidy up a lot of our code and now seems a good enough time as any to do that rather than add to it.",
      "parentUuid": "cea0dbb8_5aeb150a",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_749cb05f",
        "filename": "includes/MobileFormatter.php",
        "patchSetId": 5
      },
      "lineNbr": 150,
      "author": {
        "id": 3945
      },
      "writtenOn": "2016-10-18T21:18:02Z",
      "side": 1,
      "message": "It would be nice to add \u0027showFirstSectionBeforeInfobox\u0027 as a constant, lets call it TRANSFORMER_SHOW_FIRST_SECTION_BEFORE_INFOBOX and use it below (more than 2 uses of same string might lead to silly typos)",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_bad2215c",
        "filename": "includes/MobileFormatter.php",
        "patchSetId": 5
      },
      "lineNbr": 150,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-10-19T00:43:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cea0dbb8_749cb05f",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_7ab0193f",
        "filename": "includes/MobileFormatter.php",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-10-18T21:50:42Z",
      "side": 1,
      "message": "I\u0027m a little confused with what\u0027s happening here given you find the infobox but then you iterate through all the nodes to find it again. Do you use this just to avoid iterating through the section unnecessarily?\n\nCould you use this node to work out where the infobox appears in the DOM?\n\nSimilarly could you find the first non empty P node using a xpath query rather than iterating through the NodeList?",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_dae3a59b",
        "filename": "includes/MobileFormatter.php",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-10-19T00:43:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cea0dbb8_7ab0193f",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_54ee4cb2",
        "filename": "includes/MobileFormatter.php",
        "patchSetId": 5
      },
      "lineNbr": 206,
      "author": {
        "id": 3945
      },
      "writtenOn": "2016-10-18T21:18:02Z",
      "side": 1,
      "message": "It took me a while to findout that this variable is `$firstPAfterInbox`, not just `$firstP`. Maybe it\u0027s worth to change the name ?",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_1a334dc2",
        "filename": "includes/MobileFormatter.php",
        "patchSetId": 5
      },
      "lineNbr": 206,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-10-19T00:43:15Z",
      "side": 1,
      "message": "Actually, this paragraph can come before any infoboxes. It is first non-empty, non-coordinates paragraph though. I\u0027ll add a comment to clarify.",
      "parentUuid": "cea0dbb8_54ee4cb2",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_ef1a2dd0",
        "filename": "includes/MobileFormatter.php",
        "patchSetId": 5
      },
      "lineNbr": 208,
      "author": {
        "id": 3945
      },
      "writtenOn": "2016-10-18T21:18:02Z",
      "side": 1,
      "message": "Sometimes you type \n \n  if ($infoboxes-\u003elength)\n\nand sometimes\n\n  if ($xpath-\u003equery(.....)-\u003elength \u003e 0)\n\n\nConsistency is the key",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_fa6b09ed",
        "filename": "includes/MobileFormatter.php",
        "patchSetId": 5
      },
      "lineNbr": 208,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-10-19T00:43:15Z",
      "side": 1,
      "message": "Good catch.",
      "parentUuid": "cea0dbb8_ef1a2dd0",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_f4b680d6",
        "filename": "includes/MobileFormatter.php",
        "patchSetId": 5
      },
      "lineNbr": 210,
      "author": {
        "id": 3945
      },
      "writtenOn": "2016-10-18T21:18:02Z",
      "side": 1,
      "message": "On line 222 you\u0027re already doing a `break;` statement, you won\u0027t do more loops when you already have `$firstP`, `!$fistP` check is not necessary",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_744030a9",
        "filename": "includes/MobileFormatter.php",
        "patchSetId": 5
      },
      "lineNbr": 223,
      "author": {
        "id": 3945
      },
      "writtenOn": "2016-10-18T21:18:02Z",
      "side": 1,
      "message": "First write for humans, then for computers. It would be nice to have an function:\n\nprivate function isInfoboxNode($node) {\n  return $node-\u003enodeName \u003d\u003d \u0027table\u0027 \n    \u0026\u0026  $node-\u003ehasAttribute( \u0027class\u0027 ) \n    \u0026\u0026 strpos( $node-\u003egetAttribute( \u0027class\u0027 ), \u0027infobox\u0027 ) !\u003d\u003d false;\n}\n\nand then use it in the way :\n\n  } elseif (!$infobox \u0026\u0026 $this-\u003eisInfoboxNode($childNode) {\n\nIt will be much easier to understand what code is doing (now we have to read all checks.",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_faa309fc",
        "filename": "includes/MobileFormatter.php",
        "patchSetId": 5
      },
      "lineNbr": 223,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-10-18T21:50:42Z",
      "side": 1,
      "message": "+1 to this idea (either function or variable)\n\n(and also for the first if statement which is also not clear at first glance\nisFirstNonEmptyParagraph)",
      "parentUuid": "cea0dbb8_744030a9",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_1a9fcdba",
        "filename": "tests/phpunit/MobileFormatterTest.php",
        "patchSetId": 5
      },
      "lineNbr": 313,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-10-18T21:50:42Z",
      "side": 1,
      "message": "typo",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_5a85559e",
        "filename": "tests/phpunit/MobileFormatterTest.php",
        "patchSetId": 5
      },
      "lineNbr": 313,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-10-19T00:43:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cea0dbb8_1a9fcdba",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_ba84615f",
        "filename": "tests/phpunit/MobileFormatterTest.php",
        "patchSetId": 5
      },
      "lineNbr": 328,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-10-18T21:50:42Z",
      "side": 1,
      "message": "You can use SECTION_INDICATOR constant which will protect you if the implementation of this ever changes.\n\n(PS. it\u0027s a shame we have to worry about this in the formatter tests :/)\n\nSame applies to section-heading but no constant exists for that.\n\nA helper might be useful here to future proof this and make it more readable. Especially given the recent conversations around sections and details tags.\n\ne.g. sectionHtml( title, text, sectionNumber );",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_7a97f993",
        "filename": "tests/phpunit/MobileFormatterTest.php",
        "patchSetId": 5
      },
      "lineNbr": 339,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-10-18T21:50:42Z",
      "side": 1,
      "message": "See note below about infobox - same question applies here.",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_9a9abdbc",
        "filename": "tests/phpunit/MobileFormatterTest.php",
        "patchSetId": 5
      },
      "lineNbr": 340,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-10-18T21:50:42Z",
      "side": 1,
      "message": "Since this is repeated in multiple tests and given that it is community created/curated content consider using a content in case we ever need to change the test.\n\nFor example what would happen if the community renamed infobox class to infobox-v2 ?",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_d51b7672",
        "filename": "tests/phpunit/MobileFormatterTest.php",
        "patchSetId": 5
      },
      "lineNbr": 340,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-10-19T00:43:15Z",
      "side": 1,
      "message": "What do you mean by \"consider using a content\"? Is there a typo?",
      "parentUuid": "cea0dbb8_9a9abdbc",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea0dbb8_bb7b40bd",
        "filename": "tests/phpunit/MobileFormatterTest.php",
        "patchSetId": 5
      },
      "lineNbr": 340,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-10-19T21:41:52Z",
      "side": 1,
      "message": "Sorry. I meant \"using a constant\"",
      "parentUuid": "cea0dbb8_d51b7672",
      "revId": "f05043d4b6adc9a95c16825378980f37d396fbe7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}