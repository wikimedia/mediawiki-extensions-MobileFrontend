{
  "comments": [
    {
      "key": {
        "uuid": "9139141a_5985d77b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 17,
      "author": {
        "id": 2426
      },
      "writtenOn": "2019-01-02T22:17:05Z",
      "side": 1,
      "message": "I\u0027m not sure if this is point 3 below so please excuse this comment but have you thought of adding some detail here and especially in webpack.config.js about why this common chunk wasn\u0027t merged into mobile.startup directly. As I understand it, we just haven\u0027t figured out how to configure Webpack to do this. It could be useful to keep this code split out if there are caching differences in the future but it doesn\u0027t seem desirable at the moment.",
      "range": {
        "startLine": 15,
        "startChar": 2,
        "endLine": 17,
        "endChar": 72
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df691793_cb74c5a5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 17,
      "author": {
        "id": 6176
      },
      "writtenOn": "2019-01-03T20:02:44Z",
      "side": 1,
      "message": "That\u0027s correct (ideally it would merged into mobile.startup and not exist). I added a comment to the commit msg and to webpack.config.js about this.",
      "parentUuid": "9139141a_5985d77b",
      "range": {
        "startLine": 15,
        "startChar": 2,
        "endLine": 17,
        "endChar": 72
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2973d0a_9bee5bf1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 24,
      "author": {
        "id": 2426
      },
      "writtenOn": "2019-01-02T22:17:05Z",
      "side": 1,
      "message": "Sorry, but where is this change? This would add a lot of verbosity to the builds. If this is useful, can we put it behind a `VERBOSE` command line flag? Here\u0027s an example from a past project: https://gerrit.wikimedia.org/r/plugins/gitiles/marvin/+/master/src/common/assets/config.ts#4",
      "range": {
        "startLine": 22,
        "startChar": 2,
        "endLine": 24,
        "endChar": 24
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c87a912_846932e7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 24,
      "author": {
        "id": 6176
      },
      "writtenOn": "2019-01-03T20:02:44Z",
      "side": 1,
      "message": "Previously, I removed the line `all: false` line in the stats object to turn on the stats but looking at the webpack docs, I don\u0027t think that is the best way to do it. I removed that change in the latest ps, but may make another patch that does what you suggest",
      "parentUuid": "b2973d0a_9bee5bf1",
      "range": {
        "startLine": 22,
        "startChar": 2,
        "endLine": 24,
        "endChar": 24
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ba002ac_289bf94a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 41,
      "author": {
        "id": 2426
      },
      "writtenOn": "2019-01-02T22:17:05Z",
      "side": 1,
      "message": "This is the case where module A and module B don\u0027t happen to share common code with mobile.startup (mobile.startup is always loaded but doesn\u0027t happen to be used by A or B) but do share code with each other? Do you think we should create a spike for this or only when needed?",
      "range": {
        "startLine": 41,
        "startChar": 14,
        "endLine": 41,
        "endChar": 41
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03556986_fcf4f01e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 41,
      "author": {
        "id": 6176
      },
      "writtenOn": "2019-01-03T20:02:44Z",
      "side": 1,
      "message": "I looked into this and webpack will excise any modules common between A and B (but also not in mobile.startup) into mobile.common. However, I haven\u0027t found a scenario where this would happen yet in MF.  The \u0027mobile.editor.common\u0027 module might be a candidate given that it is a dependency of other modules like \u0027mobile.categories.overlay\u0027 but that module is only using a template so I\u0027m not sure it would be affected. \n\nGiven this, I suggest that we be aware of this possibility in the future when migrating other lazy loaded modules but a spike to investigate this rn seems a little premature to me. I think a better use of time would be to see if we can overcome lazy loading with webpack hurdles.",
      "parentUuid": "5ba002ac_289bf94a",
      "range": {
        "startLine": 41,
        "startChar": 14,
        "endLine": 41,
        "endChar": 41
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "147f8c94_6df251a7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 59,
      "author": {
        "id": 2426
      },
      "writtenOn": "2019-01-02T22:17:05Z",
      "side": 1,
      "message": "As above, is it important to track this work or should we punt on it?",
      "range": {
        "startLine": 59,
        "startChar": 33,
        "endLine": 59,
        "endChar": 62
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6883a9b_38b4193b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 59,
      "author": {
        "id": 6176
      },
      "writtenOn": "2019-01-03T20:02:44Z",
      "side": 1,
      "message": "I think it would be helpful and is important to investigate the hurdles (especially regarding caching) with webpack lazy loading now and will make a card for it.",
      "parentUuid": "147f8c94_6df251a7",
      "range": {
        "startLine": 59,
        "startChar": 33,
        "endLine": 59,
        "endChar": 62
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bd5a575_4f23ae57",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 59,
      "author": {
        "id": 6176
      },
      "writtenOn": "2019-01-03T23:47:06Z",
      "side": 1,
      "message": "Ticket created at https://phabricator.wikimedia.org/T212913",
      "parentUuid": "b6883a9b_38b4193b",
      "range": {
        "startLine": 59,
        "startChar": 33,
        "endLine": 59,
        "endChar": 62
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a5dae50_e5507d24",
        "filename": "includes/MobileFrontend.hooks.php",
        "patchSetId": 8
      },
      "lineNbr": 360,
      "author": {
        "id": 2426
      },
      "writtenOn": "2019-01-02T22:17:05Z",
      "side": 1,
      "message": "Should this be wrapped in a hasTests consditional?",
      "range": {
        "startLine": 356,
        "startChar": 0,
        "endLine": 360,
        "endChar": 50
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d503e47d_74abcdf2",
        "filename": "includes/MobileFrontend.hooks.php",
        "patchSetId": 8
      },
      "lineNbr": 360,
      "author": {
        "id": 6176
      },
      "writtenOn": "2019-01-03T20:02:44Z",
      "side": 1,
      "message": "Can you clarify why you think it should be wrapped? I was thinking it shouldn\u0027t be wrapped in any conditional as we know \u0027mobile.languages.structured\u0027 has tests but it was not being loaded by tests.mobilefrontend.js because it wasn\u0027t added as a dependency. \n\nAs an aside, I changed the grouping of this in latest patchset to make it more clear that this dependency is needed by tests.mobilefrontend.js.",
      "parentUuid": "4a5dae50_e5507d24",
      "range": {
        "startLine": 356,
        "startChar": 0,
        "endLine": 360,
        "endChar": 50
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf9ce9d9_b1450d05",
        "filename": "includes/MobileFrontend.hooks.php",
        "patchSetId": 8
      },
      "lineNbr": 360,
      "author": {
        "id": 2426
      },
      "writtenOn": "2019-01-04T19:55:23Z",
      "side": 1,
      "message": "I was confused by the code above it:\n\n // if test files exist for given module, create a corresponding test module\n if ( $hasTests ) {\n \t$dependencies[] \u003d $key;\n }\n\nI guess in this case we\u0027re hardcoding that it has tests?",
      "parentUuid": "d503e47d_74abcdf2",
      "range": {
        "startLine": 356,
        "startChar": 0,
        "endLine": 360,
        "endChar": 50
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc683ef2_3336c70c",
        "filename": "includes/MobileFrontend.hooks.php",
        "patchSetId": 8
      },
      "lineNbr": 360,
      "author": {
        "id": 94
      },
      "writtenOn": "2019-01-04T20:55:13Z",
      "side": 1,
      "message": "Good catch Stephen.\n\nThis can actually be dropped entirely.\n\nresources/dist/tests.mobilefrontend.js is a ___complete___ webpack bundle for all the tests and without code splitting and will include the required code from mobile.languages.structured.\n\nRemember.. we\u0027re using file import/export paths and mobile.languages.structured only provides a M.define export that is unused in tests.\n\nYou can see this for yourself by visiting Special:JavaScript/qunit and seeing the tests appear.",
      "parentUuid": "bf9ce9d9_b1450d05",
      "range": {
        "startLine": 356,
        "startChar": 0,
        "endLine": 360,
        "endChar": 50
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0189b475_5642c038",
        "filename": "src/mobile.languages.structured/mobile.languages.structured.js",
        "patchSetId": 8
      },
      "lineNbr": 4,
      "author": {
        "id": 2426
      },
      "writtenOn": "2019-01-02T22:17:05Z",
      "side": 1,
      "message": "Should we use a `module.exports` here like we do in mobile.startup.js?",
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aef75639_294b73a8",
        "filename": "src/mobile.languages.structured/mobile.languages.structured.js",
        "patchSetId": 8
      },
      "lineNbr": 4,
      "author": {
        "id": 6176
      },
      "writtenOn": "2019-01-03T20:02:44Z",
      "side": 1,
      "message": "Done in latest ps.",
      "parentUuid": "0189b475_5642c038",
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bccbbe6a_cf38d23c",
        "filename": "webpack.config.js",
        "patchSetId": 8
      },
      "lineNbr": 17,
      "author": {
        "id": 2426
      },
      "writtenOn": "2019-01-02T22:17:05Z",
      "side": 1,
      "message": "Have you considered making constants for the entries instead of the list? `\u0027mobile.startup\u0027` and `\u0027mobile.languages.structured\u0027` appear in multiple places  and SPLIT_CHUNKS_WHITELIST is only in one.",
      "range": {
        "startLine": 17,
        "startChar": 1,
        "endLine": 17,
        "endChar": 23
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75646e2f_a35b18b2",
        "filename": "webpack.config.js",
        "patchSetId": 8
      },
      "lineNbr": 17,
      "author": {
        "id": 6176
      },
      "writtenOn": "2019-01-03T20:02:44Z",
      "side": 1,
      "message": "Done in latest ps.",
      "parentUuid": "bccbbe6a_cf38d23c",
      "range": {
        "startLine": 17,
        "startChar": 1,
        "endLine": 17,
        "endChar": 23
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "692373f0_1e3f88b8",
        "filename": "webpack.config.js",
        "patchSetId": 8
      },
      "lineNbr": 79,
      "author": {
        "id": 2426
      },
      "writtenOn": "2019-01-02T22:17:05Z",
      "side": 1,
      "message": "Would you mind adding some more comments to this guy and its properties? As I understand it, splitChunks.cacheGroups.default \u003d false is necessary to disable specific Webpack defaults, vendors \u003d false is to prevent external libraries from being coalesced into chunks (do we want this?), and common is the shared code (common to two or more entries in this case).\n\nI apologize if this is over-scrutinizing. I\u0027m trying to keep the comments in this file up to date and verbose because I don\u0027t enjoy Webpack.",
      "range": {
        "startLine": 79,
        "startChar": 2,
        "endLine": 79,
        "endChar": 13
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cabfc0e_4bad709e",
        "filename": "webpack.config.js",
        "patchSetId": 8
      },
      "lineNbr": 79,
      "author": {
        "id": 6176
      },
      "writtenOn": "2019-01-03T20:02:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "692373f0_1e3f88b8",
      "range": {
        "startLine": 79,
        "startChar": 2,
        "endLine": 79,
        "endChar": 13
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41ee0cbc_c90599b6",
        "filename": "webpack.config.js",
        "patchSetId": 8
      },
      "lineNbr": 146,
      "author": {
        "id": 2426
      },
      "writtenOn": "2019-01-02T22:17:05Z",
      "side": 1,
      "message": "Can this be reduced now?",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 33
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "355720c6_27e139fb",
        "filename": "webpack.config.js",
        "patchSetId": 8
      },
      "lineNbr": 146,
      "author": {
        "id": 6176
      },
      "writtenOn": "2019-01-03T20:02:44Z",
      "side": 1,
      "message": "Reduced in latest ps",
      "parentUuid": "41ee0cbc_c90599b6",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 33
      },
      "revId": "d36e0422254ad4e9af7fb8b1bde1d04695855de8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}