{
  "comments": [
    {
      "key": {
        "uuid": "aebe47e0_0f1c2b69",
        "filename": "includes/api/ApiWebappManifest.php",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-11-28T18:57:30Z",
      "side": 1,
      "message": "This is an interesting way of doing this that I hadn\u0027t thought of.\n\nThe downsides of using the API seem to be\n1) It\u0027s a very specific use case - is there any reason to call this API outside the context of the skin?\n2) The API has little caching so doing this for every page view is likely to cause some performance degradation.\n3) The API is meant to support other format types such as xml.\n\nThat said given this content will not change and should be customisable on a site basis it feels to me like it would make more sense for the repo to have a static json.\n\nYou could use a $wgMFManifestUrl config value to define a manifest file and by default point to one in the MobileFrontend repo.\n\nWhat do you think?",
      "revId": "a42ba7abe739beda2de40c06ef3847f891dd5692",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aebe47e0_8fccbb8d",
        "filename": "includes/api/ApiWebappManifest.php",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1837
      },
      "writtenOn": "2016-11-28T19:20:27Z",
      "side": 1,
      "message": "While I agree this is a very specific use of the API, I also think someone who installs the MobileFrontend extension might want to have a full out of the box mobile experience (and does not necessarily know how to create a webapp manifest).\n\n1) Having it available as an API means that other skins can use it.\n2) I don\u0027t think it is retrieved on each page view, only once when the user adds the webapp to its home screen.\n3) The other formats have been disabled by using getCustomPrinter() (see patch set 3)",
      "parentUuid": "aebe47e0_0f1c2b69",
      "revId": "a42ba7abe739beda2de40c06ef3847f891dd5692",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aebe47e0_2f536f45",
        "filename": "includes/api/ApiWebappManifest.php",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-11-28T19:47:38Z",
      "side": 1,
      "message": "that\u0027s fair.. but I think the same out the box experience can be achieved with a static json?\n\n#1 is true - but we\u0027d need to allow skins hooks/configuration options to change the other values in the manifest. For instance the theme_color would change depending on skin.",
      "parentUuid": "aebe47e0_8fccbb8d",
      "revId": "a42ba7abe739beda2de40c06ef3847f891dd5692",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aebe47e0_d647f57a",
        "filename": "includes/api/ApiWebappManifest.php",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 3
      },
      "writtenOn": "2016-11-26T17:31:15Z",
      "side": 1,
      "message": "Any reason they\u0027re hardcoded?",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 23,
        "endChar": 62
      },
      "revId": "a42ba7abe739beda2de40c06ef3847f891dd5692",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aebe47e0_96297d9d",
        "filename": "includes/api/ApiWebappManifest.php",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1837
      },
      "writtenOn": "2016-11-26T17:47:25Z",
      "side": 1,
      "message": "Do you think users should be able to customise it in their LocalSettings.php file?",
      "parentUuid": "aebe47e0_d647f57a",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 23,
        "endChar": 62
      },
      "revId": "a42ba7abe739beda2de40c06ef3847f891dd5692",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aebe47e0_b64c81a0",
        "filename": "includes/api/ApiWebappManifest.php",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 3
      },
      "writtenOn": "2016-11-26T17:31:15Z",
      "side": 1,
      "message": "Do we want to set sizes and types?",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 39,
        "endChar": 3
      },
      "revId": "a42ba7abe739beda2de40c06ef3847f891dd5692",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aebe47e0_3659915e",
        "filename": "includes/api/ApiWebappManifest.php",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 1837
      },
      "writtenOn": "2016-11-26T17:47:25Z",
      "side": 1,
      "message": "It would be better to have them, but do we have have a way to retrieve this information ?",
      "parentUuid": "aebe47e0_b64c81a0",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 39,
        "endChar": 3
      },
      "revId": "a42ba7abe739beda2de40c06ef3847f891dd5692",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aebe47e0_8f683b86",
        "filename": "includes/api/ApiWebappManifest.php",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 3
      },
      "writtenOn": "2016-11-28T19:12:42Z",
      "side": 1,
      "message": "MW has many ways of interacting with files; just how it displays them on file pages",
      "parentUuid": "aebe47e0_3659915e",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 39,
        "endChar": 3
      },
      "revId": "a42ba7abe739beda2de40c06ef3847f891dd5692",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aebe47e0_277ca6b3",
        "filename": "includes/api/ApiWebappManifest.php",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 1837
      },
      "writtenOn": "2016-11-30T11:20:26Z",
      "side": 1,
      "message": "We have classes like MimeAnalyzer but they seem to work only with local files and I think $wgLogo can be a distant file.",
      "parentUuid": "aebe47e0_8f683b86",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 39,
        "endChar": 3
      },
      "revId": "a42ba7abe739beda2de40c06ef3847f891dd5692",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ed34346_4a94638d",
        "filename": "includes/api/ApiWebappManifest.php",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-11-30T22:07:05Z",
      "side": 1,
      "message": "Sorry just saw this thread - see my comment on the latest patchset - we should assume a size for AppleTouchIcon as it\u0027s only used for the purpose of showing an icon on ios/android.\n\na future patchset can explicitly allow the setting of a size by introducing\nhttps://www.mediawiki.org/wiki/Manual:$wgAppleTouchIconSize\n\nFYI https://www.wikipedia.org/static/apple-touch/wikipedia.png is 144x144.\n\nIn mean time we can update:\nhttps://www.mediawiki.org/wiki/Manual:$wgAppleTouchIcon\nto say the size should be at least 144X144 - any larger ones will be scaled down without loss of quality.",
      "parentUuid": "aebe47e0_277ca6b3",
      "revId": "a42ba7abe739beda2de40c06ef3847f891dd5692",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}