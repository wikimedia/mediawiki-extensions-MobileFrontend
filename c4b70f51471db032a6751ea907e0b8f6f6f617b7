{
  "comments": [
    {
      "key": {
        "uuid": "2e4df70f_cf6e5693",
        "filename": "includes/MobileFrontend.hooks.php",
        "patchSetId": 1
      },
      "lineNbr": 1361,
      "author": {
        "id": 94
      },
      "writtenOn": "2017-04-28T23:54:18Z",
      "side": 1,
      "message": "Hey @krinkle\n\nAny idea why wfLoadSkin doesn\u0027t work here?\n\nI was hoping to accelerate making Minerva an official skin by making it a submodule of MobileFrontend.\n\nI\u0027d obviously need to setup i18n for Minerva before doing this officially, but this seems to be my main blocker now..",
      "revId": "c4b70f51471db032a6751ea907e0b8f6f6f617b7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e4df70f_4fa566b0",
        "filename": "includes/MobileFrontend.hooks.php",
        "patchSetId": 1
      },
      "lineNbr": 1361,
      "author": {
        "id": 34
      },
      "writtenOn": "2017-04-29T01:30:12Z",
      "side": 1,
      "message": "Define \"doesn\u0027t work\". I assume you\u0027re not getting an uncaught PHP exception from this exact line.\n\nHowever looking a bit further, one thing that comes to mind is that while this function takes a custom path, skin.json itself is not aware of that. It uses \"remoteSkinPath\": \"MinervaNeue\" which will map to \"$wgStyleDirectory/MinervaNeue\" which presumably doesn\u0027t exist (where $wgStyleDirectory\u003d$IP/skins).\n\nI don\u0027t think doing this will accelerate anything. Rather, a submodule will likely incur more technical debt for no added value in the meantime.\n\nWhat\u0027s wrong with just creating a new skin repo and having it be part of the release cycle?\n\nIf you want to practice isolation, I\u0027d just move it to a directory here in the extension, move some files around and enforce socially that it doesn\u0027t use any methods, classes or variables from MobileFrontend.\n\nThen create an empty mediawiki/skins/MinervaNeueu repo, have it be deployed in beta and wmf, have MF Jenkins jobs depend on it, and then moving code to it and use it from there instead or whatever you have in mind.",
      "parentUuid": "2e4df70f_cf6e5693",
      "revId": "c4b70f51471db032a6751ea907e0b8f6f6f617b7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e4df70f_7fd48b4b",
        "filename": "includes/MobileFrontend.hooks.php",
        "patchSetId": 1
      },
      "lineNbr": 1361,
      "author": {
        "id": 94
      },
      "writtenOn": "2017-05-01T15:10:34Z",
      "side": 1,
      "message": "Yeh it doesn\u0027t load.\n\u003eI don\u0027t think doing this will accelerate anything. Rather, a submodule will likely incur more technical debt for no added value in the meantime.\nSure. My main motivation for exploring this was that this is a breaking change as existing users of MobileFrontend will also have to install the Minerva skin. I remember how pulling out Vector from core got lots of complaints on the mailing list so was trying to find something with less friction. Any lessons learned from that? (Have added Bartosz in case he has some views)",
      "parentUuid": "2e4df70f_4fa566b0",
      "revId": "c4b70f51471db032a6751ea907e0b8f6f6f617b7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e4df70f_bc8534a1",
        "filename": "includes/MobileFrontend.hooks.php",
        "patchSetId": 1
      },
      "lineNbr": 1361,
      "author": {
        "id": 34
      },
      "writtenOn": "2017-05-03T02:04:32Z",
      "side": 1,
      "message": "Ideally no renaming of classes unless it is intended that all existing references, sub classes, method calls,  hooks, permalinks, user preferences etc will break (e.g. renaming from minerva to minervaneue will break all these things).\n\nIncluding for example a site admins\u0027 restriction on which skins are allowed and such. If such rename is desired probably best done within MobileFrontend in one release cycle (e.g. 1.30) and then move out in the next release cycle (1.31).\n\nAs for how to move it out, I think it\u0027s best to just do it. Create the separate repo, add a run-time check here in MobileFrontend that Minerva must be installed (pretty straight forward).\n\nSince branching naturally happens, this will just be something site-admins have to do when upgrading from 1.29 to 1.30 and they\u0027ll discover it naturally if a useful error message is provided. Presumably equally complicated as how they updated MobileFrontend from 1.29 to 1.30 (whether it be a git clone/git checkout, or download from extensiondistributor; both can be methods of updating MF and adding a new skin).\n\nSo I\u0027d make sure that the new skin has a page on mediawiki.org and a REL1_30 branch by the time the next release gets branched, and make sure that ExtensionDistributor supports it, similar to how it supports MF to be downloaded through it, and the run-time check with descriptive error message. Presumably from either an ExtensionRegistration callback, or from wgExtensionFunctions callback.",
      "parentUuid": "2e4df70f_7fd48b4b",
      "revId": "c4b70f51471db032a6751ea907e0b8f6f6f617b7",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}