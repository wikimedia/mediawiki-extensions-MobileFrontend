{
  "comments": [
    {
      "key": {
        "uuid": "8e28a382_509a29be",
        "filename": "includes/specials/SpecialUploads.php",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 94
      },
      "writtenOn": "2014-08-14T22:44:16Z",
      "side": 1,
      "message": "Note sure about this logic.\n\nIsn\u0027t this essentially what this should be saying?:\n\n\n// upload to local wiki case\n(UploadBase::isEnabled() \u0026\u0026UploadBase::isallowed( $user ) )\n||\n// upload to endpoint case\n!empty( $wgMFPhotoUploadEndpoint ) \u0026\u0026\n$mobileContext-\u003euserCanUpload()",
      "revId": "f71321bc2de343c85761e56f5db5b13c9c54b884",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e28a382_908771dc",
        "filename": "includes/specials/SpecialUploads.php",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 890
      },
      "writtenOn": "2014-08-15T00:21:03Z",
      "side": 1,
      "message": "I think no.\n\nI will use:\nendpoint \u003d $wgMFPhotoUploadEndpoint\ncontext \u003d $mobileContext-\u003euserCanUpload()\nuploadbase \u003d UploadBase::isEnabled() \u0026\u0026UploadBase::isallowed( $user )\n\nJust to clarify.\n\nIn your example you combine endpoint and context, but not uploadbase and context. This would allow all users to upload on Commons through Special:Uploads (no endpoint, uploadbase true), still when context say no (false). We need to combine context right check with endpoint AND uploadbase :) So we must check if ( uploadbase is true OR endpoint isn\u0027t empty ) AND context right is true. If context right is false, there is (for our check) no matter, if uploadbase or endpoint is true (or both).",
      "parentUuid": "8e28a382_509a29be",
      "revId": "f71321bc2de343c85761e56f5db5b13c9c54b884",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e28a382_f08915cc",
        "filename": "includes/specials/SpecialUploads.php",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 94
      },
      "writtenOn": "2014-08-15T00:23:49Z",
      "side": 1,
      "message": "I can\u0027t realy think straight today but when $wgMFPhotoUploadEndpoint  is empty this means uploads go to the local wiki. I\u0027m not sure what the behaviour there should be.\n\nMaybe clarifying the if function with some nicely named variables will make things less confusing.",
      "parentUuid": "8e28a382_908771dc",
      "revId": "f71321bc2de343c85761e56f5db5b13c9c54b884",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e28a382_704be588",
        "filename": "includes/specials/SpecialUploads.php",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 890
      },
      "writtenOn": "2014-08-15T00:34:38Z",
      "side": 1,
      "message": "\u003e but when $wgMFPhotoUploadEndpoint  is empty this means uploads go to the local wiki\n\nE.g. on commons directly :) There all images goes to the local wiki, and there we wan\u0027t to have the restriction to edits, too. Maybe this little integer example helps to understand what i think :)\n\u003e Maybe clarifying the if function with some nicely named variables\nYou mean in code?\n\n(first condition says if the user can upload to local wiki, second says that the upload goes to commons, third means the user is allowed (or not) to use mobile uploads.\n\nExamples:\nenwiki (local uploads are allowed but goes to commons):\ntrue \u0026\u0026\ntrue ||\nfalse\n\nreturns true\n(should return false, user isn\u0027t allowed (editcount))\n\nenwiki2:\ntrue \u0026\u0026\ntrue ||\ntrue\n\nreturns true\n(should return true)\n\ncommonswiki:\ntrue \u0026\u0026\nfalse ||\nfalse;\n\nreturns false\n(should return false)\n\ncommonswiki2:\ntrue \u0026\u0026\nfalse ||\ntrue;\n\nreturns true\n(should return true)",
      "parentUuid": "8e28a382_f08915cc",
      "revId": "f71321bc2de343c85761e56f5db5b13c9c54b884",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}