{
  "comments": [
    {
      "key": {
        "uuid": "6ec1af18_ef055ec5",
        "filename": "resources/mobile.search/SearchApi.js",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 94
      },
      "writtenOn": "2015-08-24T21:49:18Z",
      "side": 1,
      "message": "I\u0027m a little confused what\u0027s happening here. By moving here it suggests you want to extend this private function - but that\u0027s not allowed in true class inheritance models (we have a few bad examples in MobileFrontend that do this but we should be moving away from those). It would be good to see an example of what you have in mind.\n\nI\u0027d rather see us standardise on some consistent API responses for search results and make WikidataApi change the result of getApiData via a config variable as otherwise every single thing that uses search will need to be rewritten for Wikidata...",
      "revId": "768c86255bf09636e01f2c30b7e832d523a8435e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_3d9e3f67",
        "filename": "resources/mobile.search/SearchApi.js",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 549
      },
      "writtenOn": "2015-08-25T11:35:43Z",
      "side": 1,
      "message": "I intended to reuse `_highlightSearchTerm` in a subclass of this so that I don\u0027t have to duplicate that kind of code. I should call that method `@protected` then perhaps.\n\nThis patch mainly refactors some code into smaller methods and improves the general quality of this module. Furthermore, it makes it easier to extend this class.\n\nYou can see an example of how the extension of this module would look like here: https://phabricator.wikimedia.org/P1923\n\nGenerally spoken, it would indeed be nicer if we only had to change the parameters returned by `getApiData` but unfortunately, our api output is different to the one provided by MediaWiki search. Changing the output format of `wbsearchentities` is perhaps a no-go because it would break a bunch of tools and third party applications which rely on that module.",
      "parentUuid": "6ec1af18_ef055ec5",
      "revId": "768c86255bf09636e01f2c30b7e832d523a8435e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_56d3f32f",
        "filename": "resources/mobile.search/SearchApi.js",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 890
      },
      "writtenOn": "2015-08-24T18:29:51Z",
      "side": 1,
      "message": "It seems, that query isn\u0027t needed in processData?",
      "revId": "768c86255bf09636e01f2c30b7e832d523a8435e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_b68a571a",
        "filename": "resources/mobile.search/SearchApi.js",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 549
      },
      "writtenOn": "2015-08-24T18:31:57Z",
      "side": 1,
      "message": "It is, search for \"self._getPageData( query, info )\" or \"this._highlightSearchTerm( page.title, query )\"",
      "parentUuid": "6ec1af18_56d3f32f",
      "revId": "768c86255bf09636e01f2c30b7e832d523a8435e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_16900bf0",
        "filename": "resources/mobile.search/SearchApi.js",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 890
      },
      "writtenOn": "2015-08-24T19:00:14Z",
      "side": 1,
      "message": "Damn, sorry :)",
      "parentUuid": "6ec1af18_b68a571a",
      "revId": "768c86255bf09636e01f2c30b7e832d523a8435e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}