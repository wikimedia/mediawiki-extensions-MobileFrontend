{
  "comments": [
    {
      "key": {
        "uuid": "6e5a8fde_04b39de9",
        "filename": "resources/mobile.mediaViewer/ImageGateway.js",
        "patchSetId": 14
      },
      "lineNbr": 31,
      "author": {
        "id": 34
      },
      "writtenOn": "2017-11-07T21:09:47Z",
      "side": 1,
      "message": "Unused.",
      "range": {
        "startLine": 31,
        "startChar": 2,
        "endLine": 31,
        "endChar": 35
      },
      "revId": "23a6b196c7b418e43dd1647b1bb90a31c8988348",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e5a8fde_c4e345d3",
        "filename": "resources/mobile.nearby/NearbyGateway.js",
        "patchSetId": 14
      },
      "lineNbr": 146,
      "author": {
        "id": 34
      },
      "writtenOn": "2017-11-07T21:09:47Z",
      "side": 1,
      "message": "I don\u0027t think it was intentional to throw a Deferred object here. That\u0027d create some odd state for consumers of this promise chain where the error parameter would itself be a promise.\n\nEither throw an Error object and let jQuery.Deferred catch it and produce a rejected promise, or return (not throw) a rejected promise manually.",
      "range": {
        "startLine": 146,
        "startChar": 5,
        "endLine": 146,
        "endChar": 23
      },
      "revId": "23a6b196c7b418e43dd1647b1bb90a31c8988348",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}