{
  "comments": [
    {
      "key": {
        "uuid": "0e58336e_4e00b36d",
        "filename": "resources/mobile.references.gateway/ReferencesGateway.js",
        "patchSetId": 26
      },
      "lineNbr": 29,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-04-15T16:37:52Z",
      "side": 1,
      "message": "Why is this line here?",
      "revId": "b7086e0f6deff06d4117bd481afc75277bffd33d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee5cbf65_a8e7c30c",
        "filename": "resources/mobile.references.gateway/ReferencesGateway.js",
        "patchSetId": 26
      },
      "lineNbr": 29,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-04-18T10:45:02Z",
      "side": 1,
      "message": "This allows you to disable jcsc rules. It\u0027s needed as stuff below it would throw jscs errors but I\u0027ve decided jscs shouldn\u0027t run on this block.\n\nWhat happens if you remove it ? Can you see why I\u0027ve decided this necessary?",
      "parentUuid": "0e58336e_4e00b36d",
      "revId": "b7086e0f6deff06d4117bd481afc75277bffd33d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e58336e_2e1bbfd5",
        "filename": "resources/mobile.references.gateway/ReferencesGateway.js",
        "patchSetId": 26
      },
      "lineNbr": 36,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-04-15T16:37:52Z",
      "side": 1,
      "message": "... or the boolean `false`",
      "revId": "b7086e0f6deff06d4117bd481afc75277bffd33d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee5cbf65_28c3b362",
        "filename": "resources/mobile.references.gateway/ReferencesGateway.js",
        "patchSetId": 26
      },
      "lineNbr": 36,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-04-18T10:45:02Z",
      "side": 1,
      "message": "Nope it should always return a Promise.\nThe promise can resolve with false.",
      "parentUuid": "0e58336e_2e1bbfd5",
      "revId": "b7086e0f6deff06d4117bd481afc75277bffd33d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e58336e_8e392b41",
        "filename": "resources/mobile.references.gateway/ReferencesGateway.js",
        "patchSetId": 26
      },
      "lineNbr": 38,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-04-15T16:37:52Z",
      "side": 1,
      "message": "Should the arguments mentioned in the doc block above be added here too?",
      "revId": "b7086e0f6deff06d4117bd481afc75277bffd33d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee5cbf65_08f50fb6",
        "filename": "resources/mobile.references.gateway/ReferencesGateway.js",
        "patchSetId": 26
      },
      "lineNbr": 38,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-04-18T10:45:02Z",
      "side": 1,
      "message": "No because they are documented and that would throw a jshint error and the code is unnecessary o ship.",
      "parentUuid": "0e58336e_8e392b41",
      "revId": "b7086e0f6deff06d4117bd481afc75277bffd33d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e58336e_cef3239b",
        "filename": "resources/mobile.references.gateway/ReferencesGateway.js",
        "patchSetId": 26
      },
      "lineNbr": 39,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-04-15T16:37:52Z",
      "side": 1,
      "message": "I think the convention in core is to throw a new Error.",
      "revId": "b7086e0f6deff06d4117bd481afc75277bffd33d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee5cbf65_2d2105ad",
        "filename": "resources/mobile.references.gateway/ReferencesGateway.js",
        "patchSetId": 26
      },
      "lineNbr": 39,
      "author": {
        "id": 1196
      },
      "writtenOn": "2016-04-18T08:38:29Z",
      "side": 1,
      "message": "This is a good point (and a good convention).",
      "parentUuid": "0e58336e_cef3239b",
      "revId": "b7086e0f6deff06d4117bd481afc75277bffd33d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee5cbf65_88b8ffe3",
        "filename": "resources/mobile.references.gateway/ReferencesGateway.js",
        "patchSetId": 26
      },
      "lineNbr": 39,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-04-18T10:45:02Z",
      "side": 1,
      "message": "I\u0027ve never seen an interface in core, so wasn\u0027t quite sure what to do here.\n\nI agree throwing an Error rather than a string is the right thing to do but would it be better for me to leave an empty function body here?",
      "parentUuid": "ee5cbf65_2d2105ad",
      "revId": "b7086e0f6deff06d4117bd481afc75277bffd33d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e58336e_ae3fcf1f",
        "filename": "resources/mobile.references.gateway/ReferencesHtmlScraperGateway.js",
        "patchSetId": 26
      },
      "lineNbr": 22,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-04-15T16:37:52Z",
      "side": 1,
      "message": "As Sam pointed out earlier, both find and string concat is being used, which makes this comment hard to understand. Do you mean something else?",
      "revId": "b7086e0f6deff06d4117bd481afc75277bffd33d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee5cbf65_68bdabd1",
        "filename": "resources/mobile.references.gateway/ReferencesHtmlScraperGateway.js",
        "patchSetId": 26
      },
      "lineNbr": 22,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-04-18T10:45:02Z",
      "side": 1,
      "message": "errg this should not be here. Thanks for picking up, not sure how it sneaked back in.\nI don\u0027t think this comment is useful or needed.",
      "parentUuid": "0e58336e_ae3fcf1f",
      "revId": "b7086e0f6deff06d4117bd481afc75277bffd33d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e58336e_8e876bdc",
        "filename": "resources/mobile.references.gateway/ReferencesMobileViewGateway.js",
        "patchSetId": 26
      },
      "lineNbr": 70,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-04-15T16:37:52Z",
      "side": 1,
      "message": "Where else this cached value is being used? I see it\u0027s only used below, which can also use the original `id`.",
      "revId": "b7086e0f6deff06d4117bd481afc75277bffd33d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee5cbf65_e8c89b79",
        "filename": "resources/mobile.references.gateway/ReferencesMobileViewGateway.js",
        "patchSetId": 26
      },
      "lineNbr": 70,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-04-18T10:45:02Z",
      "side": 1,
      "message": "I\u0027m not sure what you are asking here and why.\n\nSee the comment above.\nWhy do you consider this a problem? What would make it clearer?",
      "parentUuid": "0e58336e_8e876bdc",
      "revId": "b7086e0f6deff06d4117bd481afc75277bffd33d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e58336e_2e829fcd",
        "filename": "resources/skins.minerva.scripts/references.js",
        "patchSetId": 26
      },
      "lineNbr": 19,
      "author": {
        "id": 1963
      },
      "writtenOn": "2016-04-15T16:37:52Z",
      "side": 1,
      "message": "else is not necessary.",
      "revId": "b7086e0f6deff06d4117bd481afc75277bffd33d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee5cbf65_68b48be5",
        "filename": "resources/skins.minerva.scripts/references.js",
        "patchSetId": 26
      },
      "lineNbr": 19,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-04-18T10:45:02Z",
      "side": 1,
      "message": "Okay I\u0027ll use a ternary - i guess this isn\u0027t as unreadable as I thought.",
      "parentUuid": "0e58336e_2e829fcd",
      "revId": "b7086e0f6deff06d4117bd481afc75277bffd33d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e58336e_4e49d369",
        "filename": "tests/qunit/mobile.references.gateway/test_ReferencesMobileViewGateway.js",
        "patchSetId": 26
      },
      "lineNbr": 46,
      "author": {
        "id": 1196
      },
      "writtenOn": "2016-04-15T15:16:10Z",
      "side": 1,
      "message": "Twice eh?",
      "revId": "b7086e0f6deff06d4117bd481afc75277bffd33d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee5cbf65_88af5f91",
        "filename": "tests/qunit/mobile.references.gateway/test_ReferencesMobileViewGateway.js",
        "patchSetId": 26
      },
      "lineNbr": 46,
      "author": {
        "id": 94
      },
      "writtenOn": "2016-04-18T10:45:02Z",
      "side": 1,
      "message": "Good catch :)",
      "parentUuid": "0e58336e_4e49d369",
      "revId": "b7086e0f6deff06d4117bd481afc75277bffd33d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}