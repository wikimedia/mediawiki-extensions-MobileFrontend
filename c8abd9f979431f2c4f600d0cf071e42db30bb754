{
  "comments": [
    {
      "key": {
        "uuid": "Dw3qgRkc",
        "filename": "includes/MobileFrontend.hooks.php",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-05-15T16:59:12Z",
      "side": 1,
      "message": "mw convention has no spaces after [ and before ]",
      "revId": "c8abd9f979431f2c4f600d0cf071e42db30bb754",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw1qlglQ",
        "filename": "includes/skins/SkinMobile.php",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-05-15T16:59:12Z",
      "side": 1,
      "message": "I have no idea what $mf means, please find a proper name",
      "revId": "c8abd9f979431f2c4f600d0cf071e42db30bb754",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw70QCFA",
        "filename": "includes/skins/SkinMobile.php",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 91
      },
      "writtenOn": "2013-05-15T17:24:41Z",
      "side": 1,
      "message": "in the context of mobilefrontend, mf means... mobile frontend; it\u0027s a widely used convention in this extension.",
      "parentUuid": "Dw1qlglQ",
      "revId": "c8abd9f979431f2c4f600d0cf071e42db30bb754",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw7qKzr4",
        "filename": "includes/skins/SkinMobile.php",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-05-15T16:59:12Z",
      "side": 1,
      "message": "Same for this thing. Why not name it $mobileContext?\n\nSingletons are very bad - they are global state in disguise. Putting them in constructors is especially bad, since now you can no longer construct this object without having it invoke the singleton and all the instantiation and other work that happens there. That means the code is basically impossible to test in isolation as you cannot mock out the thing being pulled in via the singleton.",
      "revId": "c8abd9f979431f2c4f600d0cf071e42db30bb754",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw5oMKkQ",
        "filename": "includes/skins/SkinMobile.php",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 91
      },
      "writtenOn": "2013-05-15T17:24:41Z",
      "side": 1,
      "message": "This is a model widely used throughout MobileFrontend; MobileContext was written specifically for this purpose and is safe to be used this way. While perhaps not the most widely accepted model in the PHP world, this has been an approach that\u0027s worked very well for us given the constraints of basically making a mobile-friendly site from within an extension (since there\u0027s none of this functionality built into core). If you look through the MobileContext code, you\u0027ll see that it basically only gets instantiated once (and at this point in the code path, it\u0027s already been instantiated), so there\u0027s not really much overhead here. So, in essence you\u0027re right, but in this particular case, it\u0027s not a problem - in fact, it\u0027s (imo) very well engineered given the constraints.",
      "parentUuid": "Dw7qKzr4",
      "revId": "c8abd9f979431f2c4f600d0cf071e42db30bb754",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw5qHCrg",
        "filename": "includes/skins/SkinMobile.php",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-05-15T16:59:12Z",
      "side": 1,
      "message": "The above if-else is also suspect as doing work inside of the constructor",
      "revId": "c8abd9f979431f2c4f600d0cf071e42db30bb754",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dwz38.Ag",
        "filename": "includes/skins/SkinMobile.php",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 91
      },
      "writtenOn": "2013-05-15T17:24:41Z",
      "side": 1,
      "message": "It would indeed be nice if this was moved to its own method and were testable.",
      "parentUuid": "Dw5qHCrg",
      "revId": "c8abd9f979431f2c4f600d0cf071e42db30bb754",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dwzq-3l8",
        "filename": "includes/skins/SkinMobile.php",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-05-15T16:59:12Z",
      "side": 1,
      "message": "Also looks like you have no tests for the new behaviour here",
      "revId": "c8abd9f979431f2c4f600d0cf071e42db30bb754",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}